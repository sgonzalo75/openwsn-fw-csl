   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"scheduler.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44              		.comm	scheduler_vars,128,4
  45              		.comm	scheduler_dbg,2,4
  46 002d 000000   		.text
  47              		.align	2
  48              		.global	scheduler_init
  49              		.thumb
  50              		.thumb_func
  52              	scheduler_init:
  53              	.LFB0:
  54              		.file 1 "kernel/openos/scheduler.c"
   1:kernel/openos/scheduler.c **** /**
   2:kernel/openos/scheduler.c **** \brief OpenOS scheduler.
   3:kernel/openos/scheduler.c **** 
   4:kernel/openos/scheduler.c **** \author Thomas Watteyne <watteyne@eecs.berkeley.edu>, February 2012.
   5:kernel/openos/scheduler.c **** */
   6:kernel/openos/scheduler.c **** 
   7:kernel/openos/scheduler.c **** #include "opendefs.h"
   8:kernel/openos/scheduler.c **** #include "scheduler.h"
   9:kernel/openos/scheduler.c **** #include "board.h"
  10:kernel/openos/scheduler.c **** #include "debugpins.h"
  11:kernel/openos/scheduler.c **** #include "leds.h"
  12:kernel/openos/scheduler.c **** 
  13:kernel/openos/scheduler.c **** //=========================== variables =======================================
  14:kernel/openos/scheduler.c **** 
  15:kernel/openos/scheduler.c **** scheduler_vars_t scheduler_vars;
  16:kernel/openos/scheduler.c **** scheduler_dbg_t  scheduler_dbg;
  17:kernel/openos/scheduler.c **** 
  18:kernel/openos/scheduler.c **** //=========================== prototypes ======================================
  19:kernel/openos/scheduler.c **** 
  20:kernel/openos/scheduler.c **** void consumeTask(uint8_t taskId);
  21:kernel/openos/scheduler.c **** 
  22:kernel/openos/scheduler.c **** //=========================== public ==========================================
  23:kernel/openos/scheduler.c **** 
  24:kernel/openos/scheduler.c **** void scheduler_init() {   
  55              		.loc 1 24 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 7, -8
  63              		.cfi_offset 14, -4
  64 0002 00AF     		add	r7, sp, #0
  65              	.LCFI1:
  66              		.cfi_def_cfa_register 7
  25:kernel/openos/scheduler.c ****    
  26:kernel/openos/scheduler.c ****    // initialization module variables
  27:kernel/openos/scheduler.c ****    memset(&scheduler_vars,0,sizeof(scheduler_vars_t));
  67              		.loc 1 27 0
  68 0004 40F20000 		movw	r0, #:lower16:scheduler_vars
  69 0008 C0F20000 		movt	r0, #:upper16:scheduler_vars
  70 000c 4FF00001 		mov	r1, #0
  71 0010 4FF08002 		mov	r2, #128
  72 0014 FFF7FEFF 		bl	memset
  28:kernel/openos/scheduler.c ****    memset(&scheduler_dbg,0,sizeof(scheduler_dbg_t));
  73              		.loc 1 28 0
  74 0018 40F20000 		movw	r0, #:lower16:scheduler_dbg
  75 001c C0F20000 		movt	r0, #:upper16:scheduler_dbg
  76 0020 4FF00001 		mov	r1, #0
  77 0024 4FF00202 		mov	r2, #2
  78 0028 FFF7FEFF 		bl	memset
  29:kernel/openos/scheduler.c ****    
  30:kernel/openos/scheduler.c ****    // enable the scheduler's interrupt so SW can wake up the scheduler
  31:kernel/openos/scheduler.c ****    SCHEDULER_ENABLE_INTERRUPT();
  32:kernel/openos/scheduler.c **** }
  79              		.loc 1 32 0
  80 002c 80BD     		pop	{r7, pc}
  81              		.cfi_endproc
  82              	.LFE0:
  84 002e 00BF     		.align	2
  85              		.global	scheduler_start
  86              		.thumb
  87              		.thumb_func
  89              	scheduler_start:
  90              	.LFB1:
  33:kernel/openos/scheduler.c **** 
  34:kernel/openos/scheduler.c **** void scheduler_start() {
  91              		.loc 1 34 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 8
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95 0030 80B5     		push	{r7, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0032 82B0     		sub	sp, sp, #8
 101              	.LCFI3:
 102              		.cfi_def_cfa_offset 16
 103 0034 00AF     		add	r7, sp, #0
 104              	.LCFI4:
 105              		.cfi_def_cfa_register 7
  35:kernel/openos/scheduler.c ****    taskList_item_t* pThisTask;
  36:kernel/openos/scheduler.c ****    while (1) {
  37:kernel/openos/scheduler.c ****       while(scheduler_vars.task_list!=NULL) {
 106              		.loc 1 37 0
 107 0036 28E0     		b	.L3
 108              	.L4:
  38:kernel/openos/scheduler.c ****          // there is still at least one task in the linked-list of tasks
  39:kernel/openos/scheduler.c ****          
  40:kernel/openos/scheduler.c ****          // the task to execute is the one at the head of the queue
  41:kernel/openos/scheduler.c ****          pThisTask                = scheduler_vars.task_list;
 109              		.loc 1 41 0
 110 0038 40F20003 		movw	r3, #:lower16:scheduler_vars
 111 003c C0F20003 		movt	r3, #:upper16:scheduler_vars
 112 0040 9B6F     		ldr	r3, [r3, #120]
 113 0042 7B60     		str	r3, [r7, #4]
  42:kernel/openos/scheduler.c ****          
  43:kernel/openos/scheduler.c ****          // shift the queue by one task
  44:kernel/openos/scheduler.c ****          scheduler_vars.task_list = pThisTask->next;
 114              		.loc 1 44 0
 115 0044 7B68     		ldr	r3, [r7, #4]
 116 0046 9A68     		ldr	r2, [r3, #8]
 117 0048 40F20003 		movw	r3, #:lower16:scheduler_vars
 118 004c C0F20003 		movt	r3, #:upper16:scheduler_vars
 119 0050 9A67     		str	r2, [r3, #120]
  45:kernel/openos/scheduler.c ****          
  46:kernel/openos/scheduler.c ****          // execute the current task
  47:kernel/openos/scheduler.c ****          pThisTask->cb();
 120              		.loc 1 47 0
 121 0052 7B68     		ldr	r3, [r7, #4]
 122 0054 1B68     		ldr	r3, [r3, #0]
 123 0056 9847     		blx	r3
  48:kernel/openos/scheduler.c ****          
  49:kernel/openos/scheduler.c ****          // free up this task container
  50:kernel/openos/scheduler.c ****          pThisTask->cb            = NULL;
 124              		.loc 1 50 0
 125 0058 7B68     		ldr	r3, [r7, #4]
 126 005a 4FF00002 		mov	r2, #0
 127 005e 1A60     		str	r2, [r3, #0]
  51:kernel/openos/scheduler.c ****          pThisTask->prio          = TASKPRIO_NONE;
 128              		.loc 1 51 0
 129 0060 7B68     		ldr	r3, [r7, #4]
 130 0062 4FF00002 		mov	r2, #0
 131 0066 1A71     		strb	r2, [r3, #4]
  52:kernel/openos/scheduler.c ****          pThisTask->next          = NULL;
 132              		.loc 1 52 0
 133 0068 7B68     		ldr	r3, [r7, #4]
 134 006a 4FF00002 		mov	r2, #0
 135 006e 9A60     		str	r2, [r3, #8]
  53:kernel/openos/scheduler.c ****          scheduler_dbg.numTasksCur--;
 136              		.loc 1 53 0
 137 0070 40F20003 		movw	r3, #:lower16:scheduler_dbg
 138 0074 C0F20003 		movt	r3, #:upper16:scheduler_dbg
 139 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 140 007a 03F1FF33 		add	r3, r3, #-1
 141 007e DAB2     		uxtb	r2, r3
 142 0080 40F20003 		movw	r3, #:lower16:scheduler_dbg
 143 0084 C0F20003 		movt	r3, #:upper16:scheduler_dbg
 144 0088 1A70     		strb	r2, [r3, #0]
 145              	.L3:
  37:kernel/openos/scheduler.c ****       while(scheduler_vars.task_list!=NULL) {
 146              		.loc 1 37 0 discriminator 1
 147 008a 40F20003 		movw	r3, #:lower16:scheduler_vars
 148 008e C0F20003 		movt	r3, #:upper16:scheduler_vars
 149 0092 9B6F     		ldr	r3, [r3, #120]
 150 0094 002B     		cmp	r3, #0
 151 0096 CFD1     		bne	.L4
  54:kernel/openos/scheduler.c ****       }
  55:kernel/openos/scheduler.c ****       debugpins_task_clr();
 152              		.loc 1 55 0
 153 0098 FFF7FEFF 		bl	debugpins_task_clr
  56:kernel/openos/scheduler.c ****       board_sleep();
 154              		.loc 1 56 0
 155 009c FFF7FEFF 		bl	board_sleep
  57:kernel/openos/scheduler.c ****       debugpins_task_set();                      // IAR should halt here if nothing to do
 156              		.loc 1 57 0
 157 00a0 FFF7FEFF 		bl	debugpins_task_set
  58:kernel/openos/scheduler.c ****    }
 158              		.loc 1 58 0
 159 00a4 00BF     		nop
  37:kernel/openos/scheduler.c ****       while(scheduler_vars.task_list!=NULL) {
 160              		.loc 1 37 0
 161 00a6 F0E7     		b	.L3
 162              		.cfi_endproc
 163              	.LFE1:
 165              		.align	2
 166              		.global	scheduler_push_task
 167              		.thumb
 168              		.thumb_func
 170              	scheduler_push_task:
 171              	.LFB2:
  59:kernel/openos/scheduler.c **** }
  60:kernel/openos/scheduler.c **** 
  61:kernel/openos/scheduler.c ****  void scheduler_push_task(task_cbt cb, task_prio_t prio) {
 172              		.loc 1 61 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 16
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 00a8 80B5     		push	{r7, lr}
 177              	.LCFI5:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 00aa 84B0     		sub	sp, sp, #16
 182              	.LCFI6:
 183              		.cfi_def_cfa_offset 24
 184 00ac 00AF     		add	r7, sp, #0
 185              	.LCFI7:
 186              		.cfi_def_cfa_register 7
 187 00ae 7860     		str	r0, [r7, #4]
 188 00b0 0B46     		mov	r3, r1
 189 00b2 FB70     		strb	r3, [r7, #3]
  62:kernel/openos/scheduler.c ****    taskList_item_t*  taskContainer;
  63:kernel/openos/scheduler.c ****    taskList_item_t** taskListWalker;
  64:kernel/openos/scheduler.c ****    INTERRUPT_DECLARATION();
  65:kernel/openos/scheduler.c ****    
  66:kernel/openos/scheduler.c ****    DISABLE_INTERRUPTS();
 190              		.loc 1 66 0
 191 00b4 FFF7FEFF 		bl	IntMasterDisable
  67:kernel/openos/scheduler.c ****    
  68:kernel/openos/scheduler.c ****    // find an empty task container
  69:kernel/openos/scheduler.c ****    taskContainer = &scheduler_vars.taskBuf[0];
 192              		.loc 1 69 0
 193 00b8 40F20003 		movw	r3, #:lower16:scheduler_vars
 194 00bc C0F20003 		movt	r3, #:upper16:scheduler_vars
 195 00c0 FB60     		str	r3, [r7, #12]
  70:kernel/openos/scheduler.c ****    while (taskContainer->cb!=NULL &&
 196              		.loc 1 70 0
 197 00c2 03E0     		b	.L7
 198              	.L9:
  71:kernel/openos/scheduler.c ****           taskContainer<=&scheduler_vars.taskBuf[TASK_LIST_DEPTH-1]) {
  72:kernel/openos/scheduler.c ****       taskContainer++;
 199              		.loc 1 72 0
 200 00c4 FB68     		ldr	r3, [r7, #12]
 201 00c6 03F10C03 		add	r3, r3, #12
 202 00ca FB60     		str	r3, [r7, #12]
 203              	.L7:
  70:kernel/openos/scheduler.c ****    while (taskContainer->cb!=NULL &&
 204              		.loc 1 70 0 discriminator 1
 205 00cc FB68     		ldr	r3, [r7, #12]
 206 00ce 1B68     		ldr	r3, [r3, #0]
 207 00d0 002B     		cmp	r3, #0
 208 00d2 03D0     		beq	.L8
  70:kernel/openos/scheduler.c ****    while (taskContainer->cb!=NULL &&
 209              		.loc 1 70 0 is_stmt 0 discriminator 2
 210 00d4 FA68     		ldr	r2, [r7, #12]
 211 00d6 2A4B     		ldr	r3, .L15
 212 00d8 9A42     		cmp	r2, r3
 213 00da F3D9     		bls	.L9
 214              	.L8:
  73:kernel/openos/scheduler.c ****    }
  74:kernel/openos/scheduler.c ****    if (taskContainer>&scheduler_vars.taskBuf[TASK_LIST_DEPTH-1]) {
 215              		.loc 1 74 0 is_stmt 1
 216 00dc FA68     		ldr	r2, [r7, #12]
 217 00de 284B     		ldr	r3, .L15
 218 00e0 9A42     		cmp	r2, r3
 219 00e2 03D9     		bls	.L10
  75:kernel/openos/scheduler.c ****       // task list has overflown. This should never happpen!
  76:kernel/openos/scheduler.c ****    
  77:kernel/openos/scheduler.c ****       // we can not print from within the kernel. Instead:
  78:kernel/openos/scheduler.c ****       // blink the error LED
  79:kernel/openos/scheduler.c ****       leds_error_blink();
 220              		.loc 1 79 0
 221 00e4 FFF7FEFF 		bl	leds_error_blink
  80:kernel/openos/scheduler.c ****       // reset the board
  81:kernel/openos/scheduler.c ****       board_reset();
 222              		.loc 1 81 0
 223 00e8 FFF7FEFF 		bl	board_reset
 224              	.L10:
  82:kernel/openos/scheduler.c ****    }
  83:kernel/openos/scheduler.c ****    // fill that task container with this task
  84:kernel/openos/scheduler.c ****    taskContainer->cb              = cb;
 225              		.loc 1 84 0
 226 00ec FB68     		ldr	r3, [r7, #12]
 227 00ee 7A68     		ldr	r2, [r7, #4]
 228 00f0 1A60     		str	r2, [r3, #0]
  85:kernel/openos/scheduler.c ****    taskContainer->prio            = prio;
 229              		.loc 1 85 0
 230 00f2 FB68     		ldr	r3, [r7, #12]
 231 00f4 FA78     		ldrb	r2, [r7, #3]
 232 00f6 1A71     		strb	r2, [r3, #4]
  86:kernel/openos/scheduler.c ****    
  87:kernel/openos/scheduler.c ****    // find position in queue
  88:kernel/openos/scheduler.c ****    taskListWalker                 = &scheduler_vars.task_list;
 233              		.loc 1 88 0
 234 00f8 224B     		ldr	r3, .L15+4
 235 00fa BB60     		str	r3, [r7, #8]
  89:kernel/openos/scheduler.c ****    while (*taskListWalker!=NULL &&
 236              		.loc 1 89 0
 237 00fc 04E0     		b	.L11
 238              	.L13:
  90:kernel/openos/scheduler.c ****           (*taskListWalker)->prio < taskContainer->prio) {
  91:kernel/openos/scheduler.c ****       taskListWalker              = (taskList_item_t**)&((*taskListWalker)->next);
 239              		.loc 1 91 0
 240 00fe BB68     		ldr	r3, [r7, #8]
 241 0100 1B68     		ldr	r3, [r3, #0]
 242 0102 03F10803 		add	r3, r3, #8
 243 0106 BB60     		str	r3, [r7, #8]
 244              	.L11:
  89:kernel/openos/scheduler.c ****    while (*taskListWalker!=NULL &&
 245              		.loc 1 89 0 discriminator 1
 246 0108 BB68     		ldr	r3, [r7, #8]
 247 010a 1B68     		ldr	r3, [r3, #0]
 248 010c 002B     		cmp	r3, #0
 249 010e 06D0     		beq	.L12
  90:kernel/openos/scheduler.c ****           (*taskListWalker)->prio < taskContainer->prio) {
 250              		.loc 1 90 0 discriminator 2
 251 0110 BB68     		ldr	r3, [r7, #8]
 252 0112 1B68     		ldr	r3, [r3, #0]
 253 0114 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 254 0116 FB68     		ldr	r3, [r7, #12]
 255 0118 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  89:kernel/openos/scheduler.c ****    while (*taskListWalker!=NULL &&
 256              		.loc 1 89 0 discriminator 2
 257 011a 9A42     		cmp	r2, r3
 258 011c EFD3     		bcc	.L13
 259              	.L12:
  92:kernel/openos/scheduler.c ****    }
  93:kernel/openos/scheduler.c ****    // insert at that position
  94:kernel/openos/scheduler.c ****    taskContainer->next            = *taskListWalker;
 260              		.loc 1 94 0
 261 011e BB68     		ldr	r3, [r7, #8]
 262 0120 1A68     		ldr	r2, [r3, #0]
 263 0122 FB68     		ldr	r3, [r7, #12]
 264 0124 9A60     		str	r2, [r3, #8]
  95:kernel/openos/scheduler.c ****    *taskListWalker                = taskContainer;
 265              		.loc 1 95 0
 266 0126 BB68     		ldr	r3, [r7, #8]
 267 0128 FA68     		ldr	r2, [r7, #12]
 268 012a 1A60     		str	r2, [r3, #0]
  96:kernel/openos/scheduler.c ****    // maintain debug stats
  97:kernel/openos/scheduler.c ****    scheduler_dbg.numTasksCur++;
 269              		.loc 1 97 0
 270 012c 40F20003 		movw	r3, #:lower16:scheduler_dbg
 271 0130 C0F20003 		movt	r3, #:upper16:scheduler_dbg
 272 0134 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 273 0136 03F10103 		add	r3, r3, #1
 274 013a DAB2     		uxtb	r2, r3
 275 013c 40F20003 		movw	r3, #:lower16:scheduler_dbg
 276 0140 C0F20003 		movt	r3, #:upper16:scheduler_dbg
 277 0144 1A70     		strb	r2, [r3, #0]
  98:kernel/openos/scheduler.c ****    if (scheduler_dbg.numTasksCur>scheduler_dbg.numTasksMax) {
 278              		.loc 1 98 0
 279 0146 40F20003 		movw	r3, #:lower16:scheduler_dbg
 280 014a C0F20003 		movt	r3, #:upper16:scheduler_dbg
 281 014e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 282 0150 40F20003 		movw	r3, #:lower16:scheduler_dbg
 283 0154 C0F20003 		movt	r3, #:upper16:scheduler_dbg
 284 0158 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 285 015a 9A42     		cmp	r2, r3
 286 015c 09D9     		bls	.L14
  99:kernel/openos/scheduler.c ****       scheduler_dbg.numTasksMax   = scheduler_dbg.numTasksCur;
 287              		.loc 1 99 0
 288 015e 40F20003 		movw	r3, #:lower16:scheduler_dbg
 289 0162 C0F20003 		movt	r3, #:upper16:scheduler_dbg
 290 0166 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 291 0168 40F20003 		movw	r3, #:lower16:scheduler_dbg
 292 016c C0F20003 		movt	r3, #:upper16:scheduler_dbg
 293 0170 5A70     		strb	r2, [r3, #1]
 294              	.L14:
 100:kernel/openos/scheduler.c ****    }
 101:kernel/openos/scheduler.c ****    
 102:kernel/openos/scheduler.c ****    ENABLE_INTERRUPTS();
 295              		.loc 1 102 0
 296 0172 FFF7FEFF 		bl	IntMasterEnable
 103:kernel/openos/scheduler.c **** }
 297              		.loc 1 103 0
 298 0176 07F11007 		add	r7, r7, #16
 299 017a BD46     		mov	sp, r7
 300 017c 80BD     		pop	{r7, pc}
 301              	.L16:
 302 017e 00BF     		.align	2
 303              	.L15:
 304 0180 6C000000 		.word	scheduler_vars+108
 305 0184 78000000 		.word	scheduler_vars+120
 306              		.cfi_endproc
 307              	.LFE2:
 309              	.Letext0:
 310              		.file 2 "/opt/gcc-arm-none-eabi-4_7-2013q3/bin/../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none
 311              		.file 3 "kernel/scheduler.h"
 312              		.file 4 "bsp/boards/OpenMote-CC2538/board_info.h"
 313              		.file 5 "inc/opendefs.h"
DEFINED SYMBOLS
                            *ABS*:00000000 scheduler.c
     /tmp/cc52MV7c.s:19     .rodata:00000000 $d
     /tmp/cc52MV7c.s:22     .rodata:00000000 rreg_uriquery
     /tmp/cc52MV7c.s:27     .rodata:00000008 infoBoardname
     /tmp/cc52MV7c.s:32     .rodata:00000010 infouCName
     /tmp/cc52MV7c.s:37     .rodata:00000018 infoRadioName
     /tmp/cc52MV7c.s:42     .rodata:00000024 infoStackName
                            *COM*:00000080 scheduler_vars
                            *COM*:00000002 scheduler_dbg
     /tmp/cc52MV7c.s:47     .text:00000000 $t
     /tmp/cc52MV7c.s:52     .text:00000000 scheduler_init
     /tmp/cc52MV7c.s:89     .text:00000030 scheduler_start
     /tmp/cc52MV7c.s:170    .text:000000a8 scheduler_push_task
     /tmp/cc52MV7c.s:304    .text:00000180 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e96eee74da26538b12ac9582e3798382
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.toolchain_defs.h.2.e4ebbe6e0a48032a9b79077dc42e1ffd
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.21.847e72606a2fc49b1c228f268b8a62aa
                           .group:00000000 wm4.opendefs.h.19.05852eb648ac65e48c7817e5cbf03346
                           .group:00000000 wm4.scheduler.h.2.ca320b72942c5204a6e225e3c9c0814e

UNDEFINED SYMBOLS
memset
debugpins_task_clr
board_sleep
debugpins_task_set
IntMasterDisable
leds_error_blink
board_reset
IntMasterEnable
