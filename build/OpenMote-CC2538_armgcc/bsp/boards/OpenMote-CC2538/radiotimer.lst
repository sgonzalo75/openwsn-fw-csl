   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"radiotimer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39              		.comm	radiotimer_vars,8,4
  40 0023 00       		.text
  41              		.align	2
  42              		.global	radiotimer_init
  43              		.thumb
  44              		.thumb_func
  46              	radiotimer_init:
  47              	.LFB0:
  48              		.file 1 "bsp/boards/OpenMote-CC2538/radiotimer.c"
   1:bsp/boards/OpenMote-CC2538/radiotimer.c **** /**
   2:bsp/boards/OpenMote-CC2538/radiotimer.c ****  * Author: Xavier Vilajosana (xvilajosana@eecs.berkeley.edu)
   3:bsp/boards/OpenMote-CC2538/radiotimer.c ****  *         Pere Tuset (peretuset@openmote.com)
   4:bsp/boards/OpenMote-CC2538/radiotimer.c ****  * Date:   July 2013
   5:bsp/boards/OpenMote-CC2538/radiotimer.c ****  * Description: CC2538-specific definition of the "radiotimer" bsp module.
   6:bsp/boards/OpenMote-CC2538/radiotimer.c ****  */
   7:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
   8:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include <headers/hw_ints.h>
   9:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include <headers/hw_rfcore_sfr.h>
  10:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include <headers/hw_types.h>
  11:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  12:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include "stdio.h"
  13:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include "string.h"
  14:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include "radiotimer.h"
  15:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include "debugpins.h"
  16:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include "interrupt.h"
  17:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include "sys_ctrl.h"
  18:bsp/boards/OpenMote-CC2538/radiotimer.c **** #include "sys_ctrl.h"
  19:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  20:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  21:bsp/boards/OpenMote-CC2538/radiotimer.c **** #define RADIOTIMER_32MHZ_TICS_PER_32KHZ_TIC     ( 976 ) // 32 MHz to 32 kHz ratio
  22:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  23:bsp/boards/OpenMote-CC2538/radiotimer.c **** //=========================== variables =======================================
  24:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  25:bsp/boards/OpenMote-CC2538/radiotimer.c **** typedef struct {
  26:bsp/boards/OpenMote-CC2538/radiotimer.c ****    radiotimer_compare_cbt    overflow_cb;
  27:bsp/boards/OpenMote-CC2538/radiotimer.c ****    radiotimer_compare_cbt    compare_cb;
  28:bsp/boards/OpenMote-CC2538/radiotimer.c **** } radiotimer_vars_t;
  29:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  30:bsp/boards/OpenMote-CC2538/radiotimer.c **** radiotimer_vars_t radiotimer_vars;
  31:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  32:bsp/boards/OpenMote-CC2538/radiotimer.c **** //=========================== prototypes ======================================
  33:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  34:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_isr_private(void);
  35:bsp/boards/OpenMote-CC2538/radiotimer.c **** port_INLINE uint16_t get_real_counter(void);
  36:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  37:bsp/boards/OpenMote-CC2538/radiotimer.c **** //=========================== public ==========================================
  38:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  39:bsp/boards/OpenMote-CC2538/radiotimer.c **** //===== admin
  40:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  41:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_init() {
  49              		.loc 1 41 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53 0000 80B5     		push	{r7, lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 7, -8
  57              		.cfi_offset 14, -4
  58 0002 00AF     		add	r7, sp, #0
  59              	.LCFI1:
  60              		.cfi_def_cfa_register 7
  42:bsp/boards/OpenMote-CC2538/radiotimer.c ****    // clear local variables
  43:bsp/boards/OpenMote-CC2538/radiotimer.c ****    memset(&radiotimer_vars,0,sizeof(radiotimer_vars_t));
  61              		.loc 1 43 0
  62 0004 40F20000 		movw	r0, #:lower16:radiotimer_vars
  63 0008 C0F20000 		movt	r0, #:upper16:radiotimer_vars
  64 000c 4FF00001 		mov	r1, #0
  65 0010 4FF00802 		mov	r2, #8
  66 0014 FFF7FEFF 		bl	memset
  44:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
  67              		.loc 1 44 0
  68 0018 80BD     		pop	{r7, pc}
  69              		.cfi_endproc
  70              	.LFE0:
  72 001a 00BF     		.align	2
  73              		.global	radiotimer_setOverflowCb
  74              		.thumb
  75              		.thumb_func
  77              	radiotimer_setOverflowCb:
  78              	.LFB1:
  45:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  46:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_setOverflowCb(radiotimer_compare_cbt cb) {
  79              		.loc 1 46 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 001c 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 7, -4
  88 001e 83B0     		sub	sp, sp, #12
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 16
  91 0020 00AF     		add	r7, sp, #0
  92              	.LCFI4:
  93              		.cfi_def_cfa_register 7
  94 0022 7860     		str	r0, [r7, #4]
  47:bsp/boards/OpenMote-CC2538/radiotimer.c ****    radiotimer_vars.overflow_cb    = cb;
  95              		.loc 1 47 0
  96 0024 40F20003 		movw	r3, #:lower16:radiotimer_vars
  97 0028 C0F20003 		movt	r3, #:upper16:radiotimer_vars
  98 002c 7A68     		ldr	r2, [r7, #4]
  99 002e 1A60     		str	r2, [r3, #0]
  48:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 100              		.loc 1 48 0
 101 0030 07F10C07 		add	r7, r7, #12
 102 0034 BD46     		mov	sp, r7
 103 0036 80BC     		pop	{r7}
 104 0038 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE1:
 108 003a 00BF     		.align	2
 109              		.global	radiotimer_setCompareCb
 110              		.thumb
 111              		.thumb_func
 113              	radiotimer_setCompareCb:
 114              	.LFB2:
  49:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  50:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_setCompareCb(radiotimer_compare_cbt cb) {
 115              		.loc 1 50 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120 003c 80B4     		push	{r7}
 121              	.LCFI5:
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 7, -4
 124 003e 83B0     		sub	sp, sp, #12
 125              	.LCFI6:
 126              		.cfi_def_cfa_offset 16
 127 0040 00AF     		add	r7, sp, #0
 128              	.LCFI7:
 129              		.cfi_def_cfa_register 7
 130 0042 7860     		str	r0, [r7, #4]
  51:bsp/boards/OpenMote-CC2538/radiotimer.c ****    radiotimer_vars.compare_cb     = cb;
 131              		.loc 1 51 0
 132 0044 40F20003 		movw	r3, #:lower16:radiotimer_vars
 133 0048 C0F20003 		movt	r3, #:upper16:radiotimer_vars
 134 004c 7A68     		ldr	r2, [r7, #4]
 135 004e 5A60     		str	r2, [r3, #4]
  52:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 136              		.loc 1 52 0
 137 0050 07F10C07 		add	r7, r7, #12
 138 0054 BD46     		mov	sp, r7
 139 0056 80BC     		pop	{r7}
 140 0058 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE2:
 144 005a 00BF     		.align	2
 145              		.global	radiotimer_setStartFrameCb
 146              		.thumb
 147              		.thumb_func
 149              	radiotimer_setStartFrameCb:
 150              	.LFB3:
  53:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  54:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_setStartFrameCb(radiotimer_capture_cbt cb) {
 151              		.loc 1 54 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156 005c 80B4     		push	{r7}
 157              	.LCFI8:
 158              		.cfi_def_cfa_offset 4
 159              		.cfi_offset 7, -4
 160 005e 83B0     		sub	sp, sp, #12
 161              	.LCFI9:
 162              		.cfi_def_cfa_offset 16
 163 0060 00AF     		add	r7, sp, #0
 164              	.LCFI10:
 165              		.cfi_def_cfa_register 7
 166 0062 7860     		str	r0, [r7, #4]
 167              	.L5:
  55:bsp/boards/OpenMote-CC2538/radiotimer.c ****    while(1);
 168              		.loc 1 55 0 discriminator 1
 169 0064 FEE7     		b	.L5
 170              		.cfi_endproc
 171              	.LFE3:
 173 0066 00BF     		.align	2
 174              		.global	radiotimer_setEndFrameCb
 175              		.thumb
 176              		.thumb_func
 178              	radiotimer_setEndFrameCb:
 179              	.LFB4:
  56:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
  57:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  58:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_setEndFrameCb(radiotimer_capture_cbt cb) {
 180              		.loc 1 58 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0068 80B4     		push	{r7}
 186              	.LCFI11:
 187              		.cfi_def_cfa_offset 4
 188              		.cfi_offset 7, -4
 189 006a 83B0     		sub	sp, sp, #12
 190              	.LCFI12:
 191              		.cfi_def_cfa_offset 16
 192 006c 00AF     		add	r7, sp, #0
 193              	.LCFI13:
 194              		.cfi_def_cfa_register 7
 195 006e 7860     		str	r0, [r7, #4]
 196              	.L7:
  59:bsp/boards/OpenMote-CC2538/radiotimer.c ****    while(1);
 197              		.loc 1 59 0 discriminator 1
 198 0070 FEE7     		b	.L7
 199              		.cfi_endproc
 200              	.LFE4:
 202 0072 00BF     		.align	2
 203              		.global	radiotimer_start
 204              		.thumb
 205              		.thumb_func
 207              	radiotimer_start:
 208              	.LFB5:
  60:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
  61:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  62:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_start(PORT_RADIOTIMER_WIDTH period) {
 209              		.loc 1 62 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 8
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0074 80B5     		push	{r7, lr}
 214              	.LCFI14:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0076 82B0     		sub	sp, sp, #8
 219              	.LCFI15:
 220              		.cfi_def_cfa_offset 16
 221 0078 00AF     		add	r7, sp, #0
 222              	.LCFI16:
 223              		.cfi_def_cfa_register 7
 224 007a 7860     		str	r0, [r7, #4]
  63:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  64:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //set period on the timer to 976 tics
  65:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTMSEL) = (0x02 << RFCORE_SFR_MTMSEL_MTMSEL_S) & RFCORE_SFR_MTMSEL_MTMSEL_M;
 225              		.loc 1 65 0
 226 007c 48F61003 		movw	r3, #34832
 227 0080 C4F20803 		movt	r3, 16392
 228 0084 4FF00202 		mov	r2, #2
 229 0088 1A60     		str	r2, [r3, #0]
  66:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  67:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTM0)=(RADIOTIMER_32MHZ_TICS_PER_32KHZ_TIC << RFCORE_SFR_MTM0_MTM0_S) & RFCORE
 230              		.loc 1 67 0
 231 008a 48F61403 		movw	r3, #34836
 232 008e C4F20803 		movt	r3, 16392
 233 0092 4FF0D002 		mov	r2, #208
 234 0096 1A60     		str	r2, [r3, #0]
  68:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTM1)=((RADIOTIMER_32MHZ_TICS_PER_32KHZ_TIC>> 8) << RFCORE_SFR_MTM1_MTM1_S)& R
 235              		.loc 1 68 0
 236 0098 48F61803 		movw	r3, #34840
 237 009c C4F20803 		movt	r3, 16392
 238 00a0 4FF00302 		mov	r2, #3
 239 00a4 1A60     		str	r2, [r3, #0]
  69:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  70:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //set counter on the timer to 0 tics
  71:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTMSEL) = (0x00 << RFCORE_SFR_MTMSEL_MTMSEL_S) & RFCORE_SFR_MTMSEL_MTMSEL_M;
 240              		.loc 1 71 0
 241 00a6 48F61003 		movw	r3, #34832
 242 00aa C4F20803 		movt	r3, 16392
 243 00ae 4FF00002 		mov	r2, #0
 244 00b2 1A60     		str	r2, [r3, #0]
  72:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  73:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTM0)=(0x00<< RFCORE_SFR_MTM0_MTM0_S) & RFCORE_SFR_MTM0_MTM0_M;
 245              		.loc 1 73 0
 246 00b4 48F61403 		movw	r3, #34836
 247 00b8 C4F20803 		movt	r3, 16392
 248 00bc 4FF00002 		mov	r2, #0
 249 00c0 1A60     		str	r2, [r3, #0]
  74:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTM1)=(0x00<< RFCORE_SFR_MTM1_MTM1_S) & RFCORE_SFR_MTM1_MTM1_M;
 250              		.loc 1 74 0
 251 00c2 48F61803 		movw	r3, #34840
 252 00c6 C4F20803 		movt	r3, 16392
 253 00ca 4FF00002 		mov	r2, #0
 254 00ce 1A60     		str	r2, [r3, #0]
  75:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  76:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //now overflow increments once every 1 32Khz tic.
  77:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  78:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //select period register in the selector so it can be modified -- use OVF  so we have 24bit reg
  79:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMSEL) = (0x02 << RFCORE_SFR_MTMSEL_MTMOVFSEL_S)& RFCORE_SFR_MTMSEL_MTMOVFSEL_M;
 255              		.loc 1 79 0
 256 00d0 48F61003 		movw	r3, #34832
 257 00d4 C4F20803 		movt	r3, 16392
 258 00d8 4FF02002 		mov	r2, #32
 259 00dc 1A60     		str	r2, [r3, #0]
  80:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- low 8bits
  81:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF0) = (period << RFCORE_SFR_MTMOVF0_MTMOVF0_S)& RFCORE_SFR_MTMOVF0_MTMOVF0_M
 260              		.loc 1 81 0
 261 00de 48F62403 		movw	r3, #34852
 262 00e2 C4F20803 		movt	r3, 16392
 263 00e6 7A68     		ldr	r2, [r7, #4]
 264 00e8 D2B2     		uxtb	r2, r2
 265 00ea 1A60     		str	r2, [r3, #0]
  82:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- middle 8bits
  83:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF1) = ((period >> 8) << RFCORE_SFR_MTMOVF1_MTMOVF1_S)& RFCORE_SFR_MTMOVF1_MT
 266              		.loc 1 83 0
 267 00ec 48F62003 		movw	r3, #34848
 268 00f0 C4F20803 		movt	r3, 16392
 269 00f4 7A68     		ldr	r2, [r7, #4]
 270 00f6 4FEA1222 		lsr	r2, r2, #8
 271 00fa D2B2     		uxtb	r2, r2
 272 00fc 1A60     		str	r2, [r3, #0]
  84:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- high 8bits
  85:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF2) = ((period >> 16) << RFCORE_SFR_MTMOVF2_MTMOVF2_S)& RFCORE_SFR_MTMOVF2_M
 273              		.loc 1 85 0
 274 00fe 48F61C03 		movw	r3, #34844
 275 0102 C4F20803 		movt	r3, 16392
 276 0106 7A68     		ldr	r2, [r7, #4]
 277 0108 4FEA1242 		lsr	r2, r2, #16
 278 010c D2B2     		uxtb	r2, r2
 279 010e 1A60     		str	r2, [r3, #0]
  86:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  87:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//select counter register in the selector so it can be modified -- use OVF version so we can have 
  88:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMSEL) = (0x00<< RFCORE_SFR_MTMSEL_MTMOVFSEL_S) & RFCORE_SFR_MTMSEL_MTMOVFSEL_M;
 280              		.loc 1 88 0
 281 0110 48F61003 		movw	r3, #34832
 282 0114 C4F20803 		movt	r3, 16392
 283 0118 4FF00002 		mov	r2, #0
 284 011c 1A60     		str	r2, [r3, #0]
  89:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- low 8bits
  90:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF0) = (0x00 << RFCORE_SFR_MTMOVF0_MTMOVF0_S) & RFCORE_SFR_MTMOVF0_MTMOVF0_M;
 285              		.loc 1 90 0
 286 011e 48F62403 		movw	r3, #34852
 287 0122 C4F20803 		movt	r3, 16392
 288 0126 4FF00002 		mov	r2, #0
 289 012a 1A60     		str	r2, [r3, #0]
  91:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- middle 8bits
  92:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF1) = (0x00 << RFCORE_SFR_MTMOVF1_MTMOVF1_S) & RFCORE_SFR_MTMOVF1_MTMOVF1_M;
 290              		.loc 1 92 0
 291 012c 48F62003 		movw	r3, #34848
 292 0130 C4F20803 		movt	r3, 16392
 293 0134 4FF00002 		mov	r2, #0
 294 0138 1A60     		str	r2, [r3, #0]
  93:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- high 8bits
  94:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF2) = (0x00 << RFCORE_SFR_MTMOVF2_MTMOVF2_S) & RFCORE_SFR_MTMOVF2_MTMOVF2_M;
 295              		.loc 1 94 0
 296 013a 48F61C03 		movw	r3, #34844
 297 013e C4F20803 		movt	r3, 16392
 298 0142 4FF00002 		mov	r2, #0
 299 0146 1A60     		str	r2, [r3, #0]
  95:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  96:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //enable period interrupt - ovf
  97:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTIRQM) = RFCORE_SFR_MTIRQM_MACTIMER_OVF_PERM;//RFCORE_SFR_MTIRQM_MACTIMER_OVF
 300              		.loc 1 97 0
 301 0148 48F60803 		movw	r3, #34824
 302 014c C4F20803 		movt	r3, 16392
 303 0150 4FF00802 		mov	r2, #8
 304 0154 1A60     		str	r2, [r3, #0]
  98:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
  99:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //register and enable the interrupt at the nvic
 100:bsp/boards/OpenMote-CC2538/radiotimer.c ****     IntRegister(INT_MACTIMR, radiotimer_isr_private);
 305              		.loc 1 100 0
 306 0156 4FF0A200 		mov	r0, #162
 307 015a 40F20001 		movw	r1, #:lower16:radiotimer_isr_private
 308 015e C0F20001 		movt	r1, #:upper16:radiotimer_isr_private
 309 0162 FFF7FEFF 		bl	IntRegister
 101:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //clear all interrupts
 102:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 103:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //active sync with 32khz clock and start the timer.
 104:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTIRQF)=0x00;
 310              		.loc 1 104 0
 311 0166 48F60C03 		movw	r3, #34828
 312 016a C4F20803 		movt	r3, 16392
 313 016e 4FF00002 		mov	r2, #0
 314 0172 1A60     		str	r2, [r3, #0]
 105:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 106:bsp/boards/OpenMote-CC2538/radiotimer.c ****     //enable,synch with 32khz and dont latch 3bytes on ovf counter so we have 24bit timer on the ov
 107:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTCTRL)|=RFCORE_SFR_MTCTRL_RUN|RFCORE_SFR_MTCTRL_SYNC;
 315              		.loc 1 107 0
 316 0174 48F60403 		movw	r3, #34820
 317 0178 C4F20803 		movt	r3, 16392
 318 017c 48F60402 		movw	r2, #34820
 319 0180 C4F20802 		movt	r2, 16392
 320 0184 1268     		ldr	r2, [r2, #0]
 321 0186 42F00302 		orr	r2, r2, #3
 322 018a 1A60     		str	r2, [r3, #0]
 108:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 109:bsp/boards/OpenMote-CC2538/radiotimer.c ****     while(!( HWREG(RFCORE_SFR_MTCTRL) & RFCORE_SFR_MTCTRL_STATE));//wait until stable.
 323              		.loc 1 109 0
 324 018c 00BF     		nop
 325              	.L9:
 326              		.loc 1 109 0 is_stmt 0 discriminator 1
 327 018e 48F60403 		movw	r3, #34820
 328 0192 C4F20803 		movt	r3, 16392
 329 0196 1B68     		ldr	r3, [r3, #0]
 330 0198 03F00403 		and	r3, r3, #4
 331 019c 002B     		cmp	r3, #0
 332 019e F6D0     		beq	.L9
 110:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 111:bsp/boards/OpenMote-CC2538/radiotimer.c ****     IntEnable(INT_MACTIMR);
 333              		.loc 1 111 0 is_stmt 1
 334 01a0 4FF0A200 		mov	r0, #162
 335 01a4 FFF7FEFF 		bl	IntEnable
 112:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 336              		.loc 1 112 0
 337 01a8 07F10807 		add	r7, r7, #8
 338 01ac BD46     		mov	sp, r7
 339 01ae 80BD     		pop	{r7, pc}
 340              		.cfi_endproc
 341              	.LFE5:
 343              		.align	2
 344              		.global	radiotimer_getValue
 345              		.thumb
 346              		.thumb_func
 348              	radiotimer_getValue:
 349              	.LFB6:
 113:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 114:bsp/boards/OpenMote-CC2538/radiotimer.c **** //===== direct access
 115:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 116:bsp/boards/OpenMote-CC2538/radiotimer.c **** PORT_RADIOTIMER_WIDTH radiotimer_getValue() {
 350              		.loc 1 116 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 8
 353              		@ frame_needed = 1, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355 01b0 80B4     		push	{r7}
 356              	.LCFI17:
 357              		.cfi_def_cfa_offset 4
 358              		.cfi_offset 7, -4
 359 01b2 83B0     		sub	sp, sp, #12
 360              	.LCFI18:
 361              		.cfi_def_cfa_offset 16
 362 01b4 00AF     		add	r7, sp, #0
 363              	.LCFI19:
 364              		.cfi_def_cfa_register 7
 117:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 PORT_RADIOTIMER_WIDTH value=0;
 365              		.loc 1 117 0
 366 01b6 4FF00003 		mov	r3, #0
 367 01ba 7B60     		str	r3, [r7, #4]
 118:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 //select period register in the selector so it can be read
 119:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 HWREG(RFCORE_SFR_MTMSEL) = (0x00 << RFCORE_SFR_MTMSEL_MTMOVFSEL_S) & RFCORE_SFR_MTMSEL_MTMOVFSEL_
 368              		.loc 1 119 0
 369 01bc 48F61003 		movw	r3, #34832
 370 01c0 C4F20803 		movt	r3, 16392
 371 01c4 4FF00002 		mov	r2, #0
 372 01c8 1A60     		str	r2, [r3, #0]
 120:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 // compute value by adding m0 and m1 registers
 121:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 value = HWREG(RFCORE_SFR_MTMOVF0);
 373              		.loc 1 121 0
 374 01ca 48F62403 		movw	r3, #34852
 375 01ce C4F20803 		movt	r3, 16392
 376 01d2 1B68     		ldr	r3, [r3, #0]
 377 01d4 7B60     		str	r3, [r7, #4]
 122:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 value+=(HWREG(RFCORE_SFR_MTMOVF1)<<8);
 378              		.loc 1 122 0
 379 01d6 48F62003 		movw	r3, #34848
 380 01da C4F20803 		movt	r3, 16392
 381 01de 1B68     		ldr	r3, [r3, #0]
 382 01e0 4FEA0323 		lsl	r3, r3, #8
 383 01e4 7A68     		ldr	r2, [r7, #4]
 384 01e6 D318     		adds	r3, r2, r3
 385 01e8 7B60     		str	r3, [r7, #4]
 123:bsp/boards/OpenMote-CC2538/radiotimer.c ****      value+=(HWREG(RFCORE_SFR_MTMOVF2)<<16);
 386              		.loc 1 123 0
 387 01ea 48F61C03 		movw	r3, #34844
 388 01ee C4F20803 		movt	r3, 16392
 389 01f2 1B68     		ldr	r3, [r3, #0]
 390 01f4 4FEA0343 		lsl	r3, r3, #16
 391 01f8 7A68     		ldr	r2, [r7, #4]
 392 01fa D318     		adds	r3, r2, r3
 393 01fc 7B60     		str	r3, [r7, #4]
 124:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 125:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 return value;
 394              		.loc 1 125 0
 395 01fe 7B68     		ldr	r3, [r7, #4]
 126:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 396              		.loc 1 126 0
 397 0200 1846     		mov	r0, r3
 398 0202 07F10C07 		add	r7, r7, #12
 399 0206 BD46     		mov	sp, r7
 400 0208 80BC     		pop	{r7}
 401 020a 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE6:
 405              		.align	2
 406              		.global	radiotimer_setPeriod
 407              		.thumb
 408              		.thumb_func
 410              	radiotimer_setPeriod:
 411              	.LFB7:
 127:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 128:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_setPeriod(PORT_RADIOTIMER_WIDTH period) {
 412              		.loc 1 128 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 020c 80B5     		push	{r7, lr}
 417              	.LCFI20:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 020e 82B0     		sub	sp, sp, #8
 422              	.LCFI21:
 423              		.cfi_def_cfa_offset 16
 424 0210 00AF     		add	r7, sp, #0
 425              	.LCFI22:
 426              		.cfi_def_cfa_register 7
 427 0212 7860     		str	r0, [r7, #4]
 129:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//select period register in the selector so it can be modified -- use OVF  so we have 24bit regist
 130:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMSEL) = (0x02 << RFCORE_SFR_MTMSEL_MTMOVFSEL_S)& RFCORE_SFR_MTMSEL_MTMOVFSEL_M;
 428              		.loc 1 130 0
 429 0214 48F61003 		movw	r3, #34832
 430 0218 C4F20803 		movt	r3, 16392
 431 021c 4FF02002 		mov	r2, #32
 432 0220 1A60     		str	r2, [r3, #0]
 131:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- low 8bits
 132:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF0) = (period << RFCORE_SFR_MTMOVF0_MTMOVF0_S)& RFCORE_SFR_MTMOVF0_MTMOVF0_M
 433              		.loc 1 132 0
 434 0222 48F62403 		movw	r3, #34852
 435 0226 C4F20803 		movt	r3, 16392
 436 022a 7A68     		ldr	r2, [r7, #4]
 437 022c D2B2     		uxtb	r2, r2
 438 022e 1A60     		str	r2, [r3, #0]
 133:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- middle 8bits
 134:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF1) = ((period >> 8) << RFCORE_SFR_MTMOVF1_MTMOVF1_S)& RFCORE_SFR_MTMOVF1_MT
 439              		.loc 1 134 0
 440 0230 48F62003 		movw	r3, #34848
 441 0234 C4F20803 		movt	r3, 16392
 442 0238 7A68     		ldr	r2, [r7, #4]
 443 023a 4FEA1222 		lsr	r2, r2, #8
 444 023e D2B2     		uxtb	r2, r2
 445 0240 1A60     		str	r2, [r3, #0]
 135:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- high 8bits
 136:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF2) = ((period >> 16) << RFCORE_SFR_MTMOVF2_MTMOVF2_S)& RFCORE_SFR_MTMOVF2_M
 446              		.loc 1 136 0
 447 0242 48F61C03 		movw	r3, #34844
 448 0246 C4F20803 		movt	r3, 16392
 449 024a 7A68     		ldr	r2, [r7, #4]
 450 024c 4FEA1242 		lsr	r2, r2, #16
 451 0250 D2B2     		uxtb	r2, r2
 452 0252 1A60     		str	r2, [r3, #0]
 137:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 138:bsp/boards/OpenMote-CC2538/radiotimer.c ****     IntEnable(INT_MACTIMR);
 453              		.loc 1 138 0
 454 0254 4FF0A200 		mov	r0, #162
 455 0258 FFF7FEFF 		bl	IntEnable
 139:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 456              		.loc 1 139 0
 457 025c 07F10807 		add	r7, r7, #8
 458 0260 BD46     		mov	sp, r7
 459 0262 80BD     		pop	{r7, pc}
 460              		.cfi_endproc
 461              	.LFE7:
 463              		.align	2
 464              		.global	radiotimer_getPeriod
 465              		.thumb
 466              		.thumb_func
 468              	radiotimer_getPeriod:
 469              	.LFB8:
 140:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 141:bsp/boards/OpenMote-CC2538/radiotimer.c **** PORT_RADIOTIMER_WIDTH radiotimer_getPeriod() {
 470              		.loc 1 141 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 8
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0264 80B4     		push	{r7}
 476              	.LCFI23:
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0266 83B0     		sub	sp, sp, #12
 480              	.LCFI24:
 481              		.cfi_def_cfa_offset 16
 482 0268 00AF     		add	r7, sp, #0
 483              	.LCFI25:
 484              		.cfi_def_cfa_register 7
 142:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	PORT_RADIOTIMER_WIDTH period=0;
 485              		.loc 1 142 0
 486 026a 4FF00003 		mov	r3, #0
 487 026e 7B60     		str	r3, [r7, #4]
 143:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//select period register in the selector so it can be read
 144:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMSEL) = (0x02 << RFCORE_SFR_MTMSEL_MTMOVFSEL_S) & RFCORE_SFR_MTMSEL_MTMOVFSEL_M
 488              		.loc 1 144 0
 489 0270 48F61003 		movw	r3, #34832
 490 0274 C4F20803 		movt	r3, 16392
 491 0278 4FF02002 		mov	r2, #32
 492 027c 1A60     		str	r2, [r3, #0]
 145:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	// compute period by adding m0 and m1 registers
 146:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	period = HWREG(RFCORE_SFR_MTMOVF0);
 493              		.loc 1 146 0
 494 027e 48F62403 		movw	r3, #34852
 495 0282 C4F20803 		movt	r3, 16392
 496 0286 1B68     		ldr	r3, [r3, #0]
 497 0288 7B60     		str	r3, [r7, #4]
 147:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	period+=(HWREG(RFCORE_SFR_MTMOVF1)<<8);
 498              		.loc 1 147 0
 499 028a 48F62003 		movw	r3, #34848
 500 028e C4F20803 		movt	r3, 16392
 501 0292 1B68     		ldr	r3, [r3, #0]
 502 0294 4FEA0323 		lsl	r3, r3, #8
 503 0298 7A68     		ldr	r2, [r7, #4]
 504 029a D318     		adds	r3, r2, r3
 505 029c 7B60     		str	r3, [r7, #4]
 148:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	period+=(HWREG(RFCORE_SFR_MTMOVF2)<<16);
 506              		.loc 1 148 0
 507 029e 48F61C03 		movw	r3, #34844
 508 02a2 C4F20803 		movt	r3, 16392
 509 02a6 1B68     		ldr	r3, [r3, #0]
 510 02a8 4FEA0343 		lsl	r3, r3, #16
 511 02ac 7A68     		ldr	r2, [r7, #4]
 512 02ae D318     		adds	r3, r2, r3
 513 02b0 7B60     		str	r3, [r7, #4]
 149:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 150:bsp/boards/OpenMote-CC2538/radiotimer.c ****     return period;
 514              		.loc 1 150 0
 515 02b2 7B68     		ldr	r3, [r7, #4]
 151:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 516              		.loc 1 151 0
 517 02b4 1846     		mov	r0, r3
 518 02b6 07F10C07 		add	r7, r7, #12
 519 02ba BD46     		mov	sp, r7
 520 02bc 80BC     		pop	{r7}
 521 02be 7047     		bx	lr
 522              		.cfi_endproc
 523              	.LFE8:
 525              		.align	2
 526              		.global	radiotimer_schedule
 527              		.thumb
 528              		.thumb_func
 530              	radiotimer_schedule:
 531              	.LFB9:
 152:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 153:bsp/boards/OpenMote-CC2538/radiotimer.c **** //===== compare
 154:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 155:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_schedule(PORT_RADIOTIMER_WIDTH offset) {
 532              		.loc 1 155 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 02c0 80B5     		push	{r7, lr}
 537              	.LCFI26:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 7, -8
 540              		.cfi_offset 14, -4
 541 02c2 82B0     		sub	sp, sp, #8
 542              	.LCFI27:
 543              		.cfi_def_cfa_offset 16
 544 02c4 00AF     		add	r7, sp, #0
 545              	.LCFI28:
 546              		.cfi_def_cfa_register 7
 547 02c6 7860     		str	r0, [r7, #4]
 156:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//select ovf cmp1 register in the selector so it can be modified
 157:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMSEL) = (0x03 << RFCORE_SFR_MTMSEL_MTMOVFSEL_S) & RFCORE_SFR_MTMSEL_MTMOVFSEL_M
 548              		.loc 1 157 0
 549 02c8 48F61003 		movw	r3, #34832
 550 02cc C4F20803 		movt	r3, 16392
 551 02d0 4FF03002 		mov	r2, #48
 552 02d4 1A60     		str	r2, [r3, #0]
 158:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set value
 159:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF0) = (offset << RFCORE_SFR_MTMOVF0_MTMOVF0_S)& RFCORE_SFR_MTMOVF0_MTMOVF0_M
 553              		.loc 1 159 0
 554 02d6 48F62403 		movw	r3, #34852
 555 02da C4F20803 		movt	r3, 16392
 556 02de 7A68     		ldr	r2, [r7, #4]
 557 02e0 D2B2     		uxtb	r2, r2
 558 02e2 1A60     		str	r2, [r3, #0]
 160:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- middle 8bits
 161:bsp/boards/OpenMote-CC2538/radiotimer.c ****     HWREG(RFCORE_SFR_MTMOVF1) = ((offset >> 8) << RFCORE_SFR_MTMOVF1_MTMOVF1_S) & RFCORE_SFR_MTMOVF
 559              		.loc 1 161 0
 560 02e4 48F62003 		movw	r3, #34848
 561 02e8 C4F20803 		movt	r3, 16392
 562 02ec 7A68     		ldr	r2, [r7, #4]
 563 02ee 4FEA1222 		lsr	r2, r2, #8
 564 02f2 D2B2     		uxtb	r2, r2
 565 02f4 1A60     		str	r2, [r3, #0]
 162:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- high 8bits
 163:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF2) = ((offset >> 16) << RFCORE_SFR_MTMOVF2_MTMOVF2_S)& RFCORE_SFR_MTMOVF2_M
 566              		.loc 1 163 0
 567 02f6 48F61C03 		movw	r3, #34844
 568 02fa C4F20803 		movt	r3, 16392
 569 02fe 7A68     		ldr	r2, [r7, #4]
 570 0300 4FEA1242 		lsr	r2, r2, #16
 571 0304 D2B2     		uxtb	r2, r2
 572 0306 1A60     		str	r2, [r3, #0]
 164:bsp/boards/OpenMote-CC2538/radiotimer.c ****     // enable cmp1 ovf interrupt (this also cancels any pending interrupts)
 165:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//clear interrupts
 166:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTIRQF)=~RFCORE_SFR_MTIRQM_MACTIMER_OVF_COMPARE1M;
 573              		.loc 1 166 0
 574 0308 48F60C03 		movw	r3, #34828
 575 030c C4F20803 		movt	r3, 16392
 576 0310 6FF01002 		mvn	r2, #16
 577 0314 1A60     		str	r2, [r3, #0]
 167:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//enable the timer compare interrupt
 168:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTIRQM)|=RFCORE_SFR_MTIRQM_MACTIMER_OVF_COMPARE1M;
 578              		.loc 1 168 0
 579 0316 48F60803 		movw	r3, #34824
 580 031a C4F20803 		movt	r3, 16392
 581 031e 48F60802 		movw	r2, #34824
 582 0322 C4F20802 		movt	r2, 16392
 583 0326 1268     		ldr	r2, [r2, #0]
 584 0328 42F01002 		orr	r2, r2, #16
 585 032c 1A60     		str	r2, [r3, #0]
 169:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	IntEnable(INT_MACTIMR);
 586              		.loc 1 169 0
 587 032e 4FF0A200 		mov	r0, #162
 588 0332 FFF7FEFF 		bl	IntEnable
 170:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 589              		.loc 1 170 0
 590 0336 07F10807 		add	r7, r7, #8
 591 033a BD46     		mov	sp, r7
 592 033c 80BD     		pop	{r7, pc}
 593              		.cfi_endproc
 594              	.LFE9:
 596 033e 00BF     		.align	2
 597              		.global	radiotimer_cancel
 598              		.thumb
 599              		.thumb_func
 601              	radiotimer_cancel:
 602              	.LFB10:
 171:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 172:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_cancel() {
 603              		.loc 1 172 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 1, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608 0340 80B4     		push	{r7}
 609              	.LCFI29:
 610              		.cfi_def_cfa_offset 4
 611              		.cfi_offset 7, -4
 612 0342 00AF     		add	r7, sp, #0
 613              	.LCFI30:
 614              		.cfi_def_cfa_register 7
 173:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//select ovf cmp1 register in the selector so it can be modified
 174:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMSEL) = (0x03 << RFCORE_SFR_MTMSEL_MTMOVFSEL_S) & RFCORE_SFR_MTMSEL_MTMOVFSEL_M
 615              		.loc 1 174 0
 616 0344 48F61003 		movw	r3, #34832
 617 0348 C4F20803 		movt	r3, 16392
 618 034c 4FF03002 		mov	r2, #48
 619 0350 1A60     		str	r2, [r3, #0]
 175:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set value
 176:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF0) = (0x00 << RFCORE_SFR_MTMOVF0_MTMOVF0_S)& RFCORE_SFR_MTMOVF0_MTMOVF0_M;
 620              		.loc 1 176 0
 621 0352 48F62403 		movw	r3, #34852
 622 0356 C4F20803 		movt	r3, 16392
 623 035a 4FF00002 		mov	r2, #0
 624 035e 1A60     		str	r2, [r3, #0]
 177:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- middle 8bits
 178:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF1) = (0x00 << RFCORE_SFR_MTMOVF1_MTMOVF1_S) & RFCORE_SFR_MTMOVF1_MTMOVF1_M;
 625              		.loc 1 178 0
 626 0360 48F62003 		movw	r3, #34848
 627 0364 C4F20803 		movt	r3, 16392
 628 0368 4FF00002 		mov	r2, #0
 629 036c 1A60     		str	r2, [r3, #0]
 179:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//set the period now -- high 8bits
 180:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMOVF2) = (0x00 << RFCORE_SFR_MTMOVF2_MTMOVF2_S)& RFCORE_SFR_MTMOVF2_MTMOVF2_M;
 630              		.loc 1 180 0
 631 036e 48F61C03 		movw	r3, #34844
 632 0372 C4F20803 		movt	r3, 16392
 633 0376 4FF00002 		mov	r2, #0
 634 037a 1A60     		str	r2, [r3, #0]
 181:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	// disable cmp1 interrupt
 182:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTIRQM)&=~RFCORE_SFR_MTIRQM_MACTIMER_OVF_COMPARE1M;
 635              		.loc 1 182 0
 636 037c 48F60803 		movw	r3, #34824
 637 0380 C4F20803 		movt	r3, 16392
 638 0384 48F60802 		movw	r2, #34824
 639 0388 C4F20802 		movt	r2, 16392
 640 038c 1268     		ldr	r2, [r2, #0]
 641 038e 22F01002 		bic	r2, r2, #16
 642 0392 1A60     		str	r2, [r3, #0]
 183:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	//clear interrupts
 184:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTIRQF)=~RFCORE_SFR_MTIRQM_MACTIMER_OVF_COMPARE1M;
 643              		.loc 1 184 0
 644 0394 48F60C03 		movw	r3, #34828
 645 0398 C4F20803 		movt	r3, 16392
 646 039c 6FF01002 		mvn	r2, #16
 647 03a0 1A60     		str	r2, [r3, #0]
 185:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 186:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 648              		.loc 1 186 0
 649 03a2 BD46     		mov	sp, r7
 650 03a4 80BC     		pop	{r7}
 651 03a6 7047     		bx	lr
 652              		.cfi_endproc
 653              	.LFE10:
 655              		.align	2
 656              		.global	radiotimer_getCapturedTime
 657              		.thumb
 658              		.thumb_func
 660              	radiotimer_getCapturedTime:
 661              	.LFB11:
 187:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 188:bsp/boards/OpenMote-CC2538/radiotimer.c **** //===== capture
 189:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 190:bsp/boards/OpenMote-CC2538/radiotimer.c **** port_INLINE PORT_RADIOTIMER_WIDTH radiotimer_getCapturedTime() {
 662              		.loc 1 190 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 8
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667 03a8 80B4     		push	{r7}
 668              	.LCFI31:
 669              		.cfi_def_cfa_offset 4
 670              		.cfi_offset 7, -4
 671 03aa 83B0     		sub	sp, sp, #12
 672              	.LCFI32:
 673              		.cfi_def_cfa_offset 16
 674 03ac 00AF     		add	r7, sp, #0
 675              	.LCFI33:
 676              		.cfi_def_cfa_register 7
 191:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 volatile PORT_RADIOTIMER_WIDTH value=0;
 677              		.loc 1 191 0
 678 03ae 4FF00003 		mov	r3, #0
 679 03b2 7B60     		str	r3, [r7, #4]
 192:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 193:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 //select period register in the selector so it can be read
 194:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 HWREG(RFCORE_SFR_MTMSEL) = (0x00 << RFCORE_SFR_MTMSEL_MTMOVFSEL_S) & RFCORE_SFR_MTMSEL_MTMOVFSEL_
 680              		.loc 1 194 0
 681 03b4 48F61003 		movw	r3, #34832
 682 03b8 C4F20803 		movt	r3, 16392
 683 03bc 4FF00002 		mov	r2, #0
 684 03c0 1A60     		str	r2, [r3, #0]
 195:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 // compute value by adding m0 and m1 registers
 196:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 value = HWREG(RFCORE_SFR_MTMOVF0);
 685              		.loc 1 196 0
 686 03c2 48F62403 		movw	r3, #34852
 687 03c6 C4F20803 		movt	r3, 16392
 688 03ca 1B68     		ldr	r3, [r3, #0]
 689 03cc 7B60     		str	r3, [r7, #4]
 197:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 value+=(HWREG(RFCORE_SFR_MTMOVF1)<<8);
 690              		.loc 1 197 0
 691 03ce 48F62003 		movw	r3, #34848
 692 03d2 C4F20803 		movt	r3, 16392
 693 03d6 1B68     		ldr	r3, [r3, #0]
 694 03d8 4FEA0322 		lsl	r2, r3, #8
 695 03dc 7B68     		ldr	r3, [r7, #4]
 696 03de D318     		adds	r3, r2, r3
 697 03e0 7B60     		str	r3, [r7, #4]
 198:bsp/boards/OpenMote-CC2538/radiotimer.c ****      value+=(HWREG(RFCORE_SFR_MTMOVF2)<<16);
 698              		.loc 1 198 0
 699 03e2 48F61C03 		movw	r3, #34844
 700 03e6 C4F20803 		movt	r3, 16392
 701 03ea 1B68     		ldr	r3, [r3, #0]
 702 03ec 4FEA0342 		lsl	r2, r3, #16
 703 03f0 7B68     		ldr	r3, [r7, #4]
 704 03f2 D318     		adds	r3, r2, r3
 705 03f4 7B60     		str	r3, [r7, #4]
 199:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 200:bsp/boards/OpenMote-CC2538/radiotimer.c ****      return value;
 706              		.loc 1 200 0
 707 03f6 7B68     		ldr	r3, [r7, #4]
 201:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 708              		.loc 1 201 0
 709 03f8 1846     		mov	r0, r3
 710 03fa 07F10C07 		add	r7, r7, #12
 711 03fe BD46     		mov	sp, r7
 712 0400 80BC     		pop	{r7}
 713 0402 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE11:
 717              		.align	2
 718              		.global	get_real_counter
 719              		.thumb
 720              		.thumb_func
 722              	get_real_counter:
 723              	.LFB12:
 202:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 203:bsp/boards/OpenMote-CC2538/radiotimer.c **** //=========================== private =========================================
 204:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 205:bsp/boards/OpenMote-CC2538/radiotimer.c **** port_INLINE uint16_t get_real_counter(void){
 724              		.loc 1 205 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 8
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729 0404 80B4     		push	{r7}
 730              	.LCFI34:
 731              		.cfi_def_cfa_offset 4
 732              		.cfi_offset 7, -4
 733 0406 83B0     		sub	sp, sp, #12
 734              	.LCFI35:
 735              		.cfi_def_cfa_offset 16
 736 0408 00AF     		add	r7, sp, #0
 737              	.LCFI36:
 738              		.cfi_def_cfa_register 7
 206:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	uint16_t value=0;
 739              		.loc 1 206 0
 740 040a 4FF00003 		mov	r3, #0
 741 040e FB80     		strh	r3, [r7, #6]	@ movhi
 207:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	 //select period register in the selector so it can be read
 208:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	HWREG(RFCORE_SFR_MTMSEL) = (0x00 << RFCORE_SFR_MTMSEL_MTMSEL_S)& RFCORE_SFR_MTMSEL_MTMSEL_M;
 742              		.loc 1 208 0
 743 0410 48F61003 		movw	r3, #34832
 744 0414 C4F20803 		movt	r3, 16392
 745 0418 4FF00002 		mov	r2, #0
 746 041c 1A60     		str	r2, [r3, #0]
 209:bsp/boards/OpenMote-CC2538/radiotimer.c **** 		 // compute value by adding m0 and m1 registers
 210:bsp/boards/OpenMote-CC2538/radiotimer.c ****     value = HWREG(RFCORE_SFR_MTM0) + (HWREG(RFCORE_SFR_MTM1)<<8);
 747              		.loc 1 210 0
 748 041e 48F61403 		movw	r3, #34836
 749 0422 C4F20803 		movt	r3, 16392
 750 0426 1B68     		ldr	r3, [r3, #0]
 751 0428 9AB2     		uxth	r2, r3
 752 042a 48F61803 		movw	r3, #34840
 753 042e C4F20803 		movt	r3, 16392
 754 0432 1B68     		ldr	r3, [r3, #0]
 755 0434 9BB2     		uxth	r3, r3
 756 0436 4FEA0323 		lsl	r3, r3, #8
 757 043a 9BB2     		uxth	r3, r3
 758 043c D318     		adds	r3, r2, r3
 759 043e FB80     		strh	r3, [r7, #6]	@ movhi
 211:bsp/boards/OpenMote-CC2538/radiotimer.c ****     return value;
 760              		.loc 1 211 0
 761 0440 FB88     		ldrh	r3, [r7, #6]
 212:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 762              		.loc 1 212 0
 763 0442 1846     		mov	r0, r3
 764 0444 07F10C07 		add	r7, r7, #12
 765 0448 BD46     		mov	sp, r7
 766 044a 80BC     		pop	{r7}
 767 044c 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE12:
 771 044e 00BF     		.align	2
 772              		.global	radiotimer_isr_private
 773              		.thumb
 774              		.thumb_func
 776              	radiotimer_isr_private:
 777              	.LFB13:
 213:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 214:bsp/boards/OpenMote-CC2538/radiotimer.c **** //=========================== interrupt handlers ==============================
 215:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 216:bsp/boards/OpenMote-CC2538/radiotimer.c **** void radiotimer_isr_private(){
 778              		.loc 1 216 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782 0450 80B5     		push	{r7, lr}
 783              	.LCFI37:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0452 00AF     		add	r7, sp, #0
 788              	.LCFI38:
 789              		.cfi_def_cfa_register 7
 217:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	debugpins_isr_set();
 790              		.loc 1 217 0
 791 0454 FFF7FEFF 		bl	debugpins_isr_set
 218:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	radiotimer_isr();
 792              		.loc 1 218 0
 793 0458 FFF7FEFF 		bl	radiotimer_isr
 219:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	debugpins_isr_clr();
 794              		.loc 1 219 0
 795 045c FFF7FEFF 		bl	debugpins_isr_clr
 220:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 796              		.loc 1 220 0
 797 0460 80BD     		pop	{r7, pc}
 798              		.cfi_endproc
 799              	.LFE13:
 801 0462 00BF     		.align	2
 802              		.global	radiotimer_isr
 803              		.thumb
 804              		.thumb_func
 806              	radiotimer_isr:
 807              	.LFB14:
 221:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 222:bsp/boards/OpenMote-CC2538/radiotimer.c **** /*
 223:bsp/boards/OpenMote-CC2538/radiotimer.c ****  * The interrupt flags are given in the RFCORE_SFR_MTIRQF registers. The interrupt flag bits are se
 224:bsp/boards/OpenMote-CC2538/radiotimer.c **** by hardware and are cleared only by writing to the SFR register.
 225:bsp/boards/OpenMote-CC2538/radiotimer.c **** Each interrupt source can be masked by its corresponding mask bit in the RFCORE_SFR_MTIRQM
 226:bsp/boards/OpenMote-CC2538/radiotimer.c **** register. An interrupt is generated when the corresponding mask bit is set; otherwise, the interrup
 227:bsp/boards/OpenMote-CC2538/radiotimer.c **** generated. The interrupt flag bit is set, however, regardless of the state of the interrupt mask bi
 228:bsp/boards/OpenMote-CC2538/radiotimer.c ****  *
 229:bsp/boards/OpenMote-CC2538/radiotimer.c ****  */
 230:bsp/boards/OpenMote-CC2538/radiotimer.c **** kick_scheduler_t radiotimer_isr() {
 808              		.loc 1 230 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 8
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812 0464 80B5     		push	{r7, lr}
 813              	.LCFI39:
 814              		.cfi_def_cfa_offset 8
 815              		.cfi_offset 7, -8
 816              		.cfi_offset 14, -4
 817 0466 82B0     		sub	sp, sp, #8
 818              	.LCFI40:
 819              		.cfi_def_cfa_offset 16
 820 0468 00AF     		add	r7, sp, #0
 821              	.LCFI41:
 822              		.cfi_def_cfa_register 7
 231:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 232:bsp/boards/OpenMote-CC2538/radiotimer.c ****    uint8_t t2irqm;
 233:bsp/boards/OpenMote-CC2538/radiotimer.c ****    uint8_t t2irqf;
 234:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 235:bsp/boards/OpenMote-CC2538/radiotimer.c ****    t2irqm = HWREG(RFCORE_SFR_MTIRQM);
 823              		.loc 1 235 0
 824 046a 48F60803 		movw	r3, #34824
 825 046e C4F20803 		movt	r3, 16392
 826 0472 1B68     		ldr	r3, [r3, #0]
 827 0474 FB71     		strb	r3, [r7, #7]
 236:bsp/boards/OpenMote-CC2538/radiotimer.c ****    t2irqf = HWREG(RFCORE_SFR_MTIRQF);
 828              		.loc 1 236 0
 829 0476 48F60C03 		movw	r3, #34828
 830 047a C4F20803 		movt	r3, 16392
 831 047e 1B68     		ldr	r3, [r3, #0]
 832 0480 BB71     		strb	r3, [r7, #6]
 237:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 238:bsp/boards/OpenMote-CC2538/radiotimer.c ****    IntPendClear(INT_MACTIMR);
 833              		.loc 1 238 0
 834 0482 4FF0A200 		mov	r0, #162
 835 0486 FFF7FEFF 		bl	IntPendClear
 239:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 240:bsp/boards/OpenMote-CC2538/radiotimer.c ****    if ((t2irqf & RFCORE_SFR_MTIRQM_MACTIMER_OVF_COMPARE1M)& t2irqm){ // compare 1
 836              		.loc 1 240 0
 837 048a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 838 048c 03F01002 		and	r2, r3, #16
 839 0490 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 840 0492 1340     		ands	r3, r3, r2
 841 0494 002B     		cmp	r3, #0
 842 0496 18D0     		beq	.L23
 241:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	   debugpins_isr_toggle();
 843              		.loc 1 241 0
 844 0498 FFF7FEFF 		bl	debugpins_isr_toggle
 242:bsp/boards/OpenMote-CC2538/radiotimer.c ****   	   //clear interrupt
 243:bsp/boards/OpenMote-CC2538/radiotimer.c ****   	   HWREG(RFCORE_SFR_MTIRQF)=~RFCORE_SFR_MTIRQM_MACTIMER_OVF_COMPARE1M;
 845              		.loc 1 243 0
 846 049c 48F60C03 		movw	r3, #34828
 847 04a0 C4F20803 		movt	r3, 16392
 848 04a4 6FF01002 		mvn	r2, #16
 849 04a8 1A60     		str	r2, [r3, #0]
 244:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 245:bsp/boards/OpenMote-CC2538/radiotimer.c ****   	   if (radiotimer_vars.compare_cb!=NULL) {
 850              		.loc 1 245 0
 851 04aa 40F20003 		movw	r3, #:lower16:radiotimer_vars
 852 04ae C0F20003 		movt	r3, #:upper16:radiotimer_vars
 853 04b2 5B68     		ldr	r3, [r3, #4]
 854 04b4 002B     		cmp	r3, #0
 855 04b6 28D0     		beq	.L24
 246:bsp/boards/OpenMote-CC2538/radiotimer.c ****               // call the callback
 247:bsp/boards/OpenMote-CC2538/radiotimer.c ****               radiotimer_vars.compare_cb();
 856              		.loc 1 247 0
 857 04b8 40F20003 		movw	r3, #:lower16:radiotimer_vars
 858 04bc C0F20003 		movt	r3, #:upper16:radiotimer_vars
 859 04c0 5B68     		ldr	r3, [r3, #4]
 860 04c2 9847     		blx	r3
 248:bsp/boards/OpenMote-CC2538/radiotimer.c ****             // kick the OS
 249:bsp/boards/OpenMote-CC2538/radiotimer.c ****               return KICK_SCHEDULER;
 861              		.loc 1 249 0
 862 04c4 4FF00103 		mov	r3, #1
 863 04c8 21E0     		b	.L25
 864              	.L23:
 250:bsp/boards/OpenMote-CC2538/radiotimer.c ****            }
 251:bsp/boards/OpenMote-CC2538/radiotimer.c ****      } else if((t2irqf & RFCORE_SFR_MTIRQM_MACTIMER_OVF_PERM) & t2irqm){ // timer overflows
 865              		.loc 1 251 0
 866 04ca BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 867 04cc 03F00802 		and	r2, r3, #8
 868 04d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 869 04d2 1340     		ands	r3, r3, r2
 870 04d4 002B     		cmp	r3, #0
 871 04d6 18D0     		beq	.L24
 252:bsp/boards/OpenMote-CC2538/radiotimer.c ****     	 debugpins_isr_toggle();
 872              		.loc 1 252 0
 873 04d8 FFF7FEFF 		bl	debugpins_isr_toggle
 253:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	     //clear interrupt
 254:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	     HWREG(RFCORE_SFR_MTIRQF)=~RFCORE_SFR_MTIRQM_MACTIMER_OVF_PERM;
 874              		.loc 1 254 0
 875 04dc 48F60C03 		movw	r3, #34828
 876 04e0 C4F20803 		movt	r3, 16392
 877 04e4 6FF00802 		mvn	r2, #8
 878 04e8 1A60     		str	r2, [r3, #0]
 255:bsp/boards/OpenMote-CC2538/radiotimer.c **** 
 256:bsp/boards/OpenMote-CC2538/radiotimer.c **** 	     if (radiotimer_vars.overflow_cb!=NULL) {
 879              		.loc 1 256 0
 880 04ea 40F20003 		movw	r3, #:lower16:radiotimer_vars
 881 04ee C0F20003 		movt	r3, #:upper16:radiotimer_vars
 882 04f2 1B68     		ldr	r3, [r3, #0]
 883 04f4 002B     		cmp	r3, #0
 884 04f6 08D0     		beq	.L24
 257:bsp/boards/OpenMote-CC2538/radiotimer.c ****                // call the callback
 258:bsp/boards/OpenMote-CC2538/radiotimer.c ****              radiotimer_vars.overflow_cb();
 885              		.loc 1 258 0
 886 04f8 40F20003 		movw	r3, #:lower16:radiotimer_vars
 887 04fc C0F20003 		movt	r3, #:upper16:radiotimer_vars
 888 0500 1B68     		ldr	r3, [r3, #0]
 889 0502 9847     		blx	r3
 259:bsp/boards/OpenMote-CC2538/radiotimer.c ****                // kick the OS
 260:bsp/boards/OpenMote-CC2538/radiotimer.c ****              return KICK_SCHEDULER;
 890              		.loc 1 260 0
 891 0504 4FF00103 		mov	r3, #1
 892 0508 01E0     		b	.L25
 893              	.L24:
 261:bsp/boards/OpenMote-CC2538/radiotimer.c ****           }
 262:bsp/boards/OpenMote-CC2538/radiotimer.c ****    }
 263:bsp/boards/OpenMote-CC2538/radiotimer.c ****    return DO_NOT_KICK_SCHEDULER;
 894              		.loc 1 263 0
 895 050a 4FF00003 		mov	r3, #0
 896              	.L25:
 264:bsp/boards/OpenMote-CC2538/radiotimer.c **** }
 897              		.loc 1 264 0
 898 050e 1846     		mov	r0, r3
 899 0510 07F10807 		add	r7, r7, #8
 900 0514 BD46     		mov	sp, r7
 901 0516 80BD     		pop	{r7, pc}
 902              		.cfi_endproc
 903              	.LFE14:
 905              	.Letext0:
 906              		.file 2 "/opt/gcc-arm-none-eabi-4_7-2013q3/bin/../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none
 907              		.file 3 "bsp/boards/board.h"
 908              		.file 4 "bsp/boards/radiotimer.h"
 909              		.file 5 "bsp/boards/OpenMote-CC2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:00000000 radiotimer.c
     /tmp/ccAZHIMg.s:19     .rodata:00000000 $d
     /tmp/ccAZHIMg.s:22     .rodata:00000000 rreg_uriquery
     /tmp/ccAZHIMg.s:27     .rodata:00000008 infoBoardname
     /tmp/ccAZHIMg.s:32     .rodata:00000010 infouCName
     /tmp/ccAZHIMg.s:37     .rodata:00000018 infoRadioName
                            *COM*:00000008 radiotimer_vars
     /tmp/ccAZHIMg.s:41     .text:00000000 $t
     /tmp/ccAZHIMg.s:46     .text:00000000 radiotimer_init
     /tmp/ccAZHIMg.s:77     .text:0000001c radiotimer_setOverflowCb
     /tmp/ccAZHIMg.s:113    .text:0000003c radiotimer_setCompareCb
     /tmp/ccAZHIMg.s:149    .text:0000005c radiotimer_setStartFrameCb
     /tmp/ccAZHIMg.s:178    .text:00000068 radiotimer_setEndFrameCb
     /tmp/ccAZHIMg.s:207    .text:00000074 radiotimer_start
     /tmp/ccAZHIMg.s:776    .text:00000450 radiotimer_isr_private
     /tmp/ccAZHIMg.s:348    .text:000001b0 radiotimer_getValue
     /tmp/ccAZHIMg.s:410    .text:0000020c radiotimer_setPeriod
     /tmp/ccAZHIMg.s:468    .text:00000264 radiotimer_getPeriod
     /tmp/ccAZHIMg.s:530    .text:000002c0 radiotimer_schedule
     /tmp/ccAZHIMg.s:601    .text:00000340 radiotimer_cancel
     /tmp/ccAZHIMg.s:660    .text:000003a8 radiotimer_getCapturedTime
     /tmp/ccAZHIMg.s:722    .text:00000404 get_real_counter
     /tmp/ccAZHIMg.s:806    .text:00000464 radiotimer_isr
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e96eee74da26538b12ac9582e3798382
                           .group:00000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:00000000 wm4.hw_rfcore_sfr.h.39.02e95b929110002747bf7464de694b0d
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.40.cf962ebbec441b3ac67502735f0765db
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.21.2f0cbb5ab4c556c54c487f727dca8532
                           .group:00000000 wm4.toolchain_defs.h.2.59a5259f74cb714abc17e042354ff20f
                           .group:00000000 wm4.sys_ctrl.h.41.c6bbd4dace326d685c1afa45bc1ba1e2

UNDEFINED SYMBOLS
memset
IntRegister
IntEnable
debugpins_isr_set
debugpins_isr_clr
IntPendClear
debugpins_isr_toggle
