   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"board.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.text
  40              		.align	2
  41              		.global	main
  42              		.thumb
  43              		.thumb_func
  45              	main:
  46              	.LFB0:
  47              		.file 1 "bsp/boards/OpenMote-CC2538/board.c"
   1:bsp/boards/OpenMote-CC2538/board.c **** /**
   2:bsp/boards/OpenMote-CC2538/board.c ****  * Author: Xavier Vilajosana (xvilajosana@eecs.berkeley.edu)
   3:bsp/boards/OpenMote-CC2538/board.c ****  *         Pere Tuset (peretuset@openmote.com)
   4:bsp/boards/OpenMote-CC2538/board.c ****  * Date:   July 2013
   5:bsp/boards/OpenMote-CC2538/board.c ****  * Description: CC2538-specific definition of the "board" bsp module.
   6:bsp/boards/OpenMote-CC2538/board.c ****  */
   7:bsp/boards/OpenMote-CC2538/board.c **** 
   8:bsp/boards/OpenMote-CC2538/board.c **** #include <headers/hw_ioc.h>
   9:bsp/boards/OpenMote-CC2538/board.c **** #include <headers/hw_memmap.h>
  10:bsp/boards/OpenMote-CC2538/board.c **** #include <headers/hw_ssi.h>
  11:bsp/boards/OpenMote-CC2538/board.c **** #include <headers/hw_sys_ctrl.h>
  12:bsp/boards/OpenMote-CC2538/board.c **** #include <headers/hw_types.h>
  13:bsp/boards/OpenMote-CC2538/board.c **** 
  14:bsp/boards/OpenMote-CC2538/board.c **** #include "board.h"
  15:bsp/boards/OpenMote-CC2538/board.c **** #include "leds.h"
  16:bsp/boards/OpenMote-CC2538/board.c **** #include "ioc.h"
  17:bsp/boards/OpenMote-CC2538/board.c **** #include "gpio.h"
  18:bsp/boards/OpenMote-CC2538/board.c **** #include "sys_ctrl.h"
  19:bsp/boards/OpenMote-CC2538/board.c **** #include "interrupt.h"
  20:bsp/boards/OpenMote-CC2538/board.c **** #include "bsp_timer.h"
  21:bsp/boards/OpenMote-CC2538/board.c **** #include "radiotimer.h"
  22:bsp/boards/OpenMote-CC2538/board.c **** #include "debugpins.h"
  23:bsp/boards/OpenMote-CC2538/board.c **** #include "uart.h"
  24:bsp/boards/OpenMote-CC2538/board.c **** #include "radio.h"
  25:bsp/boards/OpenMote-CC2538/board.c **** #include "flash.h"
  26:bsp/boards/OpenMote-CC2538/board.c **** #include "i2c.h"
  27:bsp/boards/OpenMote-CC2538/board.c **** 
  28:bsp/boards/OpenMote-CC2538/board.c **** //=========================== variables =======================================
  29:bsp/boards/OpenMote-CC2538/board.c **** 
  30:bsp/boards/OpenMote-CC2538/board.c **** #define BSP_ANTENNA_BASE                ( GPIO_D_BASE )
  31:bsp/boards/OpenMote-CC2538/board.c **** #define BSP_ANTENNA_INT                 ( GPIO_PIN_5 )
  32:bsp/boards/OpenMote-CC2538/board.c **** #define BSP_ANTENNA_EXT                 ( GPIO_PIN_4 )
  33:bsp/boards/OpenMote-CC2538/board.c **** 
  34:bsp/boards/OpenMote-CC2538/board.c **** #define BSP_BUTTON_BASE                 ( GPIO_C_BASE )
  35:bsp/boards/OpenMote-CC2538/board.c **** #define BSP_BUTTON_USER                 ( GPIO_PIN_3 )
  36:bsp/boards/OpenMote-CC2538/board.c **** 
  37:bsp/boards/OpenMote-CC2538/board.c **** #define CC2538_FLASH_ADDRESS            ( 0x0027F800 )
  38:bsp/boards/OpenMote-CC2538/board.c **** 
  39:bsp/boards/OpenMote-CC2538/board.c **** //=========================== prototypes ======================================
  40:bsp/boards/OpenMote-CC2538/board.c **** 
  41:bsp/boards/OpenMote-CC2538/board.c **** void antenna_init(void);
  42:bsp/boards/OpenMote-CC2538/board.c **** void antenna_internal(void);
  43:bsp/boards/OpenMote-CC2538/board.c **** void antenna_external(void);
  44:bsp/boards/OpenMote-CC2538/board.c **** 
  45:bsp/boards/OpenMote-CC2538/board.c **** void button_init(void);
  46:bsp/boards/OpenMote-CC2538/board.c **** 
  47:bsp/boards/OpenMote-CC2538/board.c **** void GPIO_C_Isr_Handler(void);
  48:bsp/boards/OpenMote-CC2538/board.c **** 
  49:bsp/boards/OpenMote-CC2538/board.c **** static void clock_init(void);
  50:bsp/boards/OpenMote-CC2538/board.c **** static void gpio_init(void);
  51:bsp/boards/OpenMote-CC2538/board.c **** 
  52:bsp/boards/OpenMote-CC2538/board.c **** static void SysCtrlDeepSleepSetting(void);
  53:bsp/boards/OpenMote-CC2538/board.c **** static void SysCtrlSleepSetting(void);
  54:bsp/boards/OpenMote-CC2538/board.c **** static void SysCtrlRunSetting(void);
  55:bsp/boards/OpenMote-CC2538/board.c **** static void SysCtrlWakeupSetting(void);
  56:bsp/boards/OpenMote-CC2538/board.c **** 
  57:bsp/boards/OpenMote-CC2538/board.c **** //=========================== main ============================================
  58:bsp/boards/OpenMote-CC2538/board.c **** 
  59:bsp/boards/OpenMote-CC2538/board.c **** extern int mote_main(void);
  60:bsp/boards/OpenMote-CC2538/board.c **** 
  61:bsp/boards/OpenMote-CC2538/board.c **** int main(void) {
  48              		.loc 1 61 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52 0000 80B5     		push	{r7, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 00AF     		add	r7, sp, #0
  58              	.LCFI1:
  59              		.cfi_def_cfa_register 7
  62:bsp/boards/OpenMote-CC2538/board.c ****    return mote_main();
  60              		.loc 1 62 0
  61 0004 FFF7FEFF 		bl	mote_main
  62 0008 0346     		mov	r3, r0
  63:bsp/boards/OpenMote-CC2538/board.c **** }
  63              		.loc 1 63 0
  64 000a 1846     		mov	r0, r3
  65 000c 80BD     		pop	{r7, pc}
  66              		.cfi_endproc
  67              	.LFE0:
  69 000e 00BF     		.align	2
  70              		.global	board_init
  71              		.thumb
  72              		.thumb_func
  74              	board_init:
  75              	.LFB1:
  64:bsp/boards/OpenMote-CC2538/board.c **** 
  65:bsp/boards/OpenMote-CC2538/board.c **** //=========================== public ==========================================
  66:bsp/boards/OpenMote-CC2538/board.c **** 
  67:bsp/boards/OpenMote-CC2538/board.c **** void board_init() {
  76              		.loc 1 67 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0010 80B5     		push	{r7, lr}
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0012 00AF     		add	r7, sp, #0
  86              	.LCFI3:
  87              		.cfi_def_cfa_register 7
  68:bsp/boards/OpenMote-CC2538/board.c ****    gpio_init();
  88              		.loc 1 68 0
  89 0014 00F0BEF8 		bl	gpio_init
  69:bsp/boards/OpenMote-CC2538/board.c ****    clock_init();
  90              		.loc 1 69 0
  91 0018 00F008F9 		bl	clock_init
  70:bsp/boards/OpenMote-CC2538/board.c **** 
  71:bsp/boards/OpenMote-CC2538/board.c ****    antenna_init();
  92              		.loc 1 71 0
  93 001c FFF7FEFF 		bl	antenna_init
  72:bsp/boards/OpenMote-CC2538/board.c ****    antenna_external();
  94              		.loc 1 72 0
  95 0020 FFF7FEFF 		bl	antenna_external
  73:bsp/boards/OpenMote-CC2538/board.c **** 
  74:bsp/boards/OpenMote-CC2538/board.c ****    leds_init();
  96              		.loc 1 74 0
  97 0024 FFF7FEFF 		bl	leds_init
  75:bsp/boards/OpenMote-CC2538/board.c ****    debugpins_init();
  98              		.loc 1 75 0
  99 0028 FFF7FEFF 		bl	debugpins_init
  76:bsp/boards/OpenMote-CC2538/board.c ****    button_init();
 100              		.loc 1 76 0
 101 002c FFF7FEFF 		bl	button_init
  77:bsp/boards/OpenMote-CC2538/board.c ****    bsp_timer_init();
 102              		.loc 1 77 0
 103 0030 FFF7FEFF 		bl	bsp_timer_init
  78:bsp/boards/OpenMote-CC2538/board.c ****    radiotimer_init();
 104              		.loc 1 78 0
 105 0034 FFF7FEFF 		bl	radiotimer_init
  79:bsp/boards/OpenMote-CC2538/board.c ****    uart_init();
 106              		.loc 1 79 0
 107 0038 FFF7FEFF 		bl	uart_init
  80:bsp/boards/OpenMote-CC2538/board.c ****    radio_init();
 108              		.loc 1 80 0
 109 003c FFF7FEFF 		bl	radio_init
  81:bsp/boards/OpenMote-CC2538/board.c ****    i2c_init();
 110              		.loc 1 81 0
 111 0040 FFF7FEFF 		bl	i2c_init
  82:bsp/boards/OpenMote-CC2538/board.c **** }
 112              		.loc 1 82 0
 113 0044 80BD     		pop	{r7, pc}
 114              		.cfi_endproc
 115              	.LFE1:
 117 0046 00BF     		.align	2
 118              		.global	button_init
 119              		.thumb
 120              		.thumb_func
 122              	button_init:
 123              	.LFB2:
  83:bsp/boards/OpenMote-CC2538/board.c **** 
  84:bsp/boards/OpenMote-CC2538/board.c **** /**
  85:bsp/boards/OpenMote-CC2538/board.c ****  * Configures the user button as input source
  86:bsp/boards/OpenMote-CC2538/board.c ****  */
  87:bsp/boards/OpenMote-CC2538/board.c **** void button_init(){
 124              		.loc 1 87 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0048 80B5     		push	{r7, lr}
 129              	.LCFI4:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 7, -8
 132              		.cfi_offset 14, -4
 133 004a 00AF     		add	r7, sp, #0
 134              	.LCFI5:
 135              		.cfi_def_cfa_register 7
  88:bsp/boards/OpenMote-CC2538/board.c **** 	GPIOPinTypeGPIOInput(BSP_BUTTON_BASE, BSP_BUTTON_USER);
 136              		.loc 1 88 0
 137 004c 4FF43040 		mov	r0, #45056
 138 0050 C4F20D00 		movt	r0, 16397
 139 0054 4FF00801 		mov	r1, #8
 140 0058 FFF7FEFF 		bl	GPIOPinTypeGPIOInput
  89:bsp/boards/OpenMote-CC2538/board.c **** 	GPIOIntTypeSet(BSP_BUTTON_BASE, BSP_BUTTON_USER,GPIO_FALLING_EDGE);
 141              		.loc 1 89 0
 142 005c 4FF43040 		mov	r0, #45056
 143 0060 C4F20D00 		movt	r0, 16397
 144 0064 4FF00801 		mov	r1, #8
 145 0068 4FF00002 		mov	r2, #0
 146 006c FFF7FEFF 		bl	GPIOIntTypeSet
  90:bsp/boards/OpenMote-CC2538/board.c **** 	GPIOPortIntRegister(BSP_BUTTON_BASE, GPIO_C_Isr_Handler);
 147              		.loc 1 90 0
 148 0070 4FF43040 		mov	r0, #45056
 149 0074 C4F20D00 		movt	r0, 16397
 150 0078 40F20001 		movw	r1, #:lower16:GPIO_C_Isr_Handler
 151 007c C0F20001 		movt	r1, #:upper16:GPIO_C_Isr_Handler
 152 0080 FFF7FEFF 		bl	GPIOPortIntRegister
  91:bsp/boards/OpenMote-CC2538/board.c **** 	GPIOPinIntClear(BSP_BUTTON_BASE, BSP_BUTTON_USER);
 153              		.loc 1 91 0
 154 0084 4FF43040 		mov	r0, #45056
 155 0088 C4F20D00 		movt	r0, 16397
 156 008c 4FF00801 		mov	r1, #8
 157 0090 FFF7FEFF 		bl	GPIOPinIntClear
  92:bsp/boards/OpenMote-CC2538/board.c **** 	GPIOPinIntEnable(BSP_BUTTON_BASE, BSP_BUTTON_USER);
 158              		.loc 1 92 0
 159 0094 4FF43040 		mov	r0, #45056
 160 0098 C4F20D00 		movt	r0, 16397
 161 009c 4FF00801 		mov	r1, #8
 162 00a0 FFF7FEFF 		bl	GPIOPinIntEnable
  93:bsp/boards/OpenMote-CC2538/board.c **** }
 163              		.loc 1 93 0
 164 00a4 80BD     		pop	{r7, pc}
 165              		.cfi_endproc
 166              	.LFE2:
 168 00a6 00BF     		.align	2
 169              		.global	GPIO_C_Isr_Handler
 170              		.thumb
 171              		.thumb_func
 173              	GPIO_C_Isr_Handler:
 174              	.LFB3:
  94:bsp/boards/OpenMote-CC2538/board.c **** 
  95:bsp/boards/OpenMote-CC2538/board.c **** /**
  96:bsp/boards/OpenMote-CC2538/board.c ****  * GPIO_C ISR handler. User button is GPIO_C_3
  97:bsp/boards/OpenMote-CC2538/board.c ****  * Erases a Flash sector to trigger the bootloader backdoor
  98:bsp/boards/OpenMote-CC2538/board.c ****  */
  99:bsp/boards/OpenMote-CC2538/board.c **** void GPIO_C_Isr_Handler(){
 175              		.loc 1 99 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 00a8 80B5     		push	{r7, lr}
 180              	.LCFI6:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 00aa 00AF     		add	r7, sp, #0
 185              	.LCFI7:
 186              		.cfi_def_cfa_register 7
 100:bsp/boards/OpenMote-CC2538/board.c ****     IntMasterDisable();
 187              		.loc 1 100 0
 188 00ac FFF7FEFF 		bl	IntMasterDisable
 101:bsp/boards/OpenMote-CC2538/board.c ****     FlashMainPageErase(CC2538_FLASH_ADDRESS);
 189              		.loc 1 101 0
 190 00b0 4FF47840 		mov	r0, #63488
 191 00b4 C0F22700 		movt	r0, 39
 192 00b8 FFF7FEFF 		bl	FlashMainPageErase
 102:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlReset();
 193              		.loc 1 102 0
 194 00bc FFF7FEFF 		bl	SysCtrlReset
 103:bsp/boards/OpenMote-CC2538/board.c **** }
 195              		.loc 1 103 0
 196 00c0 80BD     		pop	{r7, pc}
 197              		.cfi_endproc
 198              	.LFE3:
 200 00c2 00BF     		.align	2
 201              		.global	antenna_init
 202              		.thumb
 203              		.thumb_func
 205              	antenna_init:
 206              	.LFB4:
 104:bsp/boards/OpenMote-CC2538/board.c **** 
 105:bsp/boards/OpenMote-CC2538/board.c **** /**
 106:bsp/boards/OpenMote-CC2538/board.c ****  * Configures the antenna using a RF switch
 107:bsp/boards/OpenMote-CC2538/board.c ****  * INT is the internal antenna (chip) configured through ANT1_SEL (V1)
 108:bsp/boards/OpenMote-CC2538/board.c ****  * EXT is the external antenna (connector) configured through ANT2_SEL (V2)
 109:bsp/boards/OpenMote-CC2538/board.c ****  */
 110:bsp/boards/OpenMote-CC2538/board.c **** void antenna_init(void) {
 207              		.loc 1 110 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 00c4 80B5     		push	{r7, lr}
 212              	.LCFI8:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 00c6 00AF     		add	r7, sp, #0
 217              	.LCFI9:
 218              		.cfi_def_cfa_register 7
 111:bsp/boards/OpenMote-CC2538/board.c ****     // Configure the ANT1 and ANT2 GPIO as output
 112:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinTypeGPIOOutput(BSP_ANTENNA_BASE, BSP_ANTENNA_INT);
 219              		.loc 1 112 0
 220 00c8 4FF44040 		mov	r0, #49152
 221 00cc C4F20D00 		movt	r0, 16397
 222 00d0 4FF02001 		mov	r1, #32
 223 00d4 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 113:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinTypeGPIOOutput(BSP_ANTENNA_BASE, BSP_ANTENNA_EXT);
 224              		.loc 1 113 0
 225 00d8 4FF44040 		mov	r0, #49152
 226 00dc C4F20D00 		movt	r0, 16397
 227 00e0 4FF01001 		mov	r1, #16
 228 00e4 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 114:bsp/boards/OpenMote-CC2538/board.c **** 
 115:bsp/boards/OpenMote-CC2538/board.c ****     // By default the chip antenna is selected as the default
 116:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(BSP_ANTENNA_BASE, BSP_ANTENNA_INT, BSP_ANTENNA_INT);
 229              		.loc 1 116 0
 230 00e8 4FF44040 		mov	r0, #49152
 231 00ec C4F20D00 		movt	r0, 16397
 232 00f0 4FF02001 		mov	r1, #32
 233 00f4 4FF02002 		mov	r2, #32
 234 00f8 FFF7FEFF 		bl	GPIOPinWrite
 117:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(BSP_ANTENNA_BASE, BSP_ANTENNA_EXT, ~BSP_ANTENNA_EXT);
 235              		.loc 1 117 0
 236 00fc 4FF44040 		mov	r0, #49152
 237 0100 C4F20D00 		movt	r0, 16397
 238 0104 4FF01001 		mov	r1, #16
 239 0108 4FF0EF02 		mov	r2, #239
 240 010c FFF7FEFF 		bl	GPIOPinWrite
 118:bsp/boards/OpenMote-CC2538/board.c **** }
 241              		.loc 1 118 0
 242 0110 80BD     		pop	{r7, pc}
 243              		.cfi_endproc
 244              	.LFE4:
 246 0112 00BF     		.align	2
 247              		.global	antenna_external
 248              		.thumb
 249              		.thumb_func
 251              	antenna_external:
 252              	.LFB5:
 119:bsp/boards/OpenMote-CC2538/board.c **** 
 120:bsp/boards/OpenMote-CC2538/board.c **** /**
 121:bsp/boards/OpenMote-CC2538/board.c ****  * Selects the external (connector) antenna
 122:bsp/boards/OpenMote-CC2538/board.c ****  */
 123:bsp/boards/OpenMote-CC2538/board.c **** void antenna_external(void) {
 253              		.loc 1 123 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0114 80B5     		push	{r7, lr}
 258              	.LCFI10:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0116 00AF     		add	r7, sp, #0
 263              	.LCFI11:
 264              		.cfi_def_cfa_register 7
 124:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(BSP_ANTENNA_BASE, BSP_ANTENNA_EXT, BSP_ANTENNA_EXT);
 265              		.loc 1 124 0
 266 0118 4FF44040 		mov	r0, #49152
 267 011c C4F20D00 		movt	r0, 16397
 268 0120 4FF01001 		mov	r1, #16
 269 0124 4FF01002 		mov	r2, #16
 270 0128 FFF7FEFF 		bl	GPIOPinWrite
 125:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(BSP_ANTENNA_BASE, BSP_ANTENNA_INT, ~BSP_ANTENNA_INT);
 271              		.loc 1 125 0
 272 012c 4FF44040 		mov	r0, #49152
 273 0130 C4F20D00 		movt	r0, 16397
 274 0134 4FF02001 		mov	r1, #32
 275 0138 4FF0DF02 		mov	r2, #223
 276 013c FFF7FEFF 		bl	GPIOPinWrite
 126:bsp/boards/OpenMote-CC2538/board.c **** }
 277              		.loc 1 126 0
 278 0140 80BD     		pop	{r7, pc}
 279              		.cfi_endproc
 280              	.LFE5:
 282 0142 00BF     		.align	2
 283              		.global	antenna_internal
 284              		.thumb
 285              		.thumb_func
 287              	antenna_internal:
 288              	.LFB6:
 127:bsp/boards/OpenMote-CC2538/board.c **** 
 128:bsp/boards/OpenMote-CC2538/board.c **** /**
 129:bsp/boards/OpenMote-CC2538/board.c ****  * Selects the internal (chip) antenna
 130:bsp/boards/OpenMote-CC2538/board.c ****  */
 131:bsp/boards/OpenMote-CC2538/board.c **** void antenna_internal(void) {
 289              		.loc 1 131 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293 0144 80B5     		push	{r7, lr}
 294              	.LCFI12:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0146 00AF     		add	r7, sp, #0
 299              	.LCFI13:
 300              		.cfi_def_cfa_register 7
 132:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(BSP_ANTENNA_BASE, BSP_ANTENNA_EXT, ~BSP_ANTENNA_EXT);
 301              		.loc 1 132 0
 302 0148 4FF44040 		mov	r0, #49152
 303 014c C4F20D00 		movt	r0, 16397
 304 0150 4FF01001 		mov	r1, #16
 305 0154 4FF0EF02 		mov	r2, #239
 306 0158 FFF7FEFF 		bl	GPIOPinWrite
 133:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(BSP_ANTENNA_BASE, BSP_ANTENNA_INT, BSP_ANTENNA_INT);
 307              		.loc 1 133 0
 308 015c 4FF44040 		mov	r0, #49152
 309 0160 C4F20D00 		movt	r0, 16397
 310 0164 4FF02001 		mov	r1, #32
 311 0168 4FF02002 		mov	r2, #32
 312 016c FFF7FEFF 		bl	GPIOPinWrite
 134:bsp/boards/OpenMote-CC2538/board.c **** }
 313              		.loc 1 134 0
 314 0170 80BD     		pop	{r7, pc}
 315              		.cfi_endproc
 316              	.LFE6:
 318 0172 00BF     		.align	2
 319              		.global	board_sleep
 320              		.thumb
 321              		.thumb_func
 323              	board_sleep:
 324              	.LFB7:
 135:bsp/boards/OpenMote-CC2538/board.c **** 
 136:bsp/boards/OpenMote-CC2538/board.c **** /**
 137:bsp/boards/OpenMote-CC2538/board.c ****  * Puts the board to sleep
 138:bsp/boards/OpenMote-CC2538/board.c ****  */
 139:bsp/boards/OpenMote-CC2538/board.c **** void board_sleep() {
 325              		.loc 1 139 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329 0174 80B5     		push	{r7, lr}
 330              	.LCFI14:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0176 00AF     		add	r7, sp, #0
 335              	.LCFI15:
 336              		.cfi_def_cfa_register 7
 140:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlPowerModeSet(SYS_CTRL_PM_NOACTION);
 337              		.loc 1 140 0
 338 0178 4FF00000 		mov	r0, #0
 339 017c FFF7FEFF 		bl	SysCtrlPowerModeSet
 141:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlSleep();
 340              		.loc 1 141 0
 341 0180 FFF7FEFF 		bl	SysCtrlSleep
 142:bsp/boards/OpenMote-CC2538/board.c **** }
 342              		.loc 1 142 0
 343 0184 80BD     		pop	{r7, pc}
 344              		.cfi_endproc
 345              	.LFE7:
 347 0186 00BF     		.align	2
 348              		.global	board_reset
 349              		.thumb
 350              		.thumb_func
 352              	board_reset:
 353              	.LFB8:
 143:bsp/boards/OpenMote-CC2538/board.c **** 
 144:bsp/boards/OpenMote-CC2538/board.c **** /**
 145:bsp/boards/OpenMote-CC2538/board.c ****  * Resets the board
 146:bsp/boards/OpenMote-CC2538/board.c ****  */
 147:bsp/boards/OpenMote-CC2538/board.c **** void board_reset() {
 354              		.loc 1 147 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0188 80B5     		push	{r7, lr}
 359              	.LCFI16:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 018a 00AF     		add	r7, sp, #0
 364              	.LCFI17:
 365              		.cfi_def_cfa_register 7
 148:bsp/boards/OpenMote-CC2538/board.c **** 	SysCtrlReset();
 366              		.loc 1 148 0
 367 018c FFF7FEFF 		bl	SysCtrlReset
 149:bsp/boards/OpenMote-CC2538/board.c **** }
 368              		.loc 1 149 0
 369 0190 80BD     		pop	{r7, pc}
 370              		.cfi_endproc
 371              	.LFE8:
 373 0192 00BF     		.align	2
 374              		.thumb
 375              		.thumb_func
 377              	gpio_init:
 378              	.LFB9:
 150:bsp/boards/OpenMote-CC2538/board.c **** 
 151:bsp/boards/OpenMote-CC2538/board.c **** //=========================== private =========================================
 152:bsp/boards/OpenMote-CC2538/board.c **** 
 153:bsp/boards/OpenMote-CC2538/board.c **** static void gpio_init(void)
 154:bsp/boards/OpenMote-CC2538/board.c **** {
 379              		.loc 1 154 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0194 80B5     		push	{r7, lr}
 384              	.LCFI18:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0196 00AF     		add	r7, sp, #0
 389              	.LCFI19:
 390              		.cfi_def_cfa_register 7
 155:bsp/boards/OpenMote-CC2538/board.c ****     /* Set GPIOs as output */
 156:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinTypeGPIOOutput(GPIO_A_BASE, 0xFF);
 391              		.loc 1 156 0
 392 0198 4FF41040 		mov	r0, #36864
 393 019c C4F20D00 		movt	r0, 16397
 394 01a0 4FF0FF01 		mov	r1, #255
 395 01a4 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 157:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinTypeGPIOOutput(GPIO_B_BASE, 0xFF);
 396              		.loc 1 157 0
 397 01a8 4FF42040 		mov	r0, #40960
 398 01ac C4F20D00 		movt	r0, 16397
 399 01b0 4FF0FF01 		mov	r1, #255
 400 01b4 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 158:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinTypeGPIOOutput(GPIO_C_BASE, 0xFF);
 401              		.loc 1 158 0
 402 01b8 4FF43040 		mov	r0, #45056
 403 01bc C4F20D00 		movt	r0, 16397
 404 01c0 4FF0FF01 		mov	r1, #255
 405 01c4 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 159:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinTypeGPIOOutput(GPIO_D_BASE, 0xFF);
 406              		.loc 1 159 0
 407 01c8 4FF44040 		mov	r0, #49152
 408 01cc C4F20D00 		movt	r0, 16397
 409 01d0 4FF0FF01 		mov	r1, #255
 410 01d4 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 160:bsp/boards/OpenMote-CC2538/board.c **** 
 161:bsp/boards/OpenMote-CC2538/board.c ****     /* Initialize GPIOs to low */
 162:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(GPIO_A_BASE, 0xFF, 0x00);
 411              		.loc 1 162 0
 412 01d8 4FF41040 		mov	r0, #36864
 413 01dc C4F20D00 		movt	r0, 16397
 414 01e0 4FF0FF01 		mov	r1, #255
 415 01e4 4FF00002 		mov	r2, #0
 416 01e8 FFF7FEFF 		bl	GPIOPinWrite
 163:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(GPIO_B_BASE, 0xFF, 0x00);
 417              		.loc 1 163 0
 418 01ec 4FF42040 		mov	r0, #40960
 419 01f0 C4F20D00 		movt	r0, 16397
 420 01f4 4FF0FF01 		mov	r1, #255
 421 01f8 4FF00002 		mov	r2, #0
 422 01fc FFF7FEFF 		bl	GPIOPinWrite
 164:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(GPIO_C_BASE, 0xFF, 0x00);
 423              		.loc 1 164 0
 424 0200 4FF43040 		mov	r0, #45056
 425 0204 C4F20D00 		movt	r0, 16397
 426 0208 4FF0FF01 		mov	r1, #255
 427 020c 4FF00002 		mov	r2, #0
 428 0210 FFF7FEFF 		bl	GPIOPinWrite
 165:bsp/boards/OpenMote-CC2538/board.c ****     GPIOPinWrite(GPIO_D_BASE, 0xFF, 0x00);
 429              		.loc 1 165 0
 430 0214 4FF44040 		mov	r0, #49152
 431 0218 C4F20D00 		movt	r0, 16397
 432 021c 4FF0FF01 		mov	r1, #255
 433 0220 4FF00002 		mov	r2, #0
 434 0224 FFF7FEFF 		bl	GPIOPinWrite
 166:bsp/boards/OpenMote-CC2538/board.c **** }
 435              		.loc 1 166 0
 436 0228 80BD     		pop	{r7, pc}
 437              		.cfi_endproc
 438              	.LFE9:
 440 022a 00BF     		.align	2
 441              		.thumb
 442              		.thumb_func
 444              	clock_init:
 445              	.LFB10:
 167:bsp/boards/OpenMote-CC2538/board.c **** 
 168:bsp/boards/OpenMote-CC2538/board.c **** static void clock_init(void)
 169:bsp/boards/OpenMote-CC2538/board.c **** {
 446              		.loc 1 169 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450 022c 80B5     		push	{r7, lr}
 451              	.LCFI20:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 022e 82B0     		sub	sp, sp, #8
 456              	.LCFI21:
 457              		.cfi_def_cfa_offset 16
 458 0230 00AF     		add	r7, sp, #0
 459              	.LCFI22:
 460              		.cfi_def_cfa_register 7
 170:bsp/boards/OpenMote-CC2538/board.c ****     /**
 171:bsp/boards/OpenMote-CC2538/board.c ****      * Disable global interrupts
 172:bsp/boards/OpenMote-CC2538/board.c ****      */
 173:bsp/boards/OpenMote-CC2538/board.c ****     bool bIntDisabled = IntMasterDisable();
 461              		.loc 1 173 0
 462 0232 FFF7FEFF 		bl	IntMasterDisable
 463 0236 0346     		mov	r3, r0
 464 0238 FB71     		strb	r3, [r7, #7]
 174:bsp/boards/OpenMote-CC2538/board.c **** 
 175:bsp/boards/OpenMote-CC2538/board.c ****     /**
 176:bsp/boards/OpenMote-CC2538/board.c ****      * Configure the 32 kHz pins, PD6 and PD7, for crystal operation
 177:bsp/boards/OpenMote-CC2538/board.c ****      * By default they are configured as GPIOs
 178:bsp/boards/OpenMote-CC2538/board.c ****      */
 179:bsp/boards/OpenMote-CC2538/board.c ****     GPIODirModeSet(GPIO_D_BASE, 0x40, GPIO_DIR_MODE_IN);
 465              		.loc 1 179 0
 466 023a 4FF44040 		mov	r0, #49152
 467 023e C4F20D00 		movt	r0, 16397
 468 0242 4FF04001 		mov	r1, #64
 469 0246 4FF00002 		mov	r2, #0
 470 024a FFF7FEFF 		bl	GPIODirModeSet
 180:bsp/boards/OpenMote-CC2538/board.c ****     GPIODirModeSet(GPIO_D_BASE, 0x80, GPIO_DIR_MODE_IN);
 471              		.loc 1 180 0
 472 024e 4FF44040 		mov	r0, #49152
 473 0252 C4F20D00 		movt	r0, 16397
 474 0256 4FF08001 		mov	r1, #128
 475 025a 4FF00002 		mov	r2, #0
 476 025e FFF7FEFF 		bl	GPIODirModeSet
 181:bsp/boards/OpenMote-CC2538/board.c ****     IOCPadConfigSet(GPIO_D_BASE, 0x40, IOC_OVERRIDE_ANA);
 477              		.loc 1 181 0
 478 0262 4FF44040 		mov	r0, #49152
 479 0266 C4F20D00 		movt	r0, 16397
 480 026a 4FF04001 		mov	r1, #64
 481 026e 4FF00102 		mov	r2, #1
 482 0272 FFF7FEFF 		bl	IOCPadConfigSet
 182:bsp/boards/OpenMote-CC2538/board.c ****     IOCPadConfigSet(GPIO_D_BASE, 0x80, IOC_OVERRIDE_ANA);
 483              		.loc 1 182 0
 484 0276 4FF44040 		mov	r0, #49152
 485 027a C4F20D00 		movt	r0, 16397
 486 027e 4FF08001 		mov	r1, #128
 487 0282 4FF00102 		mov	r2, #1
 488 0286 FFF7FEFF 		bl	IOCPadConfigSet
 183:bsp/boards/OpenMote-CC2538/board.c **** 
 184:bsp/boards/OpenMote-CC2538/board.c ****     /**
 185:bsp/boards/OpenMote-CC2538/board.c ****      * Set the real-time clock to use the 32khz internal crystal
 186:bsp/boards/OpenMote-CC2538/board.c ****      * Set the system clock to use the external 32 MHz crystal
 187:bsp/boards/OpenMote-CC2538/board.c ****      * Set the system clock to 32 MHz
 188:bsp/boards/OpenMote-CC2538/board.c ****      */
 189:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlClockSet(true, false, SYS_CTRL_SYSDIV_32MHZ);
 489              		.loc 1 189 0
 490 028a 4FF00100 		mov	r0, #1
 491 028e 4FF00001 		mov	r1, #0
 492 0292 4FF00002 		mov	r2, #0
 493 0296 FFF7FEFF 		bl	SysCtrlClockSet
 190:bsp/boards/OpenMote-CC2538/board.c **** 
 191:bsp/boards/OpenMote-CC2538/board.c ****     /**
 192:bsp/boards/OpenMote-CC2538/board.c ****      * Set the IO clock to operate at 16 MHz
 193:bsp/boards/OpenMote-CC2538/board.c ****      * This way peripherals can run while the system clock is gated
 194:bsp/boards/OpenMote-CC2538/board.c ****      */
 195:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlIOClockSet(SYS_CTRL_SYSDIV_16MHZ);
 494              		.loc 1 195 0
 495 029a 4FF00100 		mov	r0, #1
 496 029e FFF7FEFF 		bl	SysCtrlIOClockSet
 196:bsp/boards/OpenMote-CC2538/board.c **** 
 197:bsp/boards/OpenMote-CC2538/board.c ****     /**
 198:bsp/boards/OpenMote-CC2538/board.c ****      * Wait until the selected clock configuration is stable
 199:bsp/boards/OpenMote-CC2538/board.c ****      */
 200:bsp/boards/OpenMote-CC2538/board.c ****     while (!((HWREG(SYS_CTRL_CLOCK_STA)) & (SYS_CTRL_CLOCK_STA_XOSC_STB)));
 497              		.loc 1 200 0
 498 02a2 00BF     		nop
 499              	.L13:
 500              		.loc 1 200 0 is_stmt 0 discriminator 1
 501 02a4 42F20403 		movw	r3, #8196
 502 02a8 C4F20D03 		movt	r3, 16397
 503 02ac 1B68     		ldr	r3, [r3, #0]
 504 02ae 03F40023 		and	r3, r3, #524288
 505 02b2 002B     		cmp	r3, #0
 506 02b4 F6D0     		beq	.L13
 201:bsp/boards/OpenMote-CC2538/board.c **** 
 202:bsp/boards/OpenMote-CC2538/board.c ****     /**
 203:bsp/boards/OpenMote-CC2538/board.c ****      * Define what peripherals run in each mode
 204:bsp/boards/OpenMote-CC2538/board.c ****      */
 205:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlDeepSleepSetting();
 507              		.loc 1 205 0 is_stmt 1
 508 02b6 00F013F8 		bl	SysCtrlDeepSleepSetting
 206:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlSleepSetting();
 509              		.loc 1 206 0
 510 02ba 00F045F8 		bl	SysCtrlSleepSetting
 207:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlRunSetting();
 511              		.loc 1 207 0
 512 02be 00F077F8 		bl	SysCtrlRunSetting
 208:bsp/boards/OpenMote-CC2538/board.c ****     SysCtrlWakeupSetting();
 513              		.loc 1 208 0
 514 02c2 00F0A9F8 		bl	SysCtrlWakeupSetting
 209:bsp/boards/OpenMote-CC2538/board.c **** 
 210:bsp/boards/OpenMote-CC2538/board.c ****     /**
 211:bsp/boards/OpenMote-CC2538/board.c ****      * Re-enable interrupt if initially enabled.
 212:bsp/boards/OpenMote-CC2538/board.c ****      */
 213:bsp/boards/OpenMote-CC2538/board.c ****     if(!bIntDisabled)
 515              		.loc 1 213 0
 516 02c6 FB79     		ldrb	r3, [r7, #7]
 517 02c8 83F00103 		eor	r3, r3, #1
 518 02cc DBB2     		uxtb	r3, r3
 519 02ce 002B     		cmp	r3, #0
 520 02d0 01D0     		beq	.L12
 214:bsp/boards/OpenMote-CC2538/board.c ****     {
 215:bsp/boards/OpenMote-CC2538/board.c ****         IntMasterEnable();
 521              		.loc 1 215 0
 522 02d2 FFF7FEFF 		bl	IntMasterEnable
 523              	.L12:
 216:bsp/boards/OpenMote-CC2538/board.c ****     }
 217:bsp/boards/OpenMote-CC2538/board.c **** }
 524              		.loc 1 217 0
 525 02d6 07F10807 		add	r7, r7, #8
 526 02da BD46     		mov	sp, r7
 527 02dc 80BD     		pop	{r7, pc}
 528              		.cfi_endproc
 529              	.LFE10:
 531 02de 00BF     		.align	2
 532              		.thumb
 533              		.thumb_func
 535              	SysCtrlDeepSleepSetting:
 536              	.LFB11:
 218:bsp/boards/OpenMote-CC2538/board.c **** 
 219:bsp/boards/OpenMote-CC2538/board.c **** 
 220:bsp/boards/OpenMote-CC2538/board.c **** static void SysCtrlDeepSleepSetting(void)
 221:bsp/boards/OpenMote-CC2538/board.c **** {
 537              		.loc 1 221 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541 02e0 80B5     		push	{r7, lr}
 542              	.LCFI23:
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 7, -8
 545              		.cfi_offset 14, -4
 546 02e2 00AF     		add	r7, sp, #0
 547              	.LCFI24:
 548              		.cfi_def_cfa_register 7
 222:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable General Purpose Timers 0, 1, 2, 3 during deep sleep */
 223:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_GPT0);
 549              		.loc 1 223 0
 550 02e4 4FF00000 		mov	r0, #0
 551 02e8 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 224:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_GPT1);
 552              		.loc 1 224 0
 553 02ec 4FF00100 		mov	r0, #1
 554 02f0 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 225:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_GPT2);
 555              		.loc 1 225 0
 556 02f4 4FF00200 		mov	r0, #2
 557 02f8 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 226:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_GPT3);
 558              		.loc 1 226 0
 559 02fc 4FF00300 		mov	r0, #3
 560 0300 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 227:bsp/boards/OpenMote-CC2538/board.c **** 
 228:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable SSI 0, 1 during deep sleep */
 229:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_SSI0);
 561              		.loc 1 229 0
 562 0304 4FF48070 		mov	r0, #256
 563 0308 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 230:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_SSI1);
 564              		.loc 1 230 0
 565 030c 40F20110 		movw	r0, #257
 566 0310 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 231:bsp/boards/OpenMote-CC2538/board.c **** 
 232:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable UART 0, 1 during deep sleep */
 233:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_UART0);
 567              		.loc 1 233 0
 568 0314 4FF40070 		mov	r0, #512
 569 0318 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 234:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_UART1);
 570              		.loc 1 234 0
 571 031c 40F20120 		movw	r0, #513
 572 0320 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 235:bsp/boards/OpenMote-CC2538/board.c **** 
 236:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable I2C, PKA, AES during deep sleep */
 237:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_I2C);
 573              		.loc 1 237 0
 574 0324 4FF44070 		mov	r0, #768
 575 0328 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 238:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_PKA);
 576              		.loc 1 238 0
 577 032c 4FF48060 		mov	r0, #1024
 578 0330 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 239:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_AES);
 579              		.loc 1 239 0
 580 0334 40F20140 		movw	r0, #1025
 581 0338 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 240:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_RFC);
 582              		.loc 1 240 0
 583 033c 4FF4A060 		mov	r0, #1280
 584 0340 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 241:bsp/boards/OpenMote-CC2538/board.c **** }
 585              		.loc 1 241 0
 586 0344 80BD     		pop	{r7, pc}
 587              		.cfi_endproc
 588              	.LFE11:
 590 0346 00BF     		.align	2
 591              		.thumb
 592              		.thumb_func
 594              	SysCtrlSleepSetting:
 595              	.LFB12:
 242:bsp/boards/OpenMote-CC2538/board.c **** 
 243:bsp/boards/OpenMote-CC2538/board.c **** static void SysCtrlSleepSetting(void)
 244:bsp/boards/OpenMote-CC2538/board.c **** {
 596              		.loc 1 244 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0348 80B5     		push	{r7, lr}
 601              	.LCFI25:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 034a 00AF     		add	r7, sp, #0
 606              	.LCFI26:
 607              		.cfi_def_cfa_register 7
 245:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable General Purpose Timers 0, 1, 2, 3 during sleep */
 246:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_GPT0);
 608              		.loc 1 246 0
 609 034c 4FF00000 		mov	r0, #0
 610 0350 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 247:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_GPT1);
 611              		.loc 1 247 0
 612 0354 4FF00100 		mov	r0, #1
 613 0358 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 248:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_GPT2);
 614              		.loc 1 248 0
 615 035c 4FF00200 		mov	r0, #2
 616 0360 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 249:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_GPT3);
 617              		.loc 1 249 0
 618 0364 4FF00300 		mov	r0, #3
 619 0368 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 250:bsp/boards/OpenMote-CC2538/board.c **** 
 251:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable SSI 0, 1 during sleep */
 252:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_SSI0);
 620              		.loc 1 252 0
 621 036c 4FF48070 		mov	r0, #256
 622 0370 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 253:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_SSI1);
 623              		.loc 1 253 0
 624 0374 40F20110 		movw	r0, #257
 625 0378 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 254:bsp/boards/OpenMote-CC2538/board.c **** 
 255:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable UART 0, 1 during sleep */
 256:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_UART1);
 626              		.loc 1 256 0
 627 037c 40F20120 		movw	r0, #513
 628 0380 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 257:bsp/boards/OpenMote-CC2538/board.c **** 
 258:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable I2C, PKA, AES during sleep */
 259:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_I2C);
 629              		.loc 1 259 0
 630 0384 4FF44070 		mov	r0, #768
 631 0388 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 260:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_PKA);
 632              		.loc 1 260 0
 633 038c 4FF48060 		mov	r0, #1024
 634 0390 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 261:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_AES);
 635              		.loc 1 261 0
 636 0394 40F20140 		movw	r0, #1025
 637 0398 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 262:bsp/boards/OpenMote-CC2538/board.c **** 
 263:bsp/boards/OpenMote-CC2538/board.c ****   /* Enable UART and RFC during sleep */
 264:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepEnable(SYS_CTRL_PERIPH_UART0);
 638              		.loc 1 264 0
 639 039c 4FF40070 		mov	r0, #512
 640 03a0 FFF7FEFF 		bl	SysCtrlPeripheralSleepEnable
 265:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralSleepEnable(SYS_CTRL_PERIPH_RFC);
 641              		.loc 1 265 0
 642 03a4 4FF4A060 		mov	r0, #1280
 643 03a8 FFF7FEFF 		bl	SysCtrlPeripheralSleepEnable
 266:bsp/boards/OpenMote-CC2538/board.c **** }
 644              		.loc 1 266 0
 645 03ac 80BD     		pop	{r7, pc}
 646              		.cfi_endproc
 647              	.LFE12:
 649 03ae 00BF     		.align	2
 650              		.thumb
 651              		.thumb_func
 653              	SysCtrlRunSetting:
 654              	.LFB13:
 267:bsp/boards/OpenMote-CC2538/board.c **** 
 268:bsp/boards/OpenMote-CC2538/board.c **** 
 269:bsp/boards/OpenMote-CC2538/board.c **** void SysCtrlRunSetting(void)
 270:bsp/boards/OpenMote-CC2538/board.c **** {
 655              		.loc 1 270 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 03b0 80B5     		push	{r7, lr}
 660              	.LCFI27:
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 7, -8
 663              		.cfi_offset 14, -4
 664 03b2 00AF     		add	r7, sp, #0
 665              	.LCFI28:
 666              		.cfi_def_cfa_register 7
 271:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable General Purpose Timers 0, 1, 2, 3 when running */
 272:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_GPT0);
 667              		.loc 1 272 0
 668 03b4 4FF00000 		mov	r0, #0
 669 03b8 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 273:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_GPT1);
 670              		.loc 1 273 0
 671 03bc 4FF00100 		mov	r0, #1
 672 03c0 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 274:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_GPT2);
 673              		.loc 1 274 0
 674 03c4 4FF00200 		mov	r0, #2
 675 03c8 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 275:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_GPT3);
 676              		.loc 1 275 0
 677 03cc 4FF00300 		mov	r0, #3
 678 03d0 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 276:bsp/boards/OpenMote-CC2538/board.c **** 
 277:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable SSI 0, 1 when running */
 278:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_SSI0);
 679              		.loc 1 278 0
 680 03d4 4FF48070 		mov	r0, #256
 681 03d8 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 279:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_SSI1);
 682              		.loc 1 279 0
 683 03dc 40F20110 		movw	r0, #257
 684 03e0 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 280:bsp/boards/OpenMote-CC2538/board.c **** 
 281:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable UART1 when running */
 282:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_UART1);
 685              		.loc 1 282 0
 686 03e4 40F20120 		movw	r0, #513
 687 03e8 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 283:bsp/boards/OpenMote-CC2538/board.c **** 
 284:bsp/boards/OpenMote-CC2538/board.c ****   /* Disable I2C, AES and PKA when running */
 285:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_I2C);
 688              		.loc 1 285 0
 689 03ec 4FF44070 		mov	r0, #768
 690 03f0 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 286:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_PKA);
 691              		.loc 1 286 0
 692 03f4 4FF48060 		mov	r0, #1024
 693 03f8 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 287:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_AES);
 694              		.loc 1 287 0
 695 03fc 40F20140 		movw	r0, #1025
 696 0400 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 288:bsp/boards/OpenMote-CC2538/board.c **** 
 289:bsp/boards/OpenMote-CC2538/board.c ****   /* Enable UART0 and RFC when running */
 290:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralEnable(SYS_CTRL_PERIPH_UART0);
 697              		.loc 1 290 0
 698 0404 4FF40070 		mov	r0, #512
 699 0408 FFF7FEFF 		bl	SysCtrlPeripheralEnable
 291:bsp/boards/OpenMote-CC2538/board.c ****   SysCtrlPeripheralEnable(SYS_CTRL_PERIPH_RFC);
 700              		.loc 1 291 0
 701 040c 4FF4A060 		mov	r0, #1280
 702 0410 FFF7FEFF 		bl	SysCtrlPeripheralEnable
 292:bsp/boards/OpenMote-CC2538/board.c **** }
 703              		.loc 1 292 0
 704 0414 80BD     		pop	{r7, pc}
 705              		.cfi_endproc
 706              	.LFE13:
 708 0416 00BF     		.align	2
 709              		.thumb
 710              		.thumb_func
 712              	SysCtrlWakeupSetting:
 713              	.LFB14:
 293:bsp/boards/OpenMote-CC2538/board.c **** 
 294:bsp/boards/OpenMote-CC2538/board.c **** 
 295:bsp/boards/OpenMote-CC2538/board.c **** void SysCtrlWakeupSetting(void)
 296:bsp/boards/OpenMote-CC2538/board.c **** {
 714              		.loc 1 296 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718 0418 80B5     		push	{r7, lr}
 719              	.LCFI29:
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 7, -8
 722              		.cfi_offset 14, -4
 723 041a 00AF     		add	r7, sp, #0
 724              	.LCFI30:
 725              		.cfi_def_cfa_register 7
 297:bsp/boards/OpenMote-CC2538/board.c ****   /* SM Timer can wake up the processor */
 298:bsp/boards/OpenMote-CC2538/board.c ****   GPIOIntWakeupEnable(GPIO_IWE_SM_TIMER);
 726              		.loc 1 298 0
 727 041c 4FF02000 		mov	r0, #32
 728 0420 FFF7FEFF 		bl	GPIOIntWakeupEnable
 299:bsp/boards/OpenMote-CC2538/board.c **** }
 729              		.loc 1 299 0
 730 0424 80BD     		pop	{r7, pc}
 731              		.cfi_endproc
 732              	.LFE14:
 734              	.Letext0:
 735              		.file 2 "/opt/gcc-arm-none-eabi-4_7-2013q3/bin/../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none
 736              		.file 3 "bsp/boards/OpenMote-CC2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:00000000 board.c
     /tmp/ccyyo8W7.s:19     .rodata:00000000 $d
     /tmp/ccyyo8W7.s:22     .rodata:00000000 rreg_uriquery
     /tmp/ccyyo8W7.s:27     .rodata:00000008 infoBoardname
     /tmp/ccyyo8W7.s:32     .rodata:00000010 infouCName
     /tmp/ccyyo8W7.s:37     .rodata:00000018 infoRadioName
     /tmp/ccyyo8W7.s:40     .text:00000000 $t
     /tmp/ccyyo8W7.s:45     .text:00000000 main
     /tmp/ccyyo8W7.s:74     .text:00000010 board_init
     /tmp/ccyyo8W7.s:377    .text:00000194 gpio_init
     /tmp/ccyyo8W7.s:444    .text:0000022c clock_init
     /tmp/ccyyo8W7.s:205    .text:000000c4 antenna_init
     /tmp/ccyyo8W7.s:251    .text:00000114 antenna_external
     /tmp/ccyyo8W7.s:122    .text:00000048 button_init
     /tmp/ccyyo8W7.s:173    .text:000000a8 GPIO_C_Isr_Handler
     /tmp/ccyyo8W7.s:287    .text:00000144 antenna_internal
     /tmp/ccyyo8W7.s:323    .text:00000174 board_sleep
     /tmp/ccyyo8W7.s:352    .text:00000188 board_reset
     /tmp/ccyyo8W7.s:535    .text:000002e0 SysCtrlDeepSleepSetting
     /tmp/ccyyo8W7.s:594    .text:00000348 SysCtrlSleepSetting
     /tmp/ccyyo8W7.s:653    .text:000003b0 SysCtrlRunSetting
     /tmp/ccyyo8W7.s:712    .text:00000418 SysCtrlWakeupSetting
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e96eee74da26538b12ac9582e3798382
                           .group:00000000 wm4.hw_ioc.h.39.7722cce4a3cc0e3380c3cd135aee3b21
                           .group:00000000 wm4.hw_memmap.h.39.19283c377d449c9bca5fdd8ccb62628c
                           .group:00000000 wm4.hw_ssi.h.39.9082f14e87d6077894a6e46eebe76d2f
                           .group:00000000 wm4.hw_sys_ctrl.h.39.50b4d7775c38e82076d0eb3bdc2daf82
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.21.2f0cbb5ab4c556c54c487f727dca8532
                           .group:00000000 wm4.toolchain_defs.h.2.59a5259f74cb714abc17e042354ff20f
                           .group:00000000 wm4.leds.h.2.746f2c4bd224f28046dfa242de7e3f3d
                           .group:00000000 wm4.ioc.h.41.7444fe7016a1d045dd9fea497d615b28
                           .group:00000000 wm4.gpio.h.41.604fa3d9f70fb140a75ada50bffeaeff
                           .group:00000000 wm4.sys_ctrl.h.41.c6bbd4dace326d685c1afa45bc1ba1e2
                           .group:00000000 wm4.flash.h.41.1b4c606036d8f71c3434e1ed199afc8d
                           .group:00000000 wm4.i2c.h.2.c40f7396ee1937cb7d6a6e6fcec1c344

UNDEFINED SYMBOLS
mote_main
leds_init
debugpins_init
bsp_timer_init
radiotimer_init
uart_init
radio_init
i2c_init
GPIOPinTypeGPIOInput
GPIOIntTypeSet
GPIOPortIntRegister
GPIOPinIntClear
GPIOPinIntEnable
IntMasterDisable
FlashMainPageErase
SysCtrlReset
GPIOPinTypeGPIOOutput
GPIOPinWrite
SysCtrlPowerModeSet
SysCtrlSleep
GPIODirModeSet
IOCPadConfigSet
SysCtrlClockSet
SysCtrlIOClockSet
IntMasterEnable
SysCtrlPeripheralDeepSleepDisable
SysCtrlPeripheralSleepDisable
SysCtrlPeripheralSleepEnable
SysCtrlPeripheralDisable
SysCtrlPeripheralEnable
GPIOIntWakeupEnable
