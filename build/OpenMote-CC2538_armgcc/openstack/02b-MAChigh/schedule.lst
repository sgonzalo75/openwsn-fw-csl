   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"schedule.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44              		.comm	schedule_vars,336,4
  45 002d 000000   		.text
  46              		.align	2
  47              		.global	schedule_init
  48              		.thumb
  49              		.thumb_func
  51              	schedule_init:
  52              	.LFB0:
  53              		.file 1 "openstack/02b-MAChigh/schedule.c"
   1:openstack/02b-MAChigh/schedule.c **** #include "opendefs.h"
   2:openstack/02b-MAChigh/schedule.c **** #include "schedule.h"
   3:openstack/02b-MAChigh/schedule.c **** #include "openserial.h"
   4:openstack/02b-MAChigh/schedule.c **** #include "openrandom.h"
   5:openstack/02b-MAChigh/schedule.c **** #include "packetfunctions.h"
   6:openstack/02b-MAChigh/schedule.c **** #include "sixtop.h"
   7:openstack/02b-MAChigh/schedule.c **** 
   8:openstack/02b-MAChigh/schedule.c **** //=========================== variables =======================================
   9:openstack/02b-MAChigh/schedule.c **** 
  10:openstack/02b-MAChigh/schedule.c **** schedule_vars_t schedule_vars;
  11:openstack/02b-MAChigh/schedule.c **** 
  12:openstack/02b-MAChigh/schedule.c **** //=========================== prototypes ======================================
  13:openstack/02b-MAChigh/schedule.c **** 
  14:openstack/02b-MAChigh/schedule.c **** void schedule_resetEntry(scheduleEntry_t* pScheduleEntry);
  15:openstack/02b-MAChigh/schedule.c **** 
  16:openstack/02b-MAChigh/schedule.c **** //=========================== public ==========================================
  17:openstack/02b-MAChigh/schedule.c **** 
  18:openstack/02b-MAChigh/schedule.c **** //=== admin
  19:openstack/02b-MAChigh/schedule.c **** 
  20:openstack/02b-MAChigh/schedule.c **** /**
  21:openstack/02b-MAChigh/schedule.c **** \brief Initialize this module.
  22:openstack/02b-MAChigh/schedule.c **** 
  23:openstack/02b-MAChigh/schedule.c **** \post Call this function before calling any other function in this module.
  24:openstack/02b-MAChigh/schedule.c **** */
  25:openstack/02b-MAChigh/schedule.c **** void schedule_init() {
  54              		.loc 1 25 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 24
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 88B0     		sub	sp, sp, #32
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 40
  66 0004 02AF     		add	r7, sp, #8
  67              	.LCFI2:
  68              		.cfi_def_cfa 7, 32
  26:openstack/02b-MAChigh/schedule.c ****    uint8_t         i;
  27:openstack/02b-MAChigh/schedule.c ****    slotOffset_t    running_slotOffset;
  28:openstack/02b-MAChigh/schedule.c ****    open_addr_t     temp_neighbor;
  29:openstack/02b-MAChigh/schedule.c **** 
  30:openstack/02b-MAChigh/schedule.c ****    // reset local variables
  31:openstack/02b-MAChigh/schedule.c ****    memset(&schedule_vars,0,sizeof(schedule_vars_t));
  69              		.loc 1 31 0
  70 0006 40F20000 		movw	r0, #:lower16:schedule_vars
  71 000a C0F20000 		movt	r0, #:upper16:schedule_vars
  72 000e 4FF00001 		mov	r1, #0
  73 0012 4FF4A872 		mov	r2, #336
  74 0016 FFF7FEFF 		bl	memset
  32:openstack/02b-MAChigh/schedule.c ****    for (i=0;i<MAXACTIVESLOTS;i++) {
  75              		.loc 1 32 0
  76 001a 4FF00003 		mov	r3, #0
  77 001e FB75     		strb	r3, [r7, #23]
  78 0020 12E0     		b	.L2
  79              	.L3:
  33:openstack/02b-MAChigh/schedule.c ****       schedule_resetEntry(&schedule_vars.scheduleBuf[i]);
  80              		.loc 1 33 0 discriminator 2
  81 0022 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
  82 0024 1346     		mov	r3, r2
  83 0026 4FEAC303 		lsl	r3, r3, #3
  84 002a 9B18     		adds	r3, r3, r2
  85 002c 4FEA8303 		lsl	r3, r3, #2
  86 0030 40F20002 		movw	r2, #:lower16:schedule_vars
  87 0034 C0F20002 		movt	r2, #:upper16:schedule_vars
  88 0038 9B18     		adds	r3, r3, r2
  89 003a 1846     		mov	r0, r3
  90 003c FFF7FEFF 		bl	schedule_resetEntry
  32:openstack/02b-MAChigh/schedule.c ****    for (i=0;i<MAXACTIVESLOTS;i++) {
  91              		.loc 1 32 0 discriminator 2
  92 0040 FB7D     		ldrb	r3, [r7, #23]
  93 0042 03F10103 		add	r3, r3, #1
  94 0046 FB75     		strb	r3, [r7, #23]
  95              	.L2:
  32:openstack/02b-MAChigh/schedule.c ****    for (i=0;i<MAXACTIVESLOTS;i++) {
  96              		.loc 1 32 0 is_stmt 0 discriminator 1
  97 0048 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  98 004a 082B     		cmp	r3, #8
  99 004c E9D9     		bls	.L3
  34:openstack/02b-MAChigh/schedule.c ****    }
  35:openstack/02b-MAChigh/schedule.c ****    schedule_vars.backoffExponent = MINBE-1;
 100              		.loc 1 35 0 is_stmt 1
 101 004e 40F20003 		movw	r3, #:lower16:schedule_vars
 102 0052 C0F20003 		movt	r3, #:upper16:schedule_vars
 103 0056 4FF00102 		mov	r2, #1
 104 005a 83F84A21 		strb	r2, [r3, #330]
  36:openstack/02b-MAChigh/schedule.c **** 
  37:openstack/02b-MAChigh/schedule.c ****    // set frame length
  38:openstack/02b-MAChigh/schedule.c ****    schedule_setFrameLength(SUPERFRAME_LENGTH);
 105              		.loc 1 38 0
 106 005e 4FF00B00 		mov	r0, #11
 107 0062 FFF7FEFF 		bl	schedule_setFrameLength
  39:openstack/02b-MAChigh/schedule.c ****    
  40:openstack/02b-MAChigh/schedule.c ****    // start at slot 0
  41:openstack/02b-MAChigh/schedule.c ****    running_slotOffset = 0;
 108              		.loc 1 41 0
 109 0066 4FF00003 		mov	r3, #0
 110 006a BB82     		strh	r3, [r7, #20]	@ movhi
  42:openstack/02b-MAChigh/schedule.c ****    
  43:openstack/02b-MAChigh/schedule.c ****    // CSL TESTS - Only first cell of nine cells in slot is CELLTYPE_TX
  44:openstack/02b-MAChigh/schedule.c ****    memset(&temp_neighbor,0,sizeof(temp_neighbor));
 111              		.loc 1 44 0
 112 006c 3B46     		mov	r3, r7
 113 006e 1846     		mov	r0, r3
 114 0070 4FF00001 		mov	r1, #0
 115 0074 4FF01102 		mov	r2, #17
 116 0078 FFF7FEFF 		bl	memset
  45:openstack/02b-MAChigh/schedule.c **** 
  46:openstack/02b-MAChigh/schedule.c ****    // Simulate a ficticious address for CSL testing.
  47:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.addr_64b[0]=0x00;
 117              		.loc 1 47 0
 118 007c 4FF00003 		mov	r3, #0
 119 0080 7B70     		strb	r3, [r7, #1]
  48:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.addr_64b[1]=0x11;
 120              		.loc 1 48 0
 121 0082 4FF01103 		mov	r3, #17
 122 0086 BB70     		strb	r3, [r7, #2]
  49:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.addr_64b[2]=0x22;
 123              		.loc 1 49 0
 124 0088 4FF02203 		mov	r3, #34
 125 008c FB70     		strb	r3, [r7, #3]
  50:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.addr_64b[3]=0x33;
 126              		.loc 1 50 0
 127 008e 4FF03303 		mov	r3, #51
 128 0092 3B71     		strb	r3, [r7, #4]
  51:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.addr_64b[4]=0x44;
 129              		.loc 1 51 0
 130 0094 4FF04403 		mov	r3, #68
 131 0098 7B71     		strb	r3, [r7, #5]
  52:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.addr_64b[5]=0x55;
 132              		.loc 1 52 0
 133 009a 4FF05503 		mov	r3, #85
 134 009e BB71     		strb	r3, [r7, #6]
  53:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.addr_64b[6]=0x66;
 135              		.loc 1 53 0
 136 00a0 4FF06603 		mov	r3, #102
 137 00a4 FB71     		strb	r3, [r7, #7]
  54:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.addr_64b[7]=0x77;
 138              		.loc 1 54 0
 139 00a6 4FF07703 		mov	r3, #119
 140 00aa 3B72     		strb	r3, [r7, #8]
  55:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.type=ADDR_64B;
 141              		.loc 1 55 0
 142 00ac 4FF00203 		mov	r3, #2
 143 00b0 3B70     		strb	r3, [r7, #0]
  56:openstack/02b-MAChigh/schedule.c **** 
  57:openstack/02b-MAChigh/schedule.c ****    schedule_addActiveSlot(
 144              		.loc 1 57 0
 145 00b2 BB8A     		ldrh	r3, [r7, #20]
 146 00b4 3A46     		mov	r2, r7
 147 00b6 0092     		str	r2, [sp, #0]
 148 00b8 1846     		mov	r0, r3
 149 00ba 4FF00201 		mov	r1, #2
 150 00be 4FF00002 		mov	r2, #0
 151 00c2 4FF00003 		mov	r3, #0
 152 00c6 FFF7FEFF 		bl	schedule_addActiveSlot
  58:openstack/02b-MAChigh/schedule.c ****          running_slotOffset,      // slot offset
  59:openstack/02b-MAChigh/schedule.c ****          CELLTYPE_TX,             // type of slot
  60:openstack/02b-MAChigh/schedule.c ****          FALSE,                   // shared?
  61:openstack/02b-MAChigh/schedule.c ****          0,                       // channel offset
  62:openstack/02b-MAChigh/schedule.c ****          &temp_neighbor           // neighbor
  63:openstack/02b-MAChigh/schedule.c ****    );
  64:openstack/02b-MAChigh/schedule.c ****    running_slotOffset++;
 153              		.loc 1 64 0
 154 00ca BB8A     		ldrh	r3, [r7, #20]	@ movhi
 155 00cc 03F10103 		add	r3, r3, #1
 156 00d0 BB82     		strh	r3, [r7, #20]	@ movhi
  65:openstack/02b-MAChigh/schedule.c **** 
  66:openstack/02b-MAChigh/schedule.c ****    // el resto de tipo RX
  67:openstack/02b-MAChigh/schedule.c ****    memset(&temp_neighbor,0,sizeof(temp_neighbor));
 157              		.loc 1 67 0
 158 00d2 3B46     		mov	r3, r7
 159 00d4 1846     		mov	r0, r3
 160 00d6 4FF00001 		mov	r1, #0
 161 00da 4FF01102 		mov	r2, #17
 162 00de FFF7FEFF 		bl	memset
  68:openstack/02b-MAChigh/schedule.c ****    for (i=0;i<8;i++) {
 163              		.loc 1 68 0
 164 00e2 4FF00003 		mov	r3, #0
 165 00e6 FB75     		strb	r3, [r7, #23]
 166 00e8 13E0     		b	.L4
 167              	.L5:
  69:openstack/02b-MAChigh/schedule.c ****       schedule_addActiveSlot(
 168              		.loc 1 69 0 discriminator 2
 169 00ea BB8A     		ldrh	r3, [r7, #20]
 170 00ec 3A46     		mov	r2, r7
 171 00ee 0092     		str	r2, [sp, #0]
 172 00f0 1846     		mov	r0, r3
 173 00f2 4FF00301 		mov	r1, #3
 174 00f6 4FF00002 		mov	r2, #0
 175 00fa 4FF00003 		mov	r3, #0
 176 00fe FFF7FEFF 		bl	schedule_addActiveSlot
  70:openstack/02b-MAChigh/schedule.c ****          running_slotOffset,      // slot offset
  71:openstack/02b-MAChigh/schedule.c ****          CELLTYPE_RX,             // type of slot
  72:openstack/02b-MAChigh/schedule.c ****          FALSE,                   // shared?
  73:openstack/02b-MAChigh/schedule.c ****          0,                       // channel offset
  74:openstack/02b-MAChigh/schedule.c ****          &temp_neighbor           // neighbor
  75:openstack/02b-MAChigh/schedule.c ****       );
  76:openstack/02b-MAChigh/schedule.c ****       running_slotOffset++;
 177              		.loc 1 76 0 discriminator 2
 178 0102 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 179 0104 03F10103 		add	r3, r3, #1
 180 0108 BB82     		strh	r3, [r7, #20]	@ movhi
  68:openstack/02b-MAChigh/schedule.c ****    for (i=0;i<8;i++) {
 181              		.loc 1 68 0 discriminator 2
 182 010a FB7D     		ldrb	r3, [r7, #23]
 183 010c 03F10103 		add	r3, r3, #1
 184 0110 FB75     		strb	r3, [r7, #23]
 185              	.L4:
  68:openstack/02b-MAChigh/schedule.c ****    for (i=0;i<8;i++) {
 186              		.loc 1 68 0 is_stmt 0 discriminator 1
 187 0112 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 188 0114 072B     		cmp	r3, #7
 189 0116 E8D9     		bls	.L5
  77:openstack/02b-MAChigh/schedule.c ****    }
  78:openstack/02b-MAChigh/schedule.c **** 
  79:openstack/02b-MAChigh/schedule.c ****    // advertisement slot(s)
  80:openstack/02b-MAChigh/schedule.c ****    /*memset(&temp_neighbor,0,sizeof(temp_neighbor));
  81:openstack/02b-MAChigh/schedule.c ****    for (i=0;i<NUMADVSLOTS;i++) {
  82:openstack/02b-MAChigh/schedule.c ****       schedule_addActiveSlot(
  83:openstack/02b-MAChigh/schedule.c ****          running_slotOffset,      // slot offset
  84:openstack/02b-MAChigh/schedule.c ****          CELLTYPE_ADV,            // type of slot
  85:openstack/02b-MAChigh/schedule.c ****          FALSE,                   // shared?
  86:openstack/02b-MAChigh/schedule.c ****          0,                       // channel offset
  87:openstack/02b-MAChigh/schedule.c ****          &temp_neighbor           // neighbor
  88:openstack/02b-MAChigh/schedule.c ****       );
  89:openstack/02b-MAChigh/schedule.c ****       running_slotOffset++;
  90:openstack/02b-MAChigh/schedule.c ****    } 
  91:openstack/02b-MAChigh/schedule.c ****    */
  92:openstack/02b-MAChigh/schedule.c ****    
  93:openstack/02b-MAChigh/schedule.c ****    // shared TXRX anycast slot(s)
  94:openstack/02b-MAChigh/schedule.c ****    /*memset(&temp_neighbor,0,sizeof(temp_neighbor));
  95:openstack/02b-MAChigh/schedule.c ****    temp_neighbor.type             = ADDR_ANYCAST;
  96:openstack/02b-MAChigh/schedule.c ****    for (i=0;i<NUMSHAREDTXRX;i++) {
  97:openstack/02b-MAChigh/schedule.c ****       schedule_addActiveSlot(
  98:openstack/02b-MAChigh/schedule.c ****          running_slotOffset,      // slot offset
  99:openstack/02b-MAChigh/schedule.c ****          CELLTYPE_TXRX,           // type of slot
 100:openstack/02b-MAChigh/schedule.c ****          TRUE,                    // shared?
 101:openstack/02b-MAChigh/schedule.c ****          0,                       // channel offset
 102:openstack/02b-MAChigh/schedule.c ****          &temp_neighbor           // neighbor
 103:openstack/02b-MAChigh/schedule.c ****       );
 104:openstack/02b-MAChigh/schedule.c ****       running_slotOffset++;
 105:openstack/02b-MAChigh/schedule.c ****    }
 106:openstack/02b-MAChigh/schedule.c ****    */
 107:openstack/02b-MAChigh/schedule.c ****    
 108:openstack/02b-MAChigh/schedule.c ****    // serial RX slot(s)
 109:openstack/02b-MAChigh/schedule.c ****    /*memset(&temp_neighbor,0,sizeof(temp_neighbor));
 110:openstack/02b-MAChigh/schedule.c ****    schedule_addActiveSlot(
 111:openstack/02b-MAChigh/schedule.c ****       running_slotOffset,         // slot offset
 112:openstack/02b-MAChigh/schedule.c ****       CELLTYPE_SERIALRX,          // type of slot
 113:openstack/02b-MAChigh/schedule.c ****       FALSE,                      // shared?
 114:openstack/02b-MAChigh/schedule.c ****       0,                          // channel offset
 115:openstack/02b-MAChigh/schedule.c ****       &temp_neighbor              // neighbor
 116:openstack/02b-MAChigh/schedule.c ****    );
 117:openstack/02b-MAChigh/schedule.c ****    running_slotOffset++;
 118:openstack/02b-MAChigh/schedule.c ****    */
 119:openstack/02b-MAChigh/schedule.c **** }
 190              		.loc 1 119 0 is_stmt 1
 191 0118 07F11807 		add	r7, r7, #24
 192 011c BD46     		mov	sp, r7
 193 011e 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE0:
 197              		.align	2
 198              		.global	debugPrint_schedule
 199              		.thumb
 200              		.thumb_func
 202              	debugPrint_schedule:
 203              	.LFB1:
 120:openstack/02b-MAChigh/schedule.c **** 
 121:openstack/02b-MAChigh/schedule.c **** /**
 122:openstack/02b-MAChigh/schedule.c **** \brief Trigger this module to print status information, over serial.
 123:openstack/02b-MAChigh/schedule.c **** 
 124:openstack/02b-MAChigh/schedule.c **** debugPrint_* functions are used by the openserial module to continuously print
 125:openstack/02b-MAChigh/schedule.c **** status information about several modules in the OpenWSN stack.
 126:openstack/02b-MAChigh/schedule.c **** 
 127:openstack/02b-MAChigh/schedule.c **** \returns TRUE if this function printed something, FALSE otherwise.
 128:openstack/02b-MAChigh/schedule.c **** */
 129:openstack/02b-MAChigh/schedule.c **** bool debugPrint_schedule() {
 204              		.loc 1 129 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 32
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0120 B0B5     		push	{r4, r5, r7, lr}
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 16
 211              		.cfi_offset 4, -16
 212              		.cfi_offset 5, -12
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0122 88B0     		sub	sp, sp, #32
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 48
 218 0124 00AF     		add	r7, sp, #0
 219              	.LCFI5:
 220              		.cfi_def_cfa_register 7
 130:openstack/02b-MAChigh/schedule.c ****    debugScheduleEntry_t temp;
 131:openstack/02b-MAChigh/schedule.c ****    
 132:openstack/02b-MAChigh/schedule.c ****    // increment the row just printed
 133:openstack/02b-MAChigh/schedule.c ****    schedule_vars.debugPrintRow         = (schedule_vars.debugPrintRow+1)%MAXACTIVESLOTS;
 221              		.loc 1 133 0
 222 0126 40F20003 		movw	r3, #:lower16:schedule_vars
 223 012a C0F20003 		movt	r3, #:upper16:schedule_vars
 224 012e 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 225 0132 03F10101 		add	r1, r3, #1
 226 0136 48F63963 		movw	r3, #36409
 227 013a C3F6E303 		movt	r3, 14563
 228 013e 83FB0123 		smull	r2, r3, r3, r1
 229 0142 4FEA6302 		asr	r2, r3, #1
 230 0146 4FEAE173 		asr	r3, r1, #31
 231 014a D21A     		subs	r2, r2, r3
 232 014c 1346     		mov	r3, r2
 233 014e 4FEAC303 		lsl	r3, r3, #3
 234 0152 9B18     		adds	r3, r3, r2
 235 0154 CA1A     		subs	r2, r1, r3
 236 0156 D2B2     		uxtb	r2, r2
 237 0158 40F20003 		movw	r3, #:lower16:schedule_vars
 238 015c C0F20003 		movt	r3, #:upper16:schedule_vars
 239 0160 83F84C21 		strb	r2, [r3, #332]
 134:openstack/02b-MAChigh/schedule.c ****    
 135:openstack/02b-MAChigh/schedule.c ****    // gather status data
 136:openstack/02b-MAChigh/schedule.c ****    temp.row                            = schedule_vars.debugPrintRow;
 240              		.loc 1 136 0
 241 0164 40F20003 		movw	r3, #:lower16:schedule_vars
 242 0168 C0F20003 		movt	r3, #:upper16:schedule_vars
 243 016c 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 244 0170 3B70     		strb	r3, [r7, #0]
 137:openstack/02b-MAChigh/schedule.c ****    temp.slotOffset                     = \
 138:openstack/02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].slotOffset;
 245              		.loc 1 138 0
 246 0172 40F20003 		movw	r3, #:lower16:schedule_vars
 247 0176 C0F20003 		movt	r3, #:upper16:schedule_vars
 248 017a 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 249 017e 1946     		mov	r1, r3
 250 0180 40F20002 		movw	r2, #:lower16:schedule_vars
 251 0184 C0F20002 		movt	r2, #:upper16:schedule_vars
 252 0188 0B46     		mov	r3, r1
 253 018a 4FEAC303 		lsl	r3, r3, #3
 254 018e 5B18     		adds	r3, r3, r1
 255 0190 4FEA8303 		lsl	r3, r3, #2
 256 0194 D318     		adds	r3, r2, r3
 257 0196 1B88     		ldrh	r3, [r3, #0]
 137:openstack/02b-MAChigh/schedule.c ****    temp.slotOffset                     = \
 258              		.loc 1 137 0
 259 0198 A7F80130 		strh	r3, [r7, #1]	@ unaligned
 139:openstack/02b-MAChigh/schedule.c ****    temp.type                           = \
 140:openstack/02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].type;
 260              		.loc 1 140 0
 261 019c 40F20003 		movw	r3, #:lower16:schedule_vars
 262 01a0 C0F20003 		movt	r3, #:upper16:schedule_vars
 263 01a4 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 139:openstack/02b-MAChigh/schedule.c ****    temp.type                           = \
 264              		.loc 1 139 0
 265 01a8 1946     		mov	r1, r3
 266              		.loc 1 140 0
 267 01aa 40F20002 		movw	r2, #:lower16:schedule_vars
 268 01ae C0F20002 		movt	r2, #:upper16:schedule_vars
 269 01b2 0B46     		mov	r3, r1
 270 01b4 4FEAC303 		lsl	r3, r3, #3
 271 01b8 5B18     		adds	r3, r3, r1
 272 01ba 4FEA8303 		lsl	r3, r3, #2
 273 01be D318     		adds	r3, r2, r3
 274 01c0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 139:openstack/02b-MAChigh/schedule.c ****    temp.type                           = \
 275              		.loc 1 139 0
 276 01c2 FB70     		strb	r3, [r7, #3]
 141:openstack/02b-MAChigh/schedule.c ****    temp.shared                         = \
 142:openstack/02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].shared;
 277              		.loc 1 142 0
 278 01c4 40F20003 		movw	r3, #:lower16:schedule_vars
 279 01c8 C0F20003 		movt	r3, #:upper16:schedule_vars
 280 01cc 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 281 01d0 1946     		mov	r1, r3
 282 01d2 40F20002 		movw	r2, #:lower16:schedule_vars
 283 01d6 C0F20002 		movt	r2, #:upper16:schedule_vars
 284 01da 0B46     		mov	r3, r1
 285 01dc 4FEAC303 		lsl	r3, r3, #3
 286 01e0 5B18     		adds	r3, r3, r1
 287 01e2 4FEA8303 		lsl	r3, r3, #2
 288 01e6 D318     		adds	r3, r2, r3
 289 01e8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 141:openstack/02b-MAChigh/schedule.c ****    temp.shared                         = \
 290              		.loc 1 141 0
 291 01ea 3B71     		strb	r3, [r7, #4]
 143:openstack/02b-MAChigh/schedule.c ****    temp.channelOffset                  = \
 144:openstack/02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].channelOffset;
 292              		.loc 1 144 0
 293 01ec 40F20003 		movw	r3, #:lower16:schedule_vars
 294 01f0 C0F20003 		movt	r3, #:upper16:schedule_vars
 295 01f4 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 296 01f8 1946     		mov	r1, r3
 297 01fa 40F20002 		movw	r2, #:lower16:schedule_vars
 298 01fe C0F20002 		movt	r2, #:upper16:schedule_vars
 299 0202 0B46     		mov	r3, r1
 300 0204 4FEAC303 		lsl	r3, r3, #3
 301 0208 5B18     		adds	r3, r3, r1
 302 020a 4FEA8303 		lsl	r3, r3, #2
 303 020e D318     		adds	r3, r2, r3
 304 0210 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 143:openstack/02b-MAChigh/schedule.c ****    temp.channelOffset                  = \
 305              		.loc 1 143 0
 306 0212 7B71     		strb	r3, [r7, #5]
 145:openstack/02b-MAChigh/schedule.c ****    memcpy(
 146:openstack/02b-MAChigh/schedule.c ****       &temp.neighbor,
 147:openstack/02b-MAChigh/schedule.c ****       &schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].neighbor,
 307              		.loc 1 147 0
 308 0214 40F20003 		movw	r3, #:lower16:schedule_vars
 309 0218 C0F20003 		movt	r3, #:upper16:schedule_vars
 310 021c 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 311 0220 1A46     		mov	r2, r3
 312 0222 1346     		mov	r3, r2
 313 0224 4FEAC303 		lsl	r3, r3, #3
 314 0228 9B18     		adds	r3, r3, r2
 315 022a 4FEA8303 		lsl	r3, r3, #2
 316 022e 40F20002 		movw	r2, #:lower16:schedule_vars
 317 0232 C0F20002 		movt	r2, #:upper16:schedule_vars
 318 0236 9B18     		adds	r3, r3, r2
 319 0238 03F10502 		add	r2, r3, #5
 145:openstack/02b-MAChigh/schedule.c ****    memcpy(
 320              		.loc 1 145 0
 321 023c 07F10603 		add	r3, r7, #6
 322 0240 1568     		ldr	r5, [r2, #0]	@ unaligned
 323 0242 5468     		ldr	r4, [r2, #4]	@ unaligned
 324 0244 9068     		ldr	r0, [r2, #8]	@ unaligned
 325 0246 D168     		ldr	r1, [r2, #12]	@ unaligned
 326 0248 1D60     		str	r5, [r3, #0]	@ unaligned
 327 024a 5C60     		str	r4, [r3, #4]	@ unaligned
 328 024c 9860     		str	r0, [r3, #8]	@ unaligned
 329 024e D960     		str	r1, [r3, #12]	@ unaligned
 330 0250 127C     		ldrb	r2, [r2, #16]
 331 0252 1A74     		strb	r2, [r3, #16]
 148:openstack/02b-MAChigh/schedule.c ****       sizeof(open_addr_t)
 149:openstack/02b-MAChigh/schedule.c ****    );
 150:openstack/02b-MAChigh/schedule.c ****    temp.numRx                          = \
 151:openstack/02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].numRx;
 332              		.loc 1 151 0
 333 0254 40F20003 		movw	r3, #:lower16:schedule_vars
 334 0258 C0F20003 		movt	r3, #:upper16:schedule_vars
 335 025c 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 336 0260 1946     		mov	r1, r3
 337 0262 40F20002 		movw	r2, #:lower16:schedule_vars
 338 0266 C0F20002 		movt	r2, #:upper16:schedule_vars
 339 026a 0B46     		mov	r3, r1
 340 026c 4FEAC303 		lsl	r3, r3, #3
 341 0270 5B18     		adds	r3, r3, r1
 342 0272 4FEA8303 		lsl	r3, r3, #2
 343 0276 D318     		adds	r3, r2, r3
 344 0278 03F11003 		add	r3, r3, #16
 345 027c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 150:openstack/02b-MAChigh/schedule.c ****    temp.numRx                          = \
 346              		.loc 1 150 0
 347 027e FB75     		strb	r3, [r7, #23]
 152:openstack/02b-MAChigh/schedule.c ****    temp.numTx                          = \
 153:openstack/02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].numTx;
 348              		.loc 1 153 0
 349 0280 40F20003 		movw	r3, #:lower16:schedule_vars
 350 0284 C0F20003 		movt	r3, #:upper16:schedule_vars
 351 0288 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 352 028c 1946     		mov	r1, r3
 353 028e 40F20002 		movw	r2, #:lower16:schedule_vars
 354 0292 C0F20002 		movt	r2, #:upper16:schedule_vars
 355 0296 0B46     		mov	r3, r1
 356 0298 4FEAC303 		lsl	r3, r3, #3
 357 029c 5B18     		adds	r3, r3, r1
 358 029e 4FEA8303 		lsl	r3, r3, #2
 359 02a2 D318     		adds	r3, r2, r3
 360 02a4 03F11003 		add	r3, r3, #16
 361 02a8 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 152:openstack/02b-MAChigh/schedule.c ****    temp.numTx                          = \
 362              		.loc 1 152 0
 363 02aa 3B76     		strb	r3, [r7, #24]
 154:openstack/02b-MAChigh/schedule.c ****    temp.numTxACK                       = \
 155:openstack/02b-MAChigh/schedule.c ****       schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].numTxACK;
 364              		.loc 1 155 0
 365 02ac 40F20003 		movw	r3, #:lower16:schedule_vars
 366 02b0 C0F20003 		movt	r3, #:upper16:schedule_vars
 367 02b4 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 368 02b8 1946     		mov	r1, r3
 369 02ba 40F20002 		movw	r2, #:lower16:schedule_vars
 370 02be C0F20002 		movt	r2, #:upper16:schedule_vars
 371 02c2 0B46     		mov	r3, r1
 372 02c4 4FEAC303 		lsl	r3, r3, #3
 373 02c8 5B18     		adds	r3, r3, r1
 374 02ca 4FEA8303 		lsl	r3, r3, #2
 375 02ce D318     		adds	r3, r2, r3
 376 02d0 03F11803 		add	r3, r3, #24
 377 02d4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 154:openstack/02b-MAChigh/schedule.c ****    temp.numTxACK                       = \
 378              		.loc 1 154 0
 379 02d6 7B76     		strb	r3, [r7, #25]
 156:openstack/02b-MAChigh/schedule.c ****    memcpy(
 157:openstack/02b-MAChigh/schedule.c ****       &temp.lastUsedAsn,
 158:openstack/02b-MAChigh/schedule.c ****       &schedule_vars.scheduleBuf[schedule_vars.debugPrintRow].lastUsedAsn,
 380              		.loc 1 158 0
 381 02d8 40F20003 		movw	r3, #:lower16:schedule_vars
 382 02dc C0F20003 		movt	r3, #:upper16:schedule_vars
 383 02e0 93F84C31 		ldrb	r3, [r3, #332]	@ zero_extendqisi2
 384 02e4 1A46     		mov	r2, r3
 385 02e6 1346     		mov	r3, r2
 386 02e8 4FEAC303 		lsl	r3, r3, #3
 387 02ec 9B18     		adds	r3, r3, r2
 388 02ee 4FEA8303 		lsl	r3, r3, #2
 389 02f2 03F11802 		add	r2, r3, #24
 390 02f6 40F20003 		movw	r3, #:lower16:schedule_vars
 391 02fa C0F20003 		movt	r3, #:upper16:schedule_vars
 392 02fe D318     		adds	r3, r2, r3
 393 0300 03F10102 		add	r2, r3, #1
 156:openstack/02b-MAChigh/schedule.c ****    memcpy(
 394              		.loc 1 156 0
 395 0304 07F11A03 		add	r3, r7, #26
 396 0308 1168     		ldr	r1, [r2, #0]	@ unaligned
 397 030a 1960     		str	r1, [r3, #0]	@ unaligned
 398 030c 1279     		ldrb	r2, [r2, #4]
 399 030e 1A71     		strb	r2, [r3, #4]
 159:openstack/02b-MAChigh/schedule.c ****       sizeof(asn_t)
 160:openstack/02b-MAChigh/schedule.c ****    );
 161:openstack/02b-MAChigh/schedule.c ****    
 162:openstack/02b-MAChigh/schedule.c ****    // send status data over serial port
 163:openstack/02b-MAChigh/schedule.c ****    openserial_printStatus(
 164:openstack/02b-MAChigh/schedule.c ****       STATUS_SCHEDULE,
 165:openstack/02b-MAChigh/schedule.c ****       (uint8_t*)&temp,
 400              		.loc 1 165 0
 401 0310 3B46     		mov	r3, r7
 163:openstack/02b-MAChigh/schedule.c ****    openserial_printStatus(
 402              		.loc 1 163 0
 403 0312 4FF00600 		mov	r0, #6
 404 0316 1946     		mov	r1, r3
 405 0318 4FF01F02 		mov	r2, #31
 406 031c FFF7FEFF 		bl	openserial_printStatus
 166:openstack/02b-MAChigh/schedule.c ****       sizeof(debugScheduleEntry_t)
 167:openstack/02b-MAChigh/schedule.c ****    );
 168:openstack/02b-MAChigh/schedule.c ****    
 169:openstack/02b-MAChigh/schedule.c ****    return TRUE;
 407              		.loc 1 169 0
 408 0320 4FF00103 		mov	r3, #1
 170:openstack/02b-MAChigh/schedule.c **** }
 409              		.loc 1 170 0
 410 0324 1846     		mov	r0, r3
 411 0326 07F12007 		add	r7, r7, #32
 412 032a BD46     		mov	sp, r7
 413 032c B0BD     		pop	{r4, r5, r7, pc}
 414              		.cfi_endproc
 415              	.LFE1:
 417 032e 00BF     		.align	2
 418              		.global	debugPrint_backoff
 419              		.thumb
 420              		.thumb_func
 422              	debugPrint_backoff:
 423              	.LFB2:
 171:openstack/02b-MAChigh/schedule.c **** 
 172:openstack/02b-MAChigh/schedule.c **** /**
 173:openstack/02b-MAChigh/schedule.c **** \brief Trigger this module to print status information, over serial.
 174:openstack/02b-MAChigh/schedule.c **** 
 175:openstack/02b-MAChigh/schedule.c **** debugPrint_* functions are used by the openserial module to continuously print
 176:openstack/02b-MAChigh/schedule.c **** status information about several modules in the OpenWSN stack.
 177:openstack/02b-MAChigh/schedule.c **** 
 178:openstack/02b-MAChigh/schedule.c **** \returns TRUE if this function printed something, FALSE otherwise.
 179:openstack/02b-MAChigh/schedule.c **** */
 180:openstack/02b-MAChigh/schedule.c **** bool debugPrint_backoff() {
 424              		.loc 1 180 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0330 80B5     		push	{r7, lr}
 429              	.LCFI6:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0332 82B0     		sub	sp, sp, #8
 434              	.LCFI7:
 435              		.cfi_def_cfa_offset 16
 436 0334 00AF     		add	r7, sp, #0
 437              	.LCFI8:
 438              		.cfi_def_cfa_register 7
 181:openstack/02b-MAChigh/schedule.c ****    uint8_t temp[2];
 182:openstack/02b-MAChigh/schedule.c ****    
 183:openstack/02b-MAChigh/schedule.c ****    // gather status data
 184:openstack/02b-MAChigh/schedule.c ****    temp[0] = schedule_vars.backoffExponent;
 439              		.loc 1 184 0
 440 0336 40F20003 		movw	r3, #:lower16:schedule_vars
 441 033a C0F20003 		movt	r3, #:upper16:schedule_vars
 442 033e 93F84A31 		ldrb	r3, [r3, #330]	@ zero_extendqisi2
 443 0342 3B71     		strb	r3, [r7, #4]
 185:openstack/02b-MAChigh/schedule.c ****    temp[1] = schedule_vars.backoff;
 444              		.loc 1 185 0
 445 0344 40F20003 		movw	r3, #:lower16:schedule_vars
 446 0348 C0F20003 		movt	r3, #:upper16:schedule_vars
 447 034c 93F84B31 		ldrb	r3, [r3, #331]	@ zero_extendqisi2
 448 0350 7B71     		strb	r3, [r7, #5]
 186:openstack/02b-MAChigh/schedule.c ****    
 187:openstack/02b-MAChigh/schedule.c ****    // send status data over serial port
 188:openstack/02b-MAChigh/schedule.c ****    openserial_printStatus(
 189:openstack/02b-MAChigh/schedule.c ****       STATUS_BACKOFF,
 190:openstack/02b-MAChigh/schedule.c ****       (uint8_t*)&temp,
 449              		.loc 1 190 0
 450 0352 07F10403 		add	r3, r7, #4
 188:openstack/02b-MAChigh/schedule.c ****    openserial_printStatus(
 451              		.loc 1 188 0
 452 0356 4FF00700 		mov	r0, #7
 453 035a 1946     		mov	r1, r3
 454 035c 4FF00202 		mov	r2, #2
 455 0360 FFF7FEFF 		bl	openserial_printStatus
 191:openstack/02b-MAChigh/schedule.c ****       sizeof(temp)
 192:openstack/02b-MAChigh/schedule.c ****    );
 193:openstack/02b-MAChigh/schedule.c ****    
 194:openstack/02b-MAChigh/schedule.c ****    return TRUE;
 456              		.loc 1 194 0
 457 0364 4FF00103 		mov	r3, #1
 195:openstack/02b-MAChigh/schedule.c **** }
 458              		.loc 1 195 0
 459 0368 1846     		mov	r0, r3
 460 036a 07F10807 		add	r7, r7, #8
 461 036e BD46     		mov	sp, r7
 462 0370 80BD     		pop	{r7, pc}
 463              		.cfi_endproc
 464              	.LFE2:
 466 0372 00BF     		.align	2
 467              		.global	schedule_setFrameLength
 468              		.thumb
 469              		.thumb_func
 471              	schedule_setFrameLength:
 472              	.LFB3:
 196:openstack/02b-MAChigh/schedule.c **** 
 197:openstack/02b-MAChigh/schedule.c **** //=== from 6top (writing the schedule)
 198:openstack/02b-MAChigh/schedule.c **** 
 199:openstack/02b-MAChigh/schedule.c **** /**
 200:openstack/02b-MAChigh/schedule.c **** \brief Set frame length.
 201:openstack/02b-MAChigh/schedule.c **** 
 202:openstack/02b-MAChigh/schedule.c **** \param newFrameLength The new frame length.
 203:openstack/02b-MAChigh/schedule.c **** */
 204:openstack/02b-MAChigh/schedule.c **** void schedule_setFrameLength(frameLength_t newFrameLength) {
 473              		.loc 1 204 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477 0374 80B5     		push	{r7, lr}
 478              	.LCFI9:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0376 82B0     		sub	sp, sp, #8
 483              	.LCFI10:
 484              		.cfi_def_cfa_offset 16
 485 0378 00AF     		add	r7, sp, #0
 486              	.LCFI11:
 487              		.cfi_def_cfa_register 7
 488 037a 0346     		mov	r3, r0
 489 037c FB80     		strh	r3, [r7, #6]	@ movhi
 205:openstack/02b-MAChigh/schedule.c ****    
 206:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 207:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 490              		.loc 1 207 0
 491 037e FFF7FEFF 		bl	IntMasterDisable
 208:openstack/02b-MAChigh/schedule.c ****    
 209:openstack/02b-MAChigh/schedule.c ****    schedule_vars.frameLength = newFrameLength;
 492              		.loc 1 209 0
 493 0382 40F20003 		movw	r3, #:lower16:schedule_vars
 494 0386 C0F20003 		movt	r3, #:upper16:schedule_vars
 495 038a FA88     		ldrh	r2, [r7, #6]	@ movhi
 496 038c A3F84821 		strh	r2, [r3, #328]	@ movhi
 210:openstack/02b-MAChigh/schedule.c ****    
 211:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 497              		.loc 1 211 0
 498 0390 FFF7FEFF 		bl	IntMasterEnable
 212:openstack/02b-MAChigh/schedule.c **** }
 499              		.loc 1 212 0
 500 0394 07F10807 		add	r7, r7, #8
 501 0398 BD46     		mov	sp, r7
 502 039a 80BD     		pop	{r7, pc}
 503              		.cfi_endproc
 504              	.LFE3:
 506              		.align	2
 507              		.global	schedule_getSlotInfo
 508              		.thumb
 509              		.thumb_func
 511              	schedule_getSlotInfo:
 512              	.LFB4:
 213:openstack/02b-MAChigh/schedule.c **** 
 214:openstack/02b-MAChigh/schedule.c **** /**
 215:openstack/02b-MAChigh/schedule.c **** \brief Get the information of a specific slot.
 216:openstack/02b-MAChigh/schedule.c **** 
 217:openstack/02b-MAChigh/schedule.c **** \param slotOffset
 218:openstack/02b-MAChigh/schedule.c **** \param neighbor
 219:openstack/02b-MAChigh/schedule.c **** \param info
 220:openstack/02b-MAChigh/schedule.c **** */
 221:openstack/02b-MAChigh/schedule.c **** void  schedule_getSlotInfo(
 222:openstack/02b-MAChigh/schedule.c ****    slotOffset_t         slotOffset,
 223:openstack/02b-MAChigh/schedule.c ****    open_addr_t*         neighbor,
 224:openstack/02b-MAChigh/schedule.c ****    slotinfo_element_t*  info
 225:openstack/02b-MAChigh/schedule.c **** ){
 513              		.loc 1 225 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 24
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 039c 80B5     		push	{r7, lr}
 518              	.LCFI12:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 039e 86B0     		sub	sp, sp, #24
 523              	.LCFI13:
 524              		.cfi_def_cfa_offset 32
 525 03a0 00AF     		add	r7, sp, #0
 526              	.LCFI14:
 527              		.cfi_def_cfa_register 7
 528 03a2 0346     		mov	r3, r0
 529 03a4 B960     		str	r1, [r7, #8]
 530 03a6 7A60     		str	r2, [r7, #4]
 531 03a8 FB81     		strh	r3, [r7, #14]	@ movhi
 226:openstack/02b-MAChigh/schedule.c ****    
 227:openstack/02b-MAChigh/schedule.c ****    scheduleEntry_t* slotContainer;
 228:openstack/02b-MAChigh/schedule.c ****   
 229:openstack/02b-MAChigh/schedule.c ****    // find an empty schedule entry container
 230:openstack/02b-MAChigh/schedule.c ****    slotContainer = &schedule_vars.scheduleBuf[0];
 532              		.loc 1 230 0
 533 03aa 40F20003 		movw	r3, #:lower16:schedule_vars
 534 03ae C0F20003 		movt	r3, #:upper16:schedule_vars
 535 03b2 7B61     		str	r3, [r7, #20]
 231:openstack/02b-MAChigh/schedule.c ****    while (slotContainer<=&schedule_vars.scheduleBuf[MAXACTIVESLOTS-1]) {
 536              		.loc 1 231 0
 537 03b4 1FE0     		b	.L12
 538              	.L15:
 232:openstack/02b-MAChigh/schedule.c ****        //check that this entry for that neighbour and timeslot is not already scheduled.
 233:openstack/02b-MAChigh/schedule.c ****        if (packetfunctions_sameAddress(neighbor,&(slotContainer->neighbor))&& (slotContainer->slotO
 539              		.loc 1 233 0
 540 03b6 7B69     		ldr	r3, [r7, #20]
 541 03b8 03F10503 		add	r3, r3, #5
 542 03bc B868     		ldr	r0, [r7, #8]
 543 03be 1946     		mov	r1, r3
 544 03c0 FFF7FEFF 		bl	packetfunctions_sameAddress
 545 03c4 0346     		mov	r3, r0
 546 03c6 002B     		cmp	r3, #0
 547 03c8 11D0     		beq	.L13
 548              		.loc 1 233 0 is_stmt 0 discriminator 1
 549 03ca 7B69     		ldr	r3, [r7, #20]
 550 03cc 1B88     		ldrh	r3, [r3, #0]
 551 03ce FA89     		ldrh	r2, [r7, #14]
 552 03d0 9A42     		cmp	r2, r3
 553 03d2 0CD1     		bne	.L13
 234:openstack/02b-MAChigh/schedule.c ****                //it exists so this is an update.
 235:openstack/02b-MAChigh/schedule.c ****                info->link_type                 = slotContainer->type;
 554              		.loc 1 235 0 is_stmt 1
 555 03d4 7B69     		ldr	r3, [r7, #20]
 556 03d6 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 557 03d8 7B68     		ldr	r3, [r7, #4]
 558 03da 1A72     		strb	r2, [r3, #8]
 236:openstack/02b-MAChigh/schedule.c ****                info->shared                    =slotContainer->shared;
 559              		.loc 1 236 0
 560 03dc 7B69     		ldr	r3, [r7, #20]
 561 03de DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 562 03e0 7B68     		ldr	r3, [r7, #4]
 563 03e2 5A72     		strb	r2, [r3, #9]
 237:openstack/02b-MAChigh/schedule.c ****                info->channelOffset             = slotContainer->channelOffset;
 564              		.loc 1 237 0
 565 03e4 7B69     		ldr	r3, [r7, #20]
 566 03e6 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 567 03e8 7B68     		ldr	r3, [r7, #4]
 568 03ea 1A73     		strb	r2, [r3, #12]
 238:openstack/02b-MAChigh/schedule.c ****                return; //as this is an update. No need to re-insert as it is in the same position o
 569              		.loc 1 238 0
 570 03ec 13E0     		b	.L11
 571              	.L13:
 239:openstack/02b-MAChigh/schedule.c ****         }
 240:openstack/02b-MAChigh/schedule.c ****         slotContainer++;
 572              		.loc 1 240 0
 573 03ee 7B69     		ldr	r3, [r7, #20]
 574 03f0 03F12403 		add	r3, r3, #36
 575 03f4 7B61     		str	r3, [r7, #20]
 576              	.L12:
 231:openstack/02b-MAChigh/schedule.c ****    while (slotContainer<=&schedule_vars.scheduleBuf[MAXACTIVESLOTS-1]) {
 577              		.loc 1 231 0 discriminator 1
 578 03f6 7A69     		ldr	r2, [r7, #20]
 579 03f8 094B     		ldr	r3, .L16
 580 03fa 9A42     		cmp	r2, r3
 581 03fc DBD9     		bls	.L15
 241:openstack/02b-MAChigh/schedule.c ****    }
 242:openstack/02b-MAChigh/schedule.c ****    //return cell type off.
 243:openstack/02b-MAChigh/schedule.c ****    info->link_type                 = CELLTYPE_OFF;
 582              		.loc 1 243 0
 583 03fe 7B68     		ldr	r3, [r7, #4]
 584 0400 4FF00002 		mov	r2, #0
 585 0404 1A72     		strb	r2, [r3, #8]
 244:openstack/02b-MAChigh/schedule.c ****    info->shared                    = FALSE;
 586              		.loc 1 244 0
 587 0406 7B68     		ldr	r3, [r7, #4]
 588 0408 4FF00002 		mov	r2, #0
 589 040c 5A72     		strb	r2, [r3, #9]
 245:openstack/02b-MAChigh/schedule.c ****    info->channelOffset             = 0;//set to zero if not set.                          
 590              		.loc 1 245 0
 591 040e 7B68     		ldr	r3, [r7, #4]
 592 0410 4FF00002 		mov	r2, #0
 593 0414 1A73     		strb	r2, [r3, #12]
 594              	.L11:
 246:openstack/02b-MAChigh/schedule.c **** }
 595              		.loc 1 246 0
 596 0416 07F11807 		add	r7, r7, #24
 597 041a BD46     		mov	sp, r7
 598 041c 80BD     		pop	{r7, pc}
 599              	.L17:
 600 041e 00BF     		.align	2
 601              	.L16:
 602 0420 20010000 		.word	schedule_vars+288
 603              		.cfi_endproc
 604              	.LFE4:
 606              		.align	2
 607              		.global	schedule_addActiveSlot
 608              		.thumb
 609              		.thumb_func
 611              	schedule_addActiveSlot:
 612              	.LFB5:
 247:openstack/02b-MAChigh/schedule.c **** 
 248:openstack/02b-MAChigh/schedule.c **** /**
 249:openstack/02b-MAChigh/schedule.c **** \brief Add a new active slot into the schedule.
 250:openstack/02b-MAChigh/schedule.c **** 
 251:openstack/02b-MAChigh/schedule.c **** \param slotOffset       The slotoffset of the new slot
 252:openstack/02b-MAChigh/schedule.c **** \param type             The type of the cell
 253:openstack/02b-MAChigh/schedule.c **** \param shared           Whether this cell is shared (TRUE) or not (FALSE).
 254:openstack/02b-MAChigh/schedule.c **** \param channelOffset    The channelOffset of the new slot
 255:openstack/02b-MAChigh/schedule.c **** \param neighbor         The neighbor associated with this cell (all 0's if
 256:openstack/02b-MAChigh/schedule.c ****    none)
 257:openstack/02b-MAChigh/schedule.c **** */
 258:openstack/02b-MAChigh/schedule.c **** owerror_t schedule_addActiveSlot(
 259:openstack/02b-MAChigh/schedule.c ****       slotOffset_t    slotOffset,
 260:openstack/02b-MAChigh/schedule.c ****       cellType_t      type,
 261:openstack/02b-MAChigh/schedule.c ****       bool            shared,
 262:openstack/02b-MAChigh/schedule.c ****       channelOffset_t channelOffset,
 263:openstack/02b-MAChigh/schedule.c ****       open_addr_t*    neighbor
 264:openstack/02b-MAChigh/schedule.c ****    ) {
 613              		.loc 1 264 0
 614              		.cfi_startproc
 615              		@ args = 4, pretend = 0, frame = 24
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617 0424 80B5     		push	{r7, lr}
 618              	.LCFI15:
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 622 0426 86B0     		sub	sp, sp, #24
 623              	.LCFI16:
 624              		.cfi_def_cfa_offset 32
 625 0428 00AF     		add	r7, sp, #0
 626              	.LCFI17:
 627              		.cfi_def_cfa_register 7
 628 042a F880     		strh	r0, [r7, #6]	@ movhi
 629 042c 7971     		strb	r1, [r7, #5]
 630 042e 3A71     		strb	r2, [r7, #4]
 631 0430 FB70     		strb	r3, [r7, #3]
 265:openstack/02b-MAChigh/schedule.c ****    scheduleEntry_t* slotContainer;
 266:openstack/02b-MAChigh/schedule.c ****    scheduleEntry_t* previousSlotWalker;
 267:openstack/02b-MAChigh/schedule.c ****    scheduleEntry_t* nextSlotWalker;
 268:openstack/02b-MAChigh/schedule.c ****    
 269:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 270:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 632              		.loc 1 270 0
 633 0432 FFF7FEFF 		bl	IntMasterDisable
 271:openstack/02b-MAChigh/schedule.c ****    
 272:openstack/02b-MAChigh/schedule.c ****    // find an empty schedule entry container
 273:openstack/02b-MAChigh/schedule.c ****    slotContainer = &schedule_vars.scheduleBuf[0];
 634              		.loc 1 273 0
 635 0436 40F20003 		movw	r3, #:lower16:schedule_vars
 636 043a C0F20003 		movt	r3, #:upper16:schedule_vars
 637 043e 7B61     		str	r3, [r7, #20]
 274:openstack/02b-MAChigh/schedule.c ****    while (
 638              		.loc 1 274 0
 639 0440 03E0     		b	.L19
 640              	.L21:
 275:openstack/02b-MAChigh/schedule.c ****          slotContainer->type!=CELLTYPE_OFF &&
 276:openstack/02b-MAChigh/schedule.c ****          slotContainer<=&schedule_vars.scheduleBuf[MAXACTIVESLOTS-1]
 277:openstack/02b-MAChigh/schedule.c ****       ) {
 278:openstack/02b-MAChigh/schedule.c ****       slotContainer++;
 641              		.loc 1 278 0
 642 0442 7B69     		ldr	r3, [r7, #20]
 643 0444 03F12403 		add	r3, r3, #36
 644 0448 7B61     		str	r3, [r7, #20]
 645              	.L19:
 275:openstack/02b-MAChigh/schedule.c ****          slotContainer->type!=CELLTYPE_OFF &&
 646              		.loc 1 275 0 discriminator 1
 647 044a 7B69     		ldr	r3, [r7, #20]
 648 044c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 274:openstack/02b-MAChigh/schedule.c ****    while (
 649              		.loc 1 274 0 discriminator 1
 650 044e 002B     		cmp	r3, #0
 651 0450 03D0     		beq	.L20
 275:openstack/02b-MAChigh/schedule.c ****          slotContainer->type!=CELLTYPE_OFF &&
 652              		.loc 1 275 0
 653 0452 7A69     		ldr	r2, [r7, #20]
 654 0454 3E4B     		ldr	r3, .L31
 655 0456 9A42     		cmp	r2, r3
 656 0458 F3D9     		bls	.L21
 657              	.L20:
 279:openstack/02b-MAChigh/schedule.c ****    }
 280:openstack/02b-MAChigh/schedule.c ****    
 281:openstack/02b-MAChigh/schedule.c ****    // abort it schedule overflow
 282:openstack/02b-MAChigh/schedule.c ****    if (slotContainer>&schedule_vars.scheduleBuf[MAXACTIVESLOTS-1]) {
 658              		.loc 1 282 0
 659 045a 7A69     		ldr	r2, [r7, #20]
 660 045c 3C4B     		ldr	r3, .L31
 661 045e 9A42     		cmp	r2, r3
 662 0460 0ED9     		bls	.L22
 283:openstack/02b-MAChigh/schedule.c ****       ENABLE_INTERRUPTS();
 663              		.loc 1 283 0
 664 0462 FFF7FEFF 		bl	IntMasterEnable
 284:openstack/02b-MAChigh/schedule.c ****       openserial_printCritical(
 665              		.loc 1 284 0
 666 0466 4FF00E00 		mov	r0, #14
 667 046a 4FF01701 		mov	r1, #23
 668 046e 4FF00002 		mov	r2, #0
 669 0472 4FF00003 		mov	r3, #0
 670 0476 FFF7FEFF 		bl	openserial_printCritical
 285:openstack/02b-MAChigh/schedule.c ****          COMPONENT_SCHEDULE,ERR_SCHEDULE_OVERFLOWN,
 286:openstack/02b-MAChigh/schedule.c ****          (errorparameter_t)0,
 287:openstack/02b-MAChigh/schedule.c ****          (errorparameter_t)0
 288:openstack/02b-MAChigh/schedule.c ****       );
 289:openstack/02b-MAChigh/schedule.c ****       return E_FAIL;
 671              		.loc 1 289 0
 672 047a 4FF00103 		mov	r3, #1
 673 047e 62E0     		b	.L23
 674              	.L22:
 290:openstack/02b-MAChigh/schedule.c ****    }
 291:openstack/02b-MAChigh/schedule.c ****    
 292:openstack/02b-MAChigh/schedule.c ****    // fill that schedule entry with parameters passed
 293:openstack/02b-MAChigh/schedule.c ****    slotContainer->slotOffset                = slotOffset;
 675              		.loc 1 293 0
 676 0480 7B69     		ldr	r3, [r7, #20]
 677 0482 FA88     		ldrh	r2, [r7, #6]	@ movhi
 678 0484 1A80     		strh	r2, [r3, #0]	@ movhi
 294:openstack/02b-MAChigh/schedule.c ****    slotContainer->type                      = type;
 679              		.loc 1 294 0
 680 0486 7B69     		ldr	r3, [r7, #20]
 681 0488 7A79     		ldrb	r2, [r7, #5]
 682 048a 9A70     		strb	r2, [r3, #2]
 295:openstack/02b-MAChigh/schedule.c ****    slotContainer->shared                    = shared;
 683              		.loc 1 295 0
 684 048c 7B69     		ldr	r3, [r7, #20]
 685 048e 3A79     		ldrb	r2, [r7, #4]
 686 0490 DA70     		strb	r2, [r3, #3]
 296:openstack/02b-MAChigh/schedule.c ****    slotContainer->channelOffset             = channelOffset;
 687              		.loc 1 296 0
 688 0492 7B69     		ldr	r3, [r7, #20]
 689 0494 FA78     		ldrb	r2, [r7, #3]
 690 0496 1A71     		strb	r2, [r3, #4]
 297:openstack/02b-MAChigh/schedule.c ****    memcpy(&slotContainer->neighbor,neighbor,sizeof(open_addr_t));
 691              		.loc 1 297 0
 692 0498 7B69     		ldr	r3, [r7, #20]
 693 049a 03F10503 		add	r3, r3, #5
 694 049e 1846     		mov	r0, r3
 695 04a0 396A     		ldr	r1, [r7, #32]
 696 04a2 4FF01102 		mov	r2, #17
 697 04a6 FFF7FEFF 		bl	memcpy
 298:openstack/02b-MAChigh/schedule.c ****    
 299:openstack/02b-MAChigh/schedule.c ****    // insert in circular list
 300:openstack/02b-MAChigh/schedule.c ****    if (schedule_vars.currentScheduleEntry==NULL) {
 698              		.loc 1 300 0
 699 04aa 40F20003 		movw	r3, #:lower16:schedule_vars
 700 04ae C0F20003 		movt	r3, #:upper16:schedule_vars
 701 04b2 D3F84431 		ldr	r3, [r3, #324]
 702 04b6 002B     		cmp	r3, #0
 703 04b8 0AD1     		bne	.L24
 301:openstack/02b-MAChigh/schedule.c ****       // this is the first active slot added
 302:openstack/02b-MAChigh/schedule.c ****       
 303:openstack/02b-MAChigh/schedule.c ****       // the next slot of this slot is this slot
 304:openstack/02b-MAChigh/schedule.c ****       slotContainer->next                   = slotContainer;
 704              		.loc 1 304 0
 705 04ba 7B69     		ldr	r3, [r7, #20]
 706 04bc 7A69     		ldr	r2, [r7, #20]
 707 04be 1A62     		str	r2, [r3, #32]
 305:openstack/02b-MAChigh/schedule.c ****       
 306:openstack/02b-MAChigh/schedule.c ****       // current slot points to this slot
 307:openstack/02b-MAChigh/schedule.c ****       schedule_vars.currentScheduleEntry    = slotContainer;
 708              		.loc 1 307 0
 709 04c0 40F20003 		movw	r3, #:lower16:schedule_vars
 710 04c4 C0F20003 		movt	r3, #:upper16:schedule_vars
 711 04c8 7A69     		ldr	r2, [r7, #20]
 712 04ca C3F84421 		str	r2, [r3, #324]
 713 04ce 36E0     		b	.L25
 714              	.L24:
 308:openstack/02b-MAChigh/schedule.c ****    } else  {
 309:openstack/02b-MAChigh/schedule.c ****       // this is NOT the first active slot added
 310:openstack/02b-MAChigh/schedule.c ****       
 311:openstack/02b-MAChigh/schedule.c ****       // find position in schedule
 312:openstack/02b-MAChigh/schedule.c ****       previousSlotWalker                    = schedule_vars.currentScheduleEntry;
 715              		.loc 1 312 0
 716 04d0 40F20003 		movw	r3, #:lower16:schedule_vars
 717 04d4 C0F20003 		movt	r3, #:upper16:schedule_vars
 718 04d8 D3F84431 		ldr	r3, [r3, #324]
 719 04dc 3B61     		str	r3, [r7, #16]
 720              	.L30:
 313:openstack/02b-MAChigh/schedule.c ****       while (1) {
 314:openstack/02b-MAChigh/schedule.c ****          nextSlotWalker                     = previousSlotWalker->next;
 721              		.loc 1 314 0
 722 04de 3B69     		ldr	r3, [r7, #16]
 723 04e0 1B6A     		ldr	r3, [r3, #32]
 724 04e2 FB60     		str	r3, [r7, #12]
 315:openstack/02b-MAChigh/schedule.c ****          if (
 316:openstack/02b-MAChigh/schedule.c ****                (
 317:openstack/02b-MAChigh/schedule.c ****                      (previousSlotWalker->slotOffset <  slotContainer->slotOffset) &&
 725              		.loc 1 317 0
 726 04e4 3B69     		ldr	r3, [r7, #16]
 727 04e6 1A88     		ldrh	r2, [r3, #0]
 728 04e8 7B69     		ldr	r3, [r7, #20]
 729 04ea 1B88     		ldrh	r3, [r3, #0]
 315:openstack/02b-MAChigh/schedule.c ****          if (
 730              		.loc 1 315 0
 731 04ec 9A42     		cmp	r2, r3
 732 04ee 05D2     		bcs	.L26
 318:openstack/02b-MAChigh/schedule.c ****                      (slotContainer->slotOffset <  nextSlotWalker->slotOffset)
 733              		.loc 1 318 0
 734 04f0 7B69     		ldr	r3, [r7, #20]
 735 04f2 1A88     		ldrh	r2, [r3, #0]
 736 04f4 FB68     		ldr	r3, [r7, #12]
 737 04f6 1B88     		ldrh	r3, [r3, #0]
 317:openstack/02b-MAChigh/schedule.c ****                      (previousSlotWalker->slotOffset <  slotContainer->slotOffset) &&
 738              		.loc 1 317 0
 739 04f8 9A42     		cmp	r2, r3
 740 04fa 1AD3     		bcc	.L27
 741              	.L26:
 319:openstack/02b-MAChigh/schedule.c ****                )
 320:openstack/02b-MAChigh/schedule.c ****                ||
 321:openstack/02b-MAChigh/schedule.c ****                (
 322:openstack/02b-MAChigh/schedule.c ****                      (previousSlotWalker->slotOffset <  slotContainer->slotOffset) &&
 742              		.loc 1 322 0
 743 04fc 3B69     		ldr	r3, [r7, #16]
 744 04fe 1A88     		ldrh	r2, [r3, #0]
 745 0500 7B69     		ldr	r3, [r7, #20]
 746 0502 1B88     		ldrh	r3, [r3, #0]
 320:openstack/02b-MAChigh/schedule.c ****                ||
 747              		.loc 1 320 0
 748 0504 9A42     		cmp	r2, r3
 749 0506 05D2     		bcs	.L28
 323:openstack/02b-MAChigh/schedule.c ****                      (nextSlotWalker->slotOffset <= previousSlotWalker->slotOffset)
 750              		.loc 1 323 0
 751 0508 FB68     		ldr	r3, [r7, #12]
 752 050a 1A88     		ldrh	r2, [r3, #0]
 753 050c 3B69     		ldr	r3, [r7, #16]
 754 050e 1B88     		ldrh	r3, [r3, #0]
 322:openstack/02b-MAChigh/schedule.c ****                      (previousSlotWalker->slotOffset <  slotContainer->slotOffset) &&
 755              		.loc 1 322 0
 756 0510 9A42     		cmp	r2, r3
 757 0512 0ED9     		bls	.L27
 758              	.L28:
 324:openstack/02b-MAChigh/schedule.c ****                )
 325:openstack/02b-MAChigh/schedule.c ****                ||
 326:openstack/02b-MAChigh/schedule.c ****                (
 327:openstack/02b-MAChigh/schedule.c ****                      (slotContainer->slotOffset <  nextSlotWalker->slotOffset) &&
 759              		.loc 1 327 0
 760 0514 7B69     		ldr	r3, [r7, #20]
 761 0516 1A88     		ldrh	r2, [r3, #0]
 762 0518 FB68     		ldr	r3, [r7, #12]
 763 051a 1B88     		ldrh	r3, [r3, #0]
 325:openstack/02b-MAChigh/schedule.c ****                ||
 764              		.loc 1 325 0
 765 051c 9A42     		cmp	r2, r3
 766 051e 05D2     		bcs	.L29
 328:openstack/02b-MAChigh/schedule.c ****                      (nextSlotWalker->slotOffset <= previousSlotWalker->slotOffset)
 767              		.loc 1 328 0
 768 0520 FB68     		ldr	r3, [r7, #12]
 769 0522 1A88     		ldrh	r2, [r3, #0]
 770 0524 3B69     		ldr	r3, [r7, #16]
 771 0526 1B88     		ldrh	r3, [r3, #0]
 327:openstack/02b-MAChigh/schedule.c ****                      (slotContainer->slotOffset <  nextSlotWalker->slotOffset) &&
 772              		.loc 1 327 0
 773 0528 9A42     		cmp	r2, r3
 774 052a 02D9     		bls	.L27
 775              	.L29:
 329:openstack/02b-MAChigh/schedule.c ****                )
 330:openstack/02b-MAChigh/schedule.c ****          ) {
 331:openstack/02b-MAChigh/schedule.c ****             break;
 332:openstack/02b-MAChigh/schedule.c ****          }
 333:openstack/02b-MAChigh/schedule.c ****          previousSlotWalker                 = nextSlotWalker;
 776              		.loc 1 333 0
 777 052c FB68     		ldr	r3, [r7, #12]
 778 052e 3B61     		str	r3, [r7, #16]
 334:openstack/02b-MAChigh/schedule.c ****       }
 779              		.loc 1 334 0
 780 0530 D5E7     		b	.L30
 781              	.L27:
 335:openstack/02b-MAChigh/schedule.c ****       // insert between previousSlotWalker and nextSlotWalker
 336:openstack/02b-MAChigh/schedule.c ****       previousSlotWalker->next              = slotContainer;
 782              		.loc 1 336 0
 783 0532 3B69     		ldr	r3, [r7, #16]
 784 0534 7A69     		ldr	r2, [r7, #20]
 785 0536 1A62     		str	r2, [r3, #32]
 337:openstack/02b-MAChigh/schedule.c ****       slotContainer->next                   = nextSlotWalker;
 786              		.loc 1 337 0
 787 0538 7B69     		ldr	r3, [r7, #20]
 788 053a FA68     		ldr	r2, [r7, #12]
 789 053c 1A62     		str	r2, [r3, #32]
 790              	.L25:
 338:openstack/02b-MAChigh/schedule.c ****    }
 339:openstack/02b-MAChigh/schedule.c ****    
 340:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 791              		.loc 1 340 0
 792 053e FFF7FEFF 		bl	IntMasterEnable
 341:openstack/02b-MAChigh/schedule.c ****    return E_SUCCESS;
 793              		.loc 1 341 0
 794 0542 4FF00003 		mov	r3, #0
 795              	.L23:
 342:openstack/02b-MAChigh/schedule.c **** }
 796              		.loc 1 342 0
 797 0546 1846     		mov	r0, r3
 798 0548 07F11807 		add	r7, r7, #24
 799 054c BD46     		mov	sp, r7
 800 054e 80BD     		pop	{r7, pc}
 801              	.L32:
 802              		.align	2
 803              	.L31:
 804 0550 20010000 		.word	schedule_vars+288
 805              		.cfi_endproc
 806              	.LFE5:
 808              		.align	2
 809              		.global	schedule_removeActiveSlot
 810              		.thumb
 811              		.thumb_func
 813              	schedule_removeActiveSlot:
 814              	.LFB6:
 343:openstack/02b-MAChigh/schedule.c **** 
 344:openstack/02b-MAChigh/schedule.c **** /**
 345:openstack/02b-MAChigh/schedule.c **** \brief Remove an active slot from the schedule.
 346:openstack/02b-MAChigh/schedule.c **** 
 347:openstack/02b-MAChigh/schedule.c **** \param slotOffset       The slotoffset of the slot to remove.
 348:openstack/02b-MAChigh/schedule.c **** \param neighbor         The neighbor associated with this cell (all 0's if
 349:openstack/02b-MAChigh/schedule.c ****    none)
 350:openstack/02b-MAChigh/schedule.c **** */
 351:openstack/02b-MAChigh/schedule.c **** owerror_t schedule_removeActiveSlot(slotOffset_t slotOffset, open_addr_t* neighbor) {
 815              		.loc 1 351 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 16
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819 0554 80B5     		push	{r7, lr}
 820              	.LCFI18:
 821              		.cfi_def_cfa_offset 8
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0556 84B0     		sub	sp, sp, #16
 825              	.LCFI19:
 826              		.cfi_def_cfa_offset 24
 827 0558 00AF     		add	r7, sp, #0
 828              	.LCFI20:
 829              		.cfi_def_cfa_register 7
 830 055a 0346     		mov	r3, r0
 831 055c 3960     		str	r1, [r7, #0]
 832 055e FB80     		strh	r3, [r7, #6]	@ movhi
 352:openstack/02b-MAChigh/schedule.c ****    scheduleEntry_t* slotContainer;
 353:openstack/02b-MAChigh/schedule.c ****    scheduleEntry_t* previousSlotWalker;
 354:openstack/02b-MAChigh/schedule.c ****    
 355:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 356:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 833              		.loc 1 356 0
 834 0560 FFF7FEFF 		bl	IntMasterDisable
 357:openstack/02b-MAChigh/schedule.c ****    
 358:openstack/02b-MAChigh/schedule.c ****    // find the schedule entry
 359:openstack/02b-MAChigh/schedule.c ****    slotContainer = &schedule_vars.scheduleBuf[0];
 835              		.loc 1 359 0
 836 0564 40F20003 		movw	r3, #:lower16:schedule_vars
 837 0568 C0F20003 		movt	r3, #:upper16:schedule_vars
 838 056c FB60     		str	r3, [r7, #12]
 360:openstack/02b-MAChigh/schedule.c ****    while (slotContainer<=&schedule_vars.scheduleBuf[MAXACTIVESLOTS-1]) {
 839              		.loc 1 360 0
 840 056e 12E0     		b	.L34
 841              	.L37:
 361:openstack/02b-MAChigh/schedule.c ****       if (
 362:openstack/02b-MAChigh/schedule.c ****             slotContainer->slotOffset==slotOffset
 842              		.loc 1 362 0
 843 0570 FB68     		ldr	r3, [r7, #12]
 844 0572 1B88     		ldrh	r3, [r3, #0]
 361:openstack/02b-MAChigh/schedule.c ****       if (
 845              		.loc 1 361 0
 846 0574 FA88     		ldrh	r2, [r7, #6]
 847 0576 9A42     		cmp	r2, r3
 848 0578 09D1     		bne	.L35
 363:openstack/02b-MAChigh/schedule.c ****             &&
 364:openstack/02b-MAChigh/schedule.c ****             packetfunctions_sameAddress(neighbor,&(slotContainer->neighbor))
 849              		.loc 1 364 0
 850 057a FB68     		ldr	r3, [r7, #12]
 851 057c 03F10503 		add	r3, r3, #5
 852 0580 3868     		ldr	r0, [r7, #0]
 853 0582 1946     		mov	r1, r3
 854 0584 FFF7FEFF 		bl	packetfunctions_sameAddress
 855 0588 0346     		mov	r3, r0
 363:openstack/02b-MAChigh/schedule.c ****             &&
 856              		.loc 1 363 0
 857 058a 002B     		cmp	r3, #0
 858 058c 08D1     		bne	.L46
 859              	.L35:
 365:openstack/02b-MAChigh/schedule.c ****             ){
 366:openstack/02b-MAChigh/schedule.c ****          break;
 367:openstack/02b-MAChigh/schedule.c ****       }
 368:openstack/02b-MAChigh/schedule.c ****       slotContainer++;
 860              		.loc 1 368 0
 861 058e FB68     		ldr	r3, [r7, #12]
 862 0590 03F12403 		add	r3, r3, #36
 863 0594 FB60     		str	r3, [r7, #12]
 864              	.L34:
 360:openstack/02b-MAChigh/schedule.c ****    while (slotContainer<=&schedule_vars.scheduleBuf[MAXACTIVESLOTS-1]) {
 865              		.loc 1 360 0 discriminator 1
 866 0596 FA68     		ldr	r2, [r7, #12]
 867 0598 2D4B     		ldr	r3, .L48
 868 059a 9A42     		cmp	r2, r3
 869 059c E8D9     		bls	.L37
 870 059e 00E0     		b	.L36
 871              	.L46:
 366:openstack/02b-MAChigh/schedule.c ****          break;
 872              		.loc 1 366 0
 873 05a0 00BF     		nop
 874              	.L36:
 369:openstack/02b-MAChigh/schedule.c ****    }
 370:openstack/02b-MAChigh/schedule.c ****    
 371:openstack/02b-MAChigh/schedule.c ****    // abort it could not find
 372:openstack/02b-MAChigh/schedule.c ****    if (slotContainer>&schedule_vars.scheduleBuf[MAXACTIVESLOTS-1]) {
 875              		.loc 1 372 0
 876 05a2 FA68     		ldr	r2, [r7, #12]
 877 05a4 2A4B     		ldr	r3, .L48
 878 05a6 9A42     		cmp	r2, r3
 879 05a8 0ED9     		bls	.L38
 373:openstack/02b-MAChigh/schedule.c ****       ENABLE_INTERRUPTS();
 880              		.loc 1 373 0
 881 05aa FFF7FEFF 		bl	IntMasterEnable
 374:openstack/02b-MAChigh/schedule.c ****       openserial_printCritical(
 882              		.loc 1 374 0
 883 05ae 4FF00E00 		mov	r0, #14
 884 05b2 4FF02E01 		mov	r1, #46
 885 05b6 4FF00002 		mov	r2, #0
 886 05ba 4FF00003 		mov	r3, #0
 887 05be FFF7FEFF 		bl	openserial_printCritical
 375:openstack/02b-MAChigh/schedule.c ****          COMPONENT_SCHEDULE,ERR_FREEING_ERROR,
 376:openstack/02b-MAChigh/schedule.c ****          (errorparameter_t)0,
 377:openstack/02b-MAChigh/schedule.c ****          (errorparameter_t)0
 378:openstack/02b-MAChigh/schedule.c ****       );
 379:openstack/02b-MAChigh/schedule.c ****       return E_FAIL;
 888              		.loc 1 379 0
 889 05c2 4FF00103 		mov	r3, #1
 890 05c6 3EE0     		b	.L39
 891              	.L38:
 380:openstack/02b-MAChigh/schedule.c ****    }
 381:openstack/02b-MAChigh/schedule.c ****    
 382:openstack/02b-MAChigh/schedule.c ****    // remove from linked list
 383:openstack/02b-MAChigh/schedule.c ****    if (slotContainer->next==slotContainer) {
 892              		.loc 1 383 0
 893 05c8 FB68     		ldr	r3, [r7, #12]
 894 05ca 1A6A     		ldr	r2, [r3, #32]
 895 05cc FB68     		ldr	r3, [r7, #12]
 896 05ce 9A42     		cmp	r2, r3
 897 05d0 0CD1     		bne	.L40
 384:openstack/02b-MAChigh/schedule.c ****       // this is the last active slot
 385:openstack/02b-MAChigh/schedule.c ****       
 386:openstack/02b-MAChigh/schedule.c ****       // the next slot of this slot is NULL
 387:openstack/02b-MAChigh/schedule.c ****       slotContainer->next                   = NULL;
 898              		.loc 1 387 0
 899 05d2 FB68     		ldr	r3, [r7, #12]
 900 05d4 4FF00002 		mov	r2, #0
 901 05d8 1A62     		str	r2, [r3, #32]
 388:openstack/02b-MAChigh/schedule.c ****       
 389:openstack/02b-MAChigh/schedule.c ****       // current slot points to this slot
 390:openstack/02b-MAChigh/schedule.c ****       schedule_vars.currentScheduleEntry    = NULL;
 902              		.loc 1 390 0
 903 05da 40F20003 		movw	r3, #:lower16:schedule_vars
 904 05de C0F20003 		movt	r3, #:upper16:schedule_vars
 905 05e2 4FF00002 		mov	r2, #0
 906 05e6 C3F84421 		str	r2, [r3, #324]
 907 05ea 25E0     		b	.L41
 908              	.L40:
 391:openstack/02b-MAChigh/schedule.c ****    } else  {
 392:openstack/02b-MAChigh/schedule.c ****       // this is NOT the last active slot
 393:openstack/02b-MAChigh/schedule.c ****       
 394:openstack/02b-MAChigh/schedule.c ****       // find the previous in the schedule
 395:openstack/02b-MAChigh/schedule.c ****       previousSlotWalker                    = schedule_vars.currentScheduleEntry;
 909              		.loc 1 395 0
 910 05ec 40F20003 		movw	r3, #:lower16:schedule_vars
 911 05f0 C0F20003 		movt	r3, #:upper16:schedule_vars
 912 05f4 D3F84431 		ldr	r3, [r3, #324]
 913 05f8 BB60     		str	r3, [r7, #8]
 914              	.L44:
 396:openstack/02b-MAChigh/schedule.c ****       
 397:openstack/02b-MAChigh/schedule.c ****       while (1) {
 398:openstack/02b-MAChigh/schedule.c ****          if (previousSlotWalker->next==slotContainer){
 915              		.loc 1 398 0
 916 05fa BB68     		ldr	r3, [r7, #8]
 917 05fc 1A6A     		ldr	r2, [r3, #32]
 918 05fe FB68     		ldr	r3, [r7, #12]
 919 0600 9A42     		cmp	r2, r3
 920 0602 03D0     		beq	.L47
 921              	.L42:
 399:openstack/02b-MAChigh/schedule.c ****             break;
 400:openstack/02b-MAChigh/schedule.c ****          }
 401:openstack/02b-MAChigh/schedule.c ****          previousSlotWalker                 = previousSlotWalker->next;
 922              		.loc 1 401 0
 923 0604 BB68     		ldr	r3, [r7, #8]
 924 0606 1B6A     		ldr	r3, [r3, #32]
 925 0608 BB60     		str	r3, [r7, #8]
 402:openstack/02b-MAChigh/schedule.c ****       }
 926              		.loc 1 402 0
 927 060a F6E7     		b	.L44
 928              	.L47:
 399:openstack/02b-MAChigh/schedule.c ****             break;
 929              		.loc 1 399 0
 930 060c 00BF     		nop
 931              	.L45:
 403:openstack/02b-MAChigh/schedule.c ****       
 404:openstack/02b-MAChigh/schedule.c ****       // remove this element from the linked list, i.e. have the previous slot
 405:openstack/02b-MAChigh/schedule.c ****       // "jump" to slotContainer's next
 406:openstack/02b-MAChigh/schedule.c ****       previousSlotWalker->next              = slotContainer->next;
 932              		.loc 1 406 0
 933 060e FB68     		ldr	r3, [r7, #12]
 934 0610 1A6A     		ldr	r2, [r3, #32]
 935 0612 BB68     		ldr	r3, [r7, #8]
 936 0614 1A62     		str	r2, [r3, #32]
 407:openstack/02b-MAChigh/schedule.c ****       
 408:openstack/02b-MAChigh/schedule.c ****       // update current slot if points to slot I just removed
 409:openstack/02b-MAChigh/schedule.c ****       if (schedule_vars.currentScheduleEntry==slotContainer) {
 937              		.loc 1 409 0
 938 0616 40F20003 		movw	r3, #:lower16:schedule_vars
 939 061a C0F20003 		movt	r3, #:upper16:schedule_vars
 940 061e D3F84421 		ldr	r2, [r3, #324]
 941 0622 FB68     		ldr	r3, [r7, #12]
 942 0624 9A42     		cmp	r2, r3
 943 0626 07D1     		bne	.L41
 410:openstack/02b-MAChigh/schedule.c ****          schedule_vars.currentScheduleEntry = slotContainer->next;
 944              		.loc 1 410 0
 945 0628 FB68     		ldr	r3, [r7, #12]
 946 062a 1A6A     		ldr	r2, [r3, #32]
 947 062c 40F20003 		movw	r3, #:lower16:schedule_vars
 948 0630 C0F20003 		movt	r3, #:upper16:schedule_vars
 949 0634 C3F84421 		str	r2, [r3, #324]
 950              	.L41:
 411:openstack/02b-MAChigh/schedule.c ****       }
 412:openstack/02b-MAChigh/schedule.c ****    }
 413:openstack/02b-MAChigh/schedule.c ****    
 414:openstack/02b-MAChigh/schedule.c ****    // reset removed schedule entry
 415:openstack/02b-MAChigh/schedule.c ****    schedule_resetEntry(slotContainer);
 951              		.loc 1 415 0
 952 0638 F868     		ldr	r0, [r7, #12]
 953 063a FFF7FEFF 		bl	schedule_resetEntry
 416:openstack/02b-MAChigh/schedule.c ****    
 417:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 954              		.loc 1 417 0
 955 063e FFF7FEFF 		bl	IntMasterEnable
 418:openstack/02b-MAChigh/schedule.c ****    
 419:openstack/02b-MAChigh/schedule.c ****    return E_SUCCESS;
 956              		.loc 1 419 0
 957 0642 4FF00003 		mov	r3, #0
 958              	.L39:
 420:openstack/02b-MAChigh/schedule.c **** }
 959              		.loc 1 420 0
 960 0646 1846     		mov	r0, r3
 961 0648 07F11007 		add	r7, r7, #16
 962 064c BD46     		mov	sp, r7
 963 064e 80BD     		pop	{r7, pc}
 964              	.L49:
 965              		.align	2
 966              	.L48:
 967 0650 20010000 		.word	schedule_vars+288
 968              		.cfi_endproc
 969              	.LFE6:
 971              		.align	2
 972              		.global	schedule_isSlotOffsetAvailable
 973              		.thumb
 974              		.thumb_func
 976              	schedule_isSlotOffsetAvailable:
 977              	.LFB7:
 421:openstack/02b-MAChigh/schedule.c **** 
 422:openstack/02b-MAChigh/schedule.c **** bool schedule_isSlotOffsetAvailable(uint16_t slotOffset){
 978              		.loc 1 422 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 16
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0654 80B5     		push	{r7, lr}
 983              	.LCFI21:
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0656 84B0     		sub	sp, sp, #16
 988              	.LCFI22:
 989              		.cfi_def_cfa_offset 24
 990 0658 00AF     		add	r7, sp, #0
 991              	.LCFI23:
 992              		.cfi_def_cfa_register 7
 993 065a 0346     		mov	r3, r0
 994 065c FB80     		strh	r3, [r7, #6]	@ movhi
 423:openstack/02b-MAChigh/schedule.c ****    
 424:openstack/02b-MAChigh/schedule.c ****    scheduleEntry_t* scheduleWalker;
 425:openstack/02b-MAChigh/schedule.c ****    
 426:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 427:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 995              		.loc 1 427 0
 996 065e FFF7FEFF 		bl	IntMasterDisable
 428:openstack/02b-MAChigh/schedule.c ****    
 429:openstack/02b-MAChigh/schedule.c ****    scheduleWalker = schedule_vars.currentScheduleEntry;
 997              		.loc 1 429 0
 998 0662 40F20003 		movw	r3, #:lower16:schedule_vars
 999 0666 C0F20003 		movt	r3, #:upper16:schedule_vars
 1000 066a D3F84431 		ldr	r3, [r3, #324]
 1001 066e FB60     		str	r3, [r7, #12]
 1002              	.L53:
 430:openstack/02b-MAChigh/schedule.c ****    do {
 431:openstack/02b-MAChigh/schedule.c ****       if(slotOffset == scheduleWalker->slotOffset){
 1003              		.loc 1 431 0
 1004 0670 FB68     		ldr	r3, [r7, #12]
 1005 0672 1B88     		ldrh	r3, [r3, #0]
 1006 0674 FA88     		ldrh	r2, [r7, #6]
 1007 0676 9A42     		cmp	r2, r3
 1008 0678 02D1     		bne	.L51
 432:openstack/02b-MAChigh/schedule.c ****          return FALSE;
 1009              		.loc 1 432 0
 1010 067a 4FF00003 		mov	r3, #0
 1011 067e 0FE0     		b	.L52
 1012              	.L51:
 433:openstack/02b-MAChigh/schedule.c ****       }
 434:openstack/02b-MAChigh/schedule.c ****       scheduleWalker = scheduleWalker->next;
 1013              		.loc 1 434 0
 1014 0680 FB68     		ldr	r3, [r7, #12]
 1015 0682 1B6A     		ldr	r3, [r3, #32]
 1016 0684 FB60     		str	r3, [r7, #12]
 435:openstack/02b-MAChigh/schedule.c ****    }while(scheduleWalker!=schedule_vars.currentScheduleEntry);
 1017              		.loc 1 435 0
 1018 0686 40F20003 		movw	r3, #:lower16:schedule_vars
 1019 068a C0F20003 		movt	r3, #:upper16:schedule_vars
 1020 068e D3F84421 		ldr	r2, [r3, #324]
 1021 0692 FB68     		ldr	r3, [r7, #12]
 1022 0694 9A42     		cmp	r2, r3
 1023 0696 EBD1     		bne	.L53
 436:openstack/02b-MAChigh/schedule.c ****    
 437:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1024              		.loc 1 437 0
 1025 0698 FFF7FEFF 		bl	IntMasterEnable
 438:openstack/02b-MAChigh/schedule.c ****    
 439:openstack/02b-MAChigh/schedule.c ****    return TRUE;
 1026              		.loc 1 439 0
 1027 069c 4FF00103 		mov	r3, #1
 1028              	.L52:
 440:openstack/02b-MAChigh/schedule.c **** }
 1029              		.loc 1 440 0
 1030 06a0 1846     		mov	r0, r3
 1031 06a2 07F11007 		add	r7, r7, #16
 1032 06a6 BD46     		mov	sp, r7
 1033 06a8 80BD     		pop	{r7, pc}
 1034              		.cfi_endproc
 1035              	.LFE7:
 1037 06aa 00BF     		.align	2
 1038              		.global	schedule_syncSlotOffset
 1039              		.thumb
 1040              		.thumb_func
 1042              	schedule_syncSlotOffset:
 1043              	.LFB8:
 441:openstack/02b-MAChigh/schedule.c **** 
 442:openstack/02b-MAChigh/schedule.c **** //=== from IEEE802154E: reading the schedule and updating statistics
 443:openstack/02b-MAChigh/schedule.c **** 
 444:openstack/02b-MAChigh/schedule.c **** void schedule_syncSlotOffset(slotOffset_t targetSlotOffset) {
 1044              		.loc 1 444 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 8
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 06ac 80B5     		push	{r7, lr}
 1049              	.LCFI24:
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 06ae 82B0     		sub	sp, sp, #8
 1054              	.LCFI25:
 1055              		.cfi_def_cfa_offset 16
 1056 06b0 00AF     		add	r7, sp, #0
 1057              	.LCFI26:
 1058              		.cfi_def_cfa_register 7
 1059 06b2 0346     		mov	r3, r0
 1060 06b4 FB80     		strh	r3, [r7, #6]	@ movhi
 445:openstack/02b-MAChigh/schedule.c ****    
 446:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 447:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1061              		.loc 1 447 0
 1062 06b6 FFF7FEFF 		bl	IntMasterDisable
 448:openstack/02b-MAChigh/schedule.c ****    
 449:openstack/02b-MAChigh/schedule.c ****    while (schedule_vars.currentScheduleEntry->slotOffset!=targetSlotOffset) {
 1063              		.loc 1 449 0
 1064 06ba 01E0     		b	.L55
 1065              	.L56:
 450:openstack/02b-MAChigh/schedule.c ****       schedule_advanceSlot();
 1066              		.loc 1 450 0
 1067 06bc FFF7FEFF 		bl	schedule_advanceSlot
 1068              	.L55:
 449:openstack/02b-MAChigh/schedule.c ****    while (schedule_vars.currentScheduleEntry->slotOffset!=targetSlotOffset) {
 1069              		.loc 1 449 0 discriminator 1
 1070 06c0 40F20003 		movw	r3, #:lower16:schedule_vars
 1071 06c4 C0F20003 		movt	r3, #:upper16:schedule_vars
 1072 06c8 D3F84431 		ldr	r3, [r3, #324]
 1073 06cc 1B88     		ldrh	r3, [r3, #0]
 1074 06ce FA88     		ldrh	r2, [r7, #6]
 1075 06d0 9A42     		cmp	r2, r3
 1076 06d2 F3D1     		bne	.L56
 451:openstack/02b-MAChigh/schedule.c ****    }
 452:openstack/02b-MAChigh/schedule.c ****    
 453:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1077              		.loc 1 453 0
 1078 06d4 FFF7FEFF 		bl	IntMasterEnable
 454:openstack/02b-MAChigh/schedule.c **** }
 1079              		.loc 1 454 0
 1080 06d8 07F10807 		add	r7, r7, #8
 1081 06dc BD46     		mov	sp, r7
 1082 06de 80BD     		pop	{r7, pc}
 1083              		.cfi_endproc
 1084              	.LFE8:
 1086              		.align	2
 1087              		.global	schedule_advanceSlot
 1088              		.thumb
 1089              		.thumb_func
 1091              	schedule_advanceSlot:
 1092              	.LFB9:
 455:openstack/02b-MAChigh/schedule.c **** 
 456:openstack/02b-MAChigh/schedule.c **** /**
 457:openstack/02b-MAChigh/schedule.c **** \brief advance to next active slot
 458:openstack/02b-MAChigh/schedule.c **** */
 459:openstack/02b-MAChigh/schedule.c **** void schedule_advanceSlot() {
 1093              		.loc 1 459 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097 06e0 80B5     		push	{r7, lr}
 1098              	.LCFI27:
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 06e2 00AF     		add	r7, sp, #0
 1103              	.LCFI28:
 1104              		.cfi_def_cfa_register 7
 460:openstack/02b-MAChigh/schedule.c ****    
 461:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 462:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1105              		.loc 1 462 0
 1106 06e4 FFF7FEFF 		bl	IntMasterDisable
 463:openstack/02b-MAChigh/schedule.c ****    
 464:openstack/02b-MAChigh/schedule.c ****    schedule_vars.currentScheduleEntry = schedule_vars.currentScheduleEntry->next;
 1107              		.loc 1 464 0
 1108 06e8 40F20003 		movw	r3, #:lower16:schedule_vars
 1109 06ec C0F20003 		movt	r3, #:upper16:schedule_vars
 1110 06f0 D3F84431 		ldr	r3, [r3, #324]
 1111 06f4 1A6A     		ldr	r2, [r3, #32]
 1112 06f6 40F20003 		movw	r3, #:lower16:schedule_vars
 1113 06fa C0F20003 		movt	r3, #:upper16:schedule_vars
 1114 06fe C3F84421 		str	r2, [r3, #324]
 465:openstack/02b-MAChigh/schedule.c ****    
 466:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1115              		.loc 1 466 0
 1116 0702 FFF7FEFF 		bl	IntMasterEnable
 467:openstack/02b-MAChigh/schedule.c **** }
 1117              		.loc 1 467 0
 1118 0706 80BD     		pop	{r7, pc}
 1119              		.cfi_endproc
 1120              	.LFE9:
 1122              		.align	2
 1123              		.global	schedule_getNextActiveSlotOffset
 1124              		.thumb
 1125              		.thumb_func
 1127              	schedule_getNextActiveSlotOffset:
 1128              	.LFB10:
 468:openstack/02b-MAChigh/schedule.c **** 
 469:openstack/02b-MAChigh/schedule.c **** /**
 470:openstack/02b-MAChigh/schedule.c **** \brief return slotOffset of next active slot
 471:openstack/02b-MAChigh/schedule.c **** */
 472:openstack/02b-MAChigh/schedule.c **** slotOffset_t schedule_getNextActiveSlotOffset() {
 1129              		.loc 1 472 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 8
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133 0708 80B5     		push	{r7, lr}
 1134              	.LCFI29:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 070a 82B0     		sub	sp, sp, #8
 1139              	.LCFI30:
 1140              		.cfi_def_cfa_offset 16
 1141 070c 00AF     		add	r7, sp, #0
 1142              	.LCFI31:
 1143              		.cfi_def_cfa_register 7
 473:openstack/02b-MAChigh/schedule.c ****    slotOffset_t res;   
 474:openstack/02b-MAChigh/schedule.c ****    
 475:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 476:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1144              		.loc 1 476 0
 1145 070e FFF7FEFF 		bl	IntMasterDisable
 477:openstack/02b-MAChigh/schedule.c ****    
 478:openstack/02b-MAChigh/schedule.c ****    res = ((scheduleEntry_t*)(schedule_vars.currentScheduleEntry->next))->slotOffset;
 1146              		.loc 1 478 0
 1147 0712 40F20003 		movw	r3, #:lower16:schedule_vars
 1148 0716 C0F20003 		movt	r3, #:upper16:schedule_vars
 1149 071a D3F84431 		ldr	r3, [r3, #324]
 1150 071e 1B6A     		ldr	r3, [r3, #32]
 1151 0720 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1152 0722 FB80     		strh	r3, [r7, #6]	@ movhi
 479:openstack/02b-MAChigh/schedule.c ****    
 480:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1153              		.loc 1 480 0
 1154 0724 FFF7FEFF 		bl	IntMasterEnable
 481:openstack/02b-MAChigh/schedule.c ****    
 482:openstack/02b-MAChigh/schedule.c ****    return res;
 1155              		.loc 1 482 0
 1156 0728 FB88     		ldrh	r3, [r7, #6]
 483:openstack/02b-MAChigh/schedule.c **** }
 1157              		.loc 1 483 0
 1158 072a 1846     		mov	r0, r3
 1159 072c 07F10807 		add	r7, r7, #8
 1160 0730 BD46     		mov	sp, r7
 1161 0732 80BD     		pop	{r7, pc}
 1162              		.cfi_endproc
 1163              	.LFE10:
 1165              		.align	2
 1166              		.global	schedule_getFrameLength
 1167              		.thumb
 1168              		.thumb_func
 1170              	schedule_getFrameLength:
 1171              	.LFB11:
 484:openstack/02b-MAChigh/schedule.c **** 
 485:openstack/02b-MAChigh/schedule.c **** /**
 486:openstack/02b-MAChigh/schedule.c **** \brief Get the frame length.
 487:openstack/02b-MAChigh/schedule.c **** 
 488:openstack/02b-MAChigh/schedule.c **** \returns The frame length.
 489:openstack/02b-MAChigh/schedule.c **** */
 490:openstack/02b-MAChigh/schedule.c **** frameLength_t schedule_getFrameLength() {
 1172              		.loc 1 490 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 8
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176 0734 80B5     		push	{r7, lr}
 1177              	.LCFI32:
 1178              		.cfi_def_cfa_offset 8
 1179              		.cfi_offset 7, -8
 1180              		.cfi_offset 14, -4
 1181 0736 82B0     		sub	sp, sp, #8
 1182              	.LCFI33:
 1183              		.cfi_def_cfa_offset 16
 1184 0738 00AF     		add	r7, sp, #0
 1185              	.LCFI34:
 1186              		.cfi_def_cfa_register 7
 491:openstack/02b-MAChigh/schedule.c ****    frameLength_t returnVal;
 492:openstack/02b-MAChigh/schedule.c ****    
 493:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 494:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1187              		.loc 1 494 0
 1188 073a FFF7FEFF 		bl	IntMasterDisable
 495:openstack/02b-MAChigh/schedule.c ****    
 496:openstack/02b-MAChigh/schedule.c ****    returnVal = schedule_vars.frameLength;
 1189              		.loc 1 496 0
 1190 073e 40F20003 		movw	r3, #:lower16:schedule_vars
 1191 0742 C0F20003 		movt	r3, #:upper16:schedule_vars
 1192 0746 B3F84831 		ldrh	r3, [r3, #328]	@ movhi
 1193 074a FB80     		strh	r3, [r7, #6]	@ movhi
 497:openstack/02b-MAChigh/schedule.c ****    
 498:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1194              		.loc 1 498 0
 1195 074c FFF7FEFF 		bl	IntMasterEnable
 499:openstack/02b-MAChigh/schedule.c ****    
 500:openstack/02b-MAChigh/schedule.c ****    return returnVal;
 1196              		.loc 1 500 0
 1197 0750 FB88     		ldrh	r3, [r7, #6]
 501:openstack/02b-MAChigh/schedule.c **** }
 1198              		.loc 1 501 0
 1199 0752 1846     		mov	r0, r3
 1200 0754 07F10807 		add	r7, r7, #8
 1201 0758 BD46     		mov	sp, r7
 1202 075a 80BD     		pop	{r7, pc}
 1203              		.cfi_endproc
 1204              	.LFE11:
 1206              		.align	2
 1207              		.global	schedule_getType
 1208              		.thumb
 1209              		.thumb_func
 1211              	schedule_getType:
 1212              	.LFB12:
 502:openstack/02b-MAChigh/schedule.c **** 
 503:openstack/02b-MAChigh/schedule.c **** /**
 504:openstack/02b-MAChigh/schedule.c **** \brief Get the type of the current schedule entry.
 505:openstack/02b-MAChigh/schedule.c **** 
 506:openstack/02b-MAChigh/schedule.c **** \returns The type of the current schedule entry.
 507:openstack/02b-MAChigh/schedule.c **** */
 508:openstack/02b-MAChigh/schedule.c **** cellType_t schedule_getType() {
 1213              		.loc 1 508 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 8
 1216              		@ frame_needed = 1, uses_anonymous_args = 0
 1217 075c 80B5     		push	{r7, lr}
 1218              	.LCFI35:
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 7, -8
 1221              		.cfi_offset 14, -4
 1222 075e 82B0     		sub	sp, sp, #8
 1223              	.LCFI36:
 1224              		.cfi_def_cfa_offset 16
 1225 0760 00AF     		add	r7, sp, #0
 1226              	.LCFI37:
 1227              		.cfi_def_cfa_register 7
 509:openstack/02b-MAChigh/schedule.c ****    cellType_t returnVal;
 510:openstack/02b-MAChigh/schedule.c ****    
 511:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 512:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1228              		.loc 1 512 0
 1229 0762 FFF7FEFF 		bl	IntMasterDisable
 513:openstack/02b-MAChigh/schedule.c ****    
 514:openstack/02b-MAChigh/schedule.c ****    returnVal = schedule_vars.currentScheduleEntry->type;
 1230              		.loc 1 514 0
 1231 0766 40F20003 		movw	r3, #:lower16:schedule_vars
 1232 076a C0F20003 		movt	r3, #:upper16:schedule_vars
 1233 076e D3F84431 		ldr	r3, [r3, #324]
 1234 0772 9B78     		ldrb	r3, [r3, #2]
 1235 0774 FB71     		strb	r3, [r7, #7]
 515:openstack/02b-MAChigh/schedule.c ****    
 516:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1236              		.loc 1 516 0
 1237 0776 FFF7FEFF 		bl	IntMasterEnable
 517:openstack/02b-MAChigh/schedule.c ****    
 518:openstack/02b-MAChigh/schedule.c ****    return returnVal;
 1238              		.loc 1 518 0
 1239 077a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 519:openstack/02b-MAChigh/schedule.c **** }
 1240              		.loc 1 519 0
 1241 077c 1846     		mov	r0, r3
 1242 077e 07F10807 		add	r7, r7, #8
 1243 0782 BD46     		mov	sp, r7
 1244 0784 80BD     		pop	{r7, pc}
 1245              		.cfi_endproc
 1246              	.LFE12:
 1248 0786 00BF     		.align	2
 1249              		.global	schedule_getNeighbor
 1250              		.thumb
 1251              		.thumb_func
 1253              	schedule_getNeighbor:
 1254              	.LFB13:
 520:openstack/02b-MAChigh/schedule.c **** 
 521:openstack/02b-MAChigh/schedule.c **** /**
 522:openstack/02b-MAChigh/schedule.c **** \brief Get the neighbor associated wit the current schedule entry.
 523:openstack/02b-MAChigh/schedule.c **** 
 524:openstack/02b-MAChigh/schedule.c **** \returns The neighbor associated wit the current schedule entry.
 525:openstack/02b-MAChigh/schedule.c **** */
 526:openstack/02b-MAChigh/schedule.c **** void schedule_getNeighbor(open_addr_t* addrToWrite) {
 1255              		.loc 1 526 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 8
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259 0788 80B5     		push	{r7, lr}
 1260              	.LCFI38:
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 078a 82B0     		sub	sp, sp, #8
 1265              	.LCFI39:
 1266              		.cfi_def_cfa_offset 16
 1267 078c 00AF     		add	r7, sp, #0
 1268              	.LCFI40:
 1269              		.cfi_def_cfa_register 7
 1270 078e 7860     		str	r0, [r7, #4]
 527:openstack/02b-MAChigh/schedule.c ****    
 528:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 529:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1271              		.loc 1 529 0
 1272 0790 FFF7FEFF 		bl	IntMasterDisable
 530:openstack/02b-MAChigh/schedule.c ****    
 531:openstack/02b-MAChigh/schedule.c ****    memcpy(addrToWrite,&(schedule_vars.currentScheduleEntry->neighbor),sizeof(open_addr_t));
 1273              		.loc 1 531 0
 1274 0794 40F20003 		movw	r3, #:lower16:schedule_vars
 1275 0798 C0F20003 		movt	r3, #:upper16:schedule_vars
 1276 079c D3F84431 		ldr	r3, [r3, #324]
 1277 07a0 03F10503 		add	r3, r3, #5
 1278 07a4 7868     		ldr	r0, [r7, #4]
 1279 07a6 1946     		mov	r1, r3
 1280 07a8 4FF01102 		mov	r2, #17
 1281 07ac FFF7FEFF 		bl	memcpy
 532:openstack/02b-MAChigh/schedule.c ****    
 533:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1282              		.loc 1 533 0
 1283 07b0 FFF7FEFF 		bl	IntMasterEnable
 534:openstack/02b-MAChigh/schedule.c **** }
 1284              		.loc 1 534 0
 1285 07b4 07F10807 		add	r7, r7, #8
 1286 07b8 BD46     		mov	sp, r7
 1287 07ba 80BD     		pop	{r7, pc}
 1288              		.cfi_endproc
 1289              	.LFE13:
 1291              		.align	2
 1292              		.global	schedule_getChannelOffset
 1293              		.thumb
 1294              		.thumb_func
 1296              	schedule_getChannelOffset:
 1297              	.LFB14:
 535:openstack/02b-MAChigh/schedule.c **** 
 536:openstack/02b-MAChigh/schedule.c **** /**
 537:openstack/02b-MAChigh/schedule.c **** \brief Get the channel offset of the current schedule entry.
 538:openstack/02b-MAChigh/schedule.c **** 
 539:openstack/02b-MAChigh/schedule.c **** \returns The channel offset of the current schedule entry.
 540:openstack/02b-MAChigh/schedule.c **** */
 541:openstack/02b-MAChigh/schedule.c **** channelOffset_t schedule_getChannelOffset() {
 1298              		.loc 1 541 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 8
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302 07bc 80B5     		push	{r7, lr}
 1303              	.LCFI41:
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 07be 82B0     		sub	sp, sp, #8
 1308              	.LCFI42:
 1309              		.cfi_def_cfa_offset 16
 1310 07c0 00AF     		add	r7, sp, #0
 1311              	.LCFI43:
 1312              		.cfi_def_cfa_register 7
 542:openstack/02b-MAChigh/schedule.c ****    channelOffset_t returnVal;
 543:openstack/02b-MAChigh/schedule.c ****    
 544:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 545:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1313              		.loc 1 545 0
 1314 07c2 FFF7FEFF 		bl	IntMasterDisable
 546:openstack/02b-MAChigh/schedule.c ****    
 547:openstack/02b-MAChigh/schedule.c ****    returnVal = schedule_vars.currentScheduleEntry->channelOffset;
 1315              		.loc 1 547 0
 1316 07c6 40F20003 		movw	r3, #:lower16:schedule_vars
 1317 07ca C0F20003 		movt	r3, #:upper16:schedule_vars
 1318 07ce D3F84431 		ldr	r3, [r3, #324]
 1319 07d2 1B79     		ldrb	r3, [r3, #4]
 1320 07d4 FB71     		strb	r3, [r7, #7]
 548:openstack/02b-MAChigh/schedule.c ****    
 549:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1321              		.loc 1 549 0
 1322 07d6 FFF7FEFF 		bl	IntMasterEnable
 550:openstack/02b-MAChigh/schedule.c ****    
 551:openstack/02b-MAChigh/schedule.c ****    return returnVal;
 1323              		.loc 1 551 0
 1324 07da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 552:openstack/02b-MAChigh/schedule.c **** }
 1325              		.loc 1 552 0
 1326 07dc 1846     		mov	r0, r3
 1327 07de 07F10807 		add	r7, r7, #8
 1328 07e2 BD46     		mov	sp, r7
 1329 07e4 80BD     		pop	{r7, pc}
 1330              		.cfi_endproc
 1331              	.LFE14:
 1333 07e6 00BF     		.align	2
 1334              		.global	schedule_getOkToSend
 1335              		.thumb
 1336              		.thumb_func
 1338              	schedule_getOkToSend:
 1339              	.LFB15:
 553:openstack/02b-MAChigh/schedule.c **** 
 554:openstack/02b-MAChigh/schedule.c **** /**
 555:openstack/02b-MAChigh/schedule.c **** \brief Check whether I can send on this slot.
 556:openstack/02b-MAChigh/schedule.c **** 
 557:openstack/02b-MAChigh/schedule.c **** This function is called at the beginning of every TX slot.
 558:openstack/02b-MAChigh/schedule.c **** If the slot is *not* a shared slot, it always return TRUE.
 559:openstack/02b-MAChigh/schedule.c **** If the slot is a shared slot, it decrements the backoff counter and returns 
 560:openstack/02b-MAChigh/schedule.c **** TRUE only if it hits 0.
 561:openstack/02b-MAChigh/schedule.c **** 
 562:openstack/02b-MAChigh/schedule.c **** Note that the backoff counter is global, not per slot.
 563:openstack/02b-MAChigh/schedule.c **** 
 564:openstack/02b-MAChigh/schedule.c **** \returns TRUE if it is OK to send on this slot, FALSE otherwise.
 565:openstack/02b-MAChigh/schedule.c **** */
 566:openstack/02b-MAChigh/schedule.c **** bool schedule_getOkToSend() {
 1340              		.loc 1 566 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 8
 1343              		@ frame_needed = 1, uses_anonymous_args = 0
 1344 07e8 80B5     		push	{r7, lr}
 1345              	.LCFI44:
 1346              		.cfi_def_cfa_offset 8
 1347              		.cfi_offset 7, -8
 1348              		.cfi_offset 14, -4
 1349 07ea 82B0     		sub	sp, sp, #8
 1350              	.LCFI45:
 1351              		.cfi_def_cfa_offset 16
 1352 07ec 00AF     		add	r7, sp, #0
 1353              	.LCFI46:
 1354              		.cfi_def_cfa_register 7
 567:openstack/02b-MAChigh/schedule.c ****    bool returnVal;
 568:openstack/02b-MAChigh/schedule.c ****    
 569:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 570:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1355              		.loc 1 570 0
 1356 07ee FFF7FEFF 		bl	IntMasterDisable
 571:openstack/02b-MAChigh/schedule.c ****    
 572:openstack/02b-MAChigh/schedule.c ****    if (schedule_vars.currentScheduleEntry->shared==FALSE) {
 1357              		.loc 1 572 0
 1358 07f2 40F20003 		movw	r3, #:lower16:schedule_vars
 1359 07f6 C0F20003 		movt	r3, #:upper16:schedule_vars
 1360 07fa D3F84431 		ldr	r3, [r3, #324]
 1361 07fe DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1362 0800 83F00103 		eor	r3, r3, #1
 1363 0804 DBB2     		uxtb	r3, r3
 1364 0806 002B     		cmp	r3, #0
 1365 0808 03D0     		beq	.L68
 573:openstack/02b-MAChigh/schedule.c ****       // non-shared slot: backoff does not apply
 574:openstack/02b-MAChigh/schedule.c ****       
 575:openstack/02b-MAChigh/schedule.c ****       returnVal = TRUE;
 1366              		.loc 1 575 0
 1367 080a 4FF00103 		mov	r3, #1
 1368 080e FB71     		strb	r3, [r7, #7]
 1369 0810 25E0     		b	.L69
 1370              	.L68:
 576:openstack/02b-MAChigh/schedule.c ****    } else {
 577:openstack/02b-MAChigh/schedule.c ****       // non-shared slot: check backoff before answering
 578:openstack/02b-MAChigh/schedule.c ****       
 579:openstack/02b-MAChigh/schedule.c ****       // decrement backoff
 580:openstack/02b-MAChigh/schedule.c ****       if (schedule_vars.backoff>0) {
 1371              		.loc 1 580 0
 1372 0812 40F20003 		movw	r3, #:lower16:schedule_vars
 1373 0816 C0F20003 		movt	r3, #:upper16:schedule_vars
 1374 081a 93F84B31 		ldrb	r3, [r3, #331]	@ zero_extendqisi2
 1375 081e 002B     		cmp	r3, #0
 1376 0820 0ED0     		beq	.L70
 581:openstack/02b-MAChigh/schedule.c ****          schedule_vars.backoff--;
 1377              		.loc 1 581 0
 1378 0822 40F20003 		movw	r3, #:lower16:schedule_vars
 1379 0826 C0F20003 		movt	r3, #:upper16:schedule_vars
 1380 082a 93F84B31 		ldrb	r3, [r3, #331]	@ zero_extendqisi2
 1381 082e 03F1FF33 		add	r3, r3, #-1
 1382 0832 DAB2     		uxtb	r2, r3
 1383 0834 40F20003 		movw	r3, #:lower16:schedule_vars
 1384 0838 C0F20003 		movt	r3, #:upper16:schedule_vars
 1385 083c 83F84B21 		strb	r2, [r3, #331]
 1386              	.L70:
 582:openstack/02b-MAChigh/schedule.c ****       }
 583:openstack/02b-MAChigh/schedule.c ****       
 584:openstack/02b-MAChigh/schedule.c ****       // only return TRUE if backoff hit 0
 585:openstack/02b-MAChigh/schedule.c ****       if (schedule_vars.backoff==0) {
 1387              		.loc 1 585 0
 1388 0840 40F20003 		movw	r3, #:lower16:schedule_vars
 1389 0844 C0F20003 		movt	r3, #:upper16:schedule_vars
 1390 0848 93F84B31 		ldrb	r3, [r3, #331]	@ zero_extendqisi2
 1391 084c 002B     		cmp	r3, #0
 1392 084e 03D1     		bne	.L71
 586:openstack/02b-MAChigh/schedule.c ****          returnVal = TRUE;
 1393              		.loc 1 586 0
 1394 0850 4FF00103 		mov	r3, #1
 1395 0854 FB71     		strb	r3, [r7, #7]
 1396 0856 02E0     		b	.L69
 1397              	.L71:
 587:openstack/02b-MAChigh/schedule.c ****       } else {
 588:openstack/02b-MAChigh/schedule.c ****          returnVal = FALSE;
 1398              		.loc 1 588 0
 1399 0858 4FF00003 		mov	r3, #0
 1400 085c FB71     		strb	r3, [r7, #7]
 1401              	.L69:
 589:openstack/02b-MAChigh/schedule.c ****       }
 590:openstack/02b-MAChigh/schedule.c ****    }
 591:openstack/02b-MAChigh/schedule.c ****    
 592:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1402              		.loc 1 592 0
 1403 085e FFF7FEFF 		bl	IntMasterEnable
 593:openstack/02b-MAChigh/schedule.c ****    
 594:openstack/02b-MAChigh/schedule.c ****    return returnVal;
 1404              		.loc 1 594 0
 1405 0862 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 595:openstack/02b-MAChigh/schedule.c **** }
 1406              		.loc 1 595 0
 1407 0864 1846     		mov	r0, r3
 1408 0866 07F10807 		add	r7, r7, #8
 1409 086a BD46     		mov	sp, r7
 1410 086c 80BD     		pop	{r7, pc}
 1411              		.cfi_endproc
 1412              	.LFE15:
 1414 086e 00BF     		.align	2
 1415              		.global	schedule_resetBackoff
 1416              		.thumb
 1417              		.thumb_func
 1419              	schedule_resetBackoff:
 1420              	.LFB16:
 596:openstack/02b-MAChigh/schedule.c **** 
 597:openstack/02b-MAChigh/schedule.c **** /**
 598:openstack/02b-MAChigh/schedule.c **** \brief Reset the backoff and backoffExponent.
 599:openstack/02b-MAChigh/schedule.c **** */
 600:openstack/02b-MAChigh/schedule.c **** void schedule_resetBackoff() {
 1421              		.loc 1 600 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 1, uses_anonymous_args = 0
 1425 0870 80B5     		push	{r7, lr}
 1426              	.LCFI47:
 1427              		.cfi_def_cfa_offset 8
 1428              		.cfi_offset 7, -8
 1429              		.cfi_offset 14, -4
 1430 0872 00AF     		add	r7, sp, #0
 1431              	.LCFI48:
 1432              		.cfi_def_cfa_register 7
 601:openstack/02b-MAChigh/schedule.c ****    
 602:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 603:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1433              		.loc 1 603 0
 1434 0874 FFF7FEFF 		bl	IntMasterDisable
 604:openstack/02b-MAChigh/schedule.c ****    
 605:openstack/02b-MAChigh/schedule.c ****    // reset backoffExponent
 606:openstack/02b-MAChigh/schedule.c ****    schedule_vars.backoffExponent = MINBE-1;
 1435              		.loc 1 606 0
 1436 0878 40F20003 		movw	r3, #:lower16:schedule_vars
 1437 087c C0F20003 		movt	r3, #:upper16:schedule_vars
 1438 0880 4FF00102 		mov	r2, #1
 1439 0884 83F84A21 		strb	r2, [r3, #330]
 607:openstack/02b-MAChigh/schedule.c ****    // reset backoff
 608:openstack/02b-MAChigh/schedule.c ****    schedule_vars.backoff         = 0;
 1440              		.loc 1 608 0
 1441 0888 40F20003 		movw	r3, #:lower16:schedule_vars
 1442 088c C0F20003 		movt	r3, #:upper16:schedule_vars
 1443 0890 4FF00002 		mov	r2, #0
 1444 0894 83F84B21 		strb	r2, [r3, #331]
 609:openstack/02b-MAChigh/schedule.c ****    
 610:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1445              		.loc 1 610 0
 1446 0898 FFF7FEFF 		bl	IntMasterEnable
 611:openstack/02b-MAChigh/schedule.c **** }
 1447              		.loc 1 611 0
 1448 089c 80BD     		pop	{r7, pc}
 1449              		.cfi_endproc
 1450              	.LFE16:
 1452 089e 00BF     		.align	2
 1453              		.global	schedule_indicateRx
 1454              		.thumb
 1455              		.thumb_func
 1457              	schedule_indicateRx:
 1458              	.LFB17:
 612:openstack/02b-MAChigh/schedule.c **** 
 613:openstack/02b-MAChigh/schedule.c **** /**
 614:openstack/02b-MAChigh/schedule.c **** \brief Indicate the reception of a packet.
 615:openstack/02b-MAChigh/schedule.c **** */
 616:openstack/02b-MAChigh/schedule.c **** void schedule_indicateRx(asn_t* asnTimestamp) {
 1459              		.loc 1 616 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 8
 1462              		@ frame_needed = 1, uses_anonymous_args = 0
 1463 08a0 80B5     		push	{r7, lr}
 1464              	.LCFI49:
 1465              		.cfi_def_cfa_offset 8
 1466              		.cfi_offset 7, -8
 1467              		.cfi_offset 14, -4
 1468 08a2 82B0     		sub	sp, sp, #8
 1469              	.LCFI50:
 1470              		.cfi_def_cfa_offset 16
 1471 08a4 00AF     		add	r7, sp, #0
 1472              	.LCFI51:
 1473              		.cfi_def_cfa_register 7
 1474 08a6 7860     		str	r0, [r7, #4]
 617:openstack/02b-MAChigh/schedule.c ****    
 618:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 619:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1475              		.loc 1 619 0
 1476 08a8 FFF7FEFF 		bl	IntMasterDisable
 620:openstack/02b-MAChigh/schedule.c ****    
 621:openstack/02b-MAChigh/schedule.c ****    // increment usage statistics
 622:openstack/02b-MAChigh/schedule.c ****    schedule_vars.currentScheduleEntry->numRx++;
 1477              		.loc 1 622 0
 1478 08ac 40F20003 		movw	r3, #:lower16:schedule_vars
 1479 08b0 C0F20003 		movt	r3, #:upper16:schedule_vars
 1480 08b4 D3F84431 		ldr	r3, [r3, #324]
 1481 08b8 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 1482 08ba 02F10102 		add	r2, r2, #1
 1483 08be D2B2     		uxtb	r2, r2
 1484 08c0 9A75     		strb	r2, [r3, #22]
 623:openstack/02b-MAChigh/schedule.c **** 
 624:openstack/02b-MAChigh/schedule.c ****    // update last used timestamp
 625:openstack/02b-MAChigh/schedule.c ****    memcpy(&(schedule_vars.currentScheduleEntry->lastUsedAsn), asnTimestamp, sizeof(asn_t));
 1485              		.loc 1 625 0
 1486 08c2 40F20003 		movw	r3, #:lower16:schedule_vars
 1487 08c6 C0F20003 		movt	r3, #:upper16:schedule_vars
 1488 08ca D3F84431 		ldr	r3, [r3, #324]
 1489 08ce 03F11903 		add	r3, r3, #25
 1490 08d2 1846     		mov	r0, r3
 1491 08d4 7968     		ldr	r1, [r7, #4]
 1492 08d6 4FF00502 		mov	r2, #5
 1493 08da FFF7FEFF 		bl	memcpy
 626:openstack/02b-MAChigh/schedule.c ****    
 627:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1494              		.loc 1 627 0
 1495 08de FFF7FEFF 		bl	IntMasterEnable
 628:openstack/02b-MAChigh/schedule.c **** }
 1496              		.loc 1 628 0
 1497 08e2 07F10807 		add	r7, r7, #8
 1498 08e6 BD46     		mov	sp, r7
 1499 08e8 80BD     		pop	{r7, pc}
 1500              		.cfi_endproc
 1501              	.LFE17:
 1503 08ea 00BF     		.align	2
 1504              		.global	schedule_indicateTx
 1505              		.thumb
 1506              		.thumb_func
 1508              	schedule_indicateTx:
 1509              	.LFB18:
 629:openstack/02b-MAChigh/schedule.c **** 
 630:openstack/02b-MAChigh/schedule.c **** /**
 631:openstack/02b-MAChigh/schedule.c **** \brief Indicate the transmission of a packet.
 632:openstack/02b-MAChigh/schedule.c **** */
 633:openstack/02b-MAChigh/schedule.c **** void schedule_indicateTx(asn_t* asnTimestamp, bool succesfullTx) {
 1510              		.loc 1 633 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 8
 1513              		@ frame_needed = 1, uses_anonymous_args = 0
 1514 08ec 80B5     		push	{r7, lr}
 1515              	.LCFI52:
 1516              		.cfi_def_cfa_offset 8
 1517              		.cfi_offset 7, -8
 1518              		.cfi_offset 14, -4
 1519 08ee 82B0     		sub	sp, sp, #8
 1520              	.LCFI53:
 1521              		.cfi_def_cfa_offset 16
 1522 08f0 00AF     		add	r7, sp, #0
 1523              	.LCFI54:
 1524              		.cfi_def_cfa_register 7
 1525 08f2 7860     		str	r0, [r7, #4]
 1526 08f4 0B46     		mov	r3, r1
 1527 08f6 FB70     		strb	r3, [r7, #3]
 634:openstack/02b-MAChigh/schedule.c ****    
 635:openstack/02b-MAChigh/schedule.c ****    INTERRUPT_DECLARATION();
 636:openstack/02b-MAChigh/schedule.c ****    DISABLE_INTERRUPTS();
 1528              		.loc 1 636 0
 1529 08f8 FFF7FEFF 		bl	IntMasterDisable
 637:openstack/02b-MAChigh/schedule.c ****    
 638:openstack/02b-MAChigh/schedule.c ****    // increment usage statistics
 639:openstack/02b-MAChigh/schedule.c ****    if (schedule_vars.currentScheduleEntry->numTx==0xFF) {
 1530              		.loc 1 639 0
 1531 08fc 40F20003 		movw	r3, #:lower16:schedule_vars
 1532 0900 C0F20003 		movt	r3, #:upper16:schedule_vars
 1533 0904 D3F84431 		ldr	r3, [r3, #324]
 1534 0908 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 1535 090a FF2B     		cmp	r3, #255
 1536 090c 21D1     		bne	.L76
 640:openstack/02b-MAChigh/schedule.c ****       schedule_vars.currentScheduleEntry->numTx/=2;
 1537              		.loc 1 640 0
 1538 090e 40F20003 		movw	r3, #:lower16:schedule_vars
 1539 0912 C0F20003 		movt	r3, #:upper16:schedule_vars
 1540 0916 D3F84421 		ldr	r2, [r3, #324]
 1541 091a 40F20003 		movw	r3, #:lower16:schedule_vars
 1542 091e C0F20003 		movt	r3, #:upper16:schedule_vars
 1543 0922 D3F84431 		ldr	r3, [r3, #324]
 1544 0926 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 1545 0928 4FEA5303 		lsr	r3, r3, #1
 1546 092c DBB2     		uxtb	r3, r3
 1547 092e D375     		strb	r3, [r2, #23]
 641:openstack/02b-MAChigh/schedule.c ****       schedule_vars.currentScheduleEntry->numTxACK/=2;
 1548              		.loc 1 641 0
 1549 0930 40F20003 		movw	r3, #:lower16:schedule_vars
 1550 0934 C0F20003 		movt	r3, #:upper16:schedule_vars
 1551 0938 D3F84421 		ldr	r2, [r3, #324]
 1552 093c 40F20003 		movw	r3, #:lower16:schedule_vars
 1553 0940 C0F20003 		movt	r3, #:upper16:schedule_vars
 1554 0944 D3F84431 		ldr	r3, [r3, #324]
 1555 0948 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1556 094a 4FEA5303 		lsr	r3, r3, #1
 1557 094e DBB2     		uxtb	r3, r3
 1558 0950 1376     		strb	r3, [r2, #24]
 1559              	.L76:
 642:openstack/02b-MAChigh/schedule.c ****    }
 643:openstack/02b-MAChigh/schedule.c ****    schedule_vars.currentScheduleEntry->numTx++;
 1560              		.loc 1 643 0
 1561 0952 40F20003 		movw	r3, #:lower16:schedule_vars
 1562 0956 C0F20003 		movt	r3, #:upper16:schedule_vars
 1563 095a D3F84431 		ldr	r3, [r3, #324]
 1564 095e DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 1565 0960 02F10102 		add	r2, r2, #1
 1566 0964 D2B2     		uxtb	r2, r2
 1567 0966 DA75     		strb	r2, [r3, #23]
 644:openstack/02b-MAChigh/schedule.c ****    if (succesfullTx==TRUE) {
 1568              		.loc 1 644 0
 1569 0968 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1570 096a 002B     		cmp	r3, #0
 1571 096c 0AD0     		beq	.L77
 645:openstack/02b-MAChigh/schedule.c ****       schedule_vars.currentScheduleEntry->numTxACK++;
 1572              		.loc 1 645 0
 1573 096e 40F20003 		movw	r3, #:lower16:schedule_vars
 1574 0972 C0F20003 		movt	r3, #:upper16:schedule_vars
 1575 0976 D3F84431 		ldr	r3, [r3, #324]
 1576 097a 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 1577 097c 02F10102 		add	r2, r2, #1
 1578 0980 D2B2     		uxtb	r2, r2
 1579 0982 1A76     		strb	r2, [r3, #24]
 1580              	.L77:
 646:openstack/02b-MAChigh/schedule.c ****    }
 647:openstack/02b-MAChigh/schedule.c **** 
 648:openstack/02b-MAChigh/schedule.c ****    // update last used timestamp
 649:openstack/02b-MAChigh/schedule.c ****    memcpy(&schedule_vars.currentScheduleEntry->lastUsedAsn, asnTimestamp, sizeof(asn_t));
 1581              		.loc 1 649 0
 1582 0984 40F20003 		movw	r3, #:lower16:schedule_vars
 1583 0988 C0F20003 		movt	r3, #:upper16:schedule_vars
 1584 098c D3F84431 		ldr	r3, [r3, #324]
 1585 0990 03F11903 		add	r3, r3, #25
 1586 0994 1846     		mov	r0, r3
 1587 0996 7968     		ldr	r1, [r7, #4]
 1588 0998 4FF00502 		mov	r2, #5
 1589 099c FFF7FEFF 		bl	memcpy
 650:openstack/02b-MAChigh/schedule.c **** 
 651:openstack/02b-MAChigh/schedule.c ****    // update this backoff parameters for shared slots
 652:openstack/02b-MAChigh/schedule.c ****    if (schedule_vars.currentScheduleEntry->shared==TRUE) {
 1590              		.loc 1 652 0
 1591 09a0 40F20003 		movw	r3, #:lower16:schedule_vars
 1592 09a4 C0F20003 		movt	r3, #:upper16:schedule_vars
 1593 09a8 D3F84431 		ldr	r3, [r3, #324]
 1594 09ac DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1595 09ae 002B     		cmp	r3, #0
 1596 09b0 46D0     		beq	.L78
 653:openstack/02b-MAChigh/schedule.c ****       if (succesfullTx==TRUE) {
 1597              		.loc 1 653 0
 1598 09b2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1599 09b4 002B     		cmp	r3, #0
 1600 09b6 10D0     		beq	.L79
 654:openstack/02b-MAChigh/schedule.c ****          // reset backoffExponent
 655:openstack/02b-MAChigh/schedule.c ****          schedule_vars.backoffExponent = MINBE-1;
 1601              		.loc 1 655 0
 1602 09b8 40F20003 		movw	r3, #:lower16:schedule_vars
 1603 09bc C0F20003 		movt	r3, #:upper16:schedule_vars
 1604 09c0 4FF00102 		mov	r2, #1
 1605 09c4 83F84A21 		strb	r2, [r3, #330]
 656:openstack/02b-MAChigh/schedule.c ****          // reset backoff
 657:openstack/02b-MAChigh/schedule.c ****          schedule_vars.backoff         = 0;
 1606              		.loc 1 657 0
 1607 09c8 40F20003 		movw	r3, #:lower16:schedule_vars
 1608 09cc C0F20003 		movt	r3, #:upper16:schedule_vars
 1609 09d0 4FF00002 		mov	r2, #0
 1610 09d4 83F84B21 		strb	r2, [r3, #331]
 1611 09d8 32E0     		b	.L78
 1612              	.L79:
 658:openstack/02b-MAChigh/schedule.c ****       } else {
 659:openstack/02b-MAChigh/schedule.c ****          // increase the backoffExponent
 660:openstack/02b-MAChigh/schedule.c ****          if (schedule_vars.backoffExponent<MAXBE) {
 1613              		.loc 1 660 0
 1614 09da 40F20003 		movw	r3, #:lower16:schedule_vars
 1615 09de C0F20003 		movt	r3, #:upper16:schedule_vars
 1616 09e2 93F84A31 		ldrb	r3, [r3, #330]	@ zero_extendqisi2
 1617 09e6 032B     		cmp	r3, #3
 1618 09e8 0ED8     		bhi	.L80
 661:openstack/02b-MAChigh/schedule.c ****             schedule_vars.backoffExponent++;
 1619              		.loc 1 661 0
 1620 09ea 40F20003 		movw	r3, #:lower16:schedule_vars
 1621 09ee C0F20003 		movt	r3, #:upper16:schedule_vars
 1622 09f2 93F84A31 		ldrb	r3, [r3, #330]	@ zero_extendqisi2
 1623 09f6 03F10103 		add	r3, r3, #1
 1624 09fa DAB2     		uxtb	r2, r3
 1625 09fc 40F20003 		movw	r3, #:lower16:schedule_vars
 1626 0a00 C0F20003 		movt	r3, #:upper16:schedule_vars
 1627 0a04 83F84A21 		strb	r2, [r3, #330]
 1628              	.L80:
 662:openstack/02b-MAChigh/schedule.c ****          }
 663:openstack/02b-MAChigh/schedule.c ****          // set the backoff to a random value in [0..2^BE]
 664:openstack/02b-MAChigh/schedule.c ****          schedule_vars.backoff         = openrandom_get16b()%(1<<schedule_vars.backoffExponent);
 1629              		.loc 1 664 0
 1630 0a08 FFF7FEFF 		bl	openrandom_get16b
 1631 0a0c 0346     		mov	r3, r0
 1632 0a0e DAB2     		uxtb	r2, r3
 1633 0a10 40F20003 		movw	r3, #:lower16:schedule_vars
 1634 0a14 C0F20003 		movt	r3, #:upper16:schedule_vars
 1635 0a18 93F84A31 		ldrb	r3, [r3, #330]	@ zero_extendqisi2
 1636 0a1c 4FF00101 		mov	r1, #1
 1637 0a20 01FA03F3 		lsl	r3, r1, r3
 1638 0a24 DBB2     		uxtb	r3, r3
 1639 0a26 03F1FF33 		add	r3, r3, #-1
 1640 0a2a DBB2     		uxtb	r3, r3
 1641 0a2c DBB2     		uxtb	r3, r3
 1642 0a2e 1340     		ands	r3, r3, r2
 1643 0a30 DBB2     		uxtb	r3, r3
 1644 0a32 DAB2     		uxtb	r2, r3
 1645 0a34 40F20003 		movw	r3, #:lower16:schedule_vars
 1646 0a38 C0F20003 		movt	r3, #:upper16:schedule_vars
 1647 0a3c 83F84B21 		strb	r2, [r3, #331]
 1648              	.L78:
 665:openstack/02b-MAChigh/schedule.c ****       }
 666:openstack/02b-MAChigh/schedule.c ****    }
 667:openstack/02b-MAChigh/schedule.c ****    
 668:openstack/02b-MAChigh/schedule.c ****    ENABLE_INTERRUPTS();
 1649              		.loc 1 668 0
 1650 0a40 FFF7FEFF 		bl	IntMasterEnable
 669:openstack/02b-MAChigh/schedule.c **** }
 1651              		.loc 1 669 0
 1652 0a44 07F10807 		add	r7, r7, #8
 1653 0a48 BD46     		mov	sp, r7
 1654 0a4a 80BD     		pop	{r7, pc}
 1655              		.cfi_endproc
 1656              	.LFE18:
 1658              		.align	2
 1659              		.global	schedule_resetEntry
 1660              		.thumb
 1661              		.thumb_func
 1663              	schedule_resetEntry:
 1664              	.LFB19:
 670:openstack/02b-MAChigh/schedule.c **** 
 671:openstack/02b-MAChigh/schedule.c **** //=========================== private =========================================
 672:openstack/02b-MAChigh/schedule.c **** 
 673:openstack/02b-MAChigh/schedule.c **** /**
 674:openstack/02b-MAChigh/schedule.c **** \pre This function assumes interrupts are already disabled.
 675:openstack/02b-MAChigh/schedule.c **** */
 676:openstack/02b-MAChigh/schedule.c **** void schedule_resetEntry(scheduleEntry_t* e) {
 1665              		.loc 1 676 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 8
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669 0a4c 80B5     		push	{r7, lr}
 1670              	.LCFI55:
 1671              		.cfi_def_cfa_offset 8
 1672              		.cfi_offset 7, -8
 1673              		.cfi_offset 14, -4
 1674 0a4e 82B0     		sub	sp, sp, #8
 1675              	.LCFI56:
 1676              		.cfi_def_cfa_offset 16
 1677 0a50 00AF     		add	r7, sp, #0
 1678              	.LCFI57:
 1679              		.cfi_def_cfa_register 7
 1680 0a52 7860     		str	r0, [r7, #4]
 677:openstack/02b-MAChigh/schedule.c ****    e->slotOffset             = 0;
 1681              		.loc 1 677 0
 1682 0a54 7B68     		ldr	r3, [r7, #4]
 1683 0a56 4FF00002 		mov	r2, #0
 1684 0a5a 1A80     		strh	r2, [r3, #0]	@ movhi
 678:openstack/02b-MAChigh/schedule.c ****    e->type                   = CELLTYPE_OFF;
 1685              		.loc 1 678 0
 1686 0a5c 7B68     		ldr	r3, [r7, #4]
 1687 0a5e 4FF00002 		mov	r2, #0
 1688 0a62 9A70     		strb	r2, [r3, #2]
 679:openstack/02b-MAChigh/schedule.c ****    e->shared                 = FALSE;
 1689              		.loc 1 679 0
 1690 0a64 7B68     		ldr	r3, [r7, #4]
 1691 0a66 4FF00002 		mov	r2, #0
 1692 0a6a DA70     		strb	r2, [r3, #3]
 680:openstack/02b-MAChigh/schedule.c ****    e->channelOffset          = 0;
 1693              		.loc 1 680 0
 1694 0a6c 7B68     		ldr	r3, [r7, #4]
 1695 0a6e 4FF00002 		mov	r2, #0
 1696 0a72 1A71     		strb	r2, [r3, #4]
 681:openstack/02b-MAChigh/schedule.c **** 
 682:openstack/02b-MAChigh/schedule.c ****    e->neighbor.type          = ADDR_NONE;
 1697              		.loc 1 682 0
 1698 0a74 7B68     		ldr	r3, [r7, #4]
 1699 0a76 4FF00002 		mov	r2, #0
 1700 0a7a 5A71     		strb	r2, [r3, #5]
 683:openstack/02b-MAChigh/schedule.c ****    memset(&e->neighbor.addr_64b[0], 0x00, sizeof(e->neighbor.addr_64b));
 1701              		.loc 1 683 0
 1702 0a7c 7B68     		ldr	r3, [r7, #4]
 1703 0a7e 03F10603 		add	r3, r3, #6
 1704 0a82 1846     		mov	r0, r3
 1705 0a84 4FF00001 		mov	r1, #0
 1706 0a88 4FF00802 		mov	r2, #8
 1707 0a8c FFF7FEFF 		bl	memset
 684:openstack/02b-MAChigh/schedule.c **** 
 685:openstack/02b-MAChigh/schedule.c ****    e->numRx                  = 0;
 1708              		.loc 1 685 0
 1709 0a90 7B68     		ldr	r3, [r7, #4]
 1710 0a92 4FF00002 		mov	r2, #0
 1711 0a96 9A75     		strb	r2, [r3, #22]
 686:openstack/02b-MAChigh/schedule.c ****    e->numTx                  = 0;
 1712              		.loc 1 686 0
 1713 0a98 7B68     		ldr	r3, [r7, #4]
 1714 0a9a 4FF00002 		mov	r2, #0
 1715 0a9e DA75     		strb	r2, [r3, #23]
 687:openstack/02b-MAChigh/schedule.c ****    e->numTxACK               = 0;
 1716              		.loc 1 687 0
 1717 0aa0 7B68     		ldr	r3, [r7, #4]
 1718 0aa2 4FF00002 		mov	r2, #0
 1719 0aa6 1A76     		strb	r2, [r3, #24]
 688:openstack/02b-MAChigh/schedule.c ****    e->lastUsedAsn.bytes0and1 = 0;
 1720              		.loc 1 688 0
 1721 0aa8 7B68     		ldr	r3, [r7, #4]
 1722 0aaa 4FF00002 		mov	r2, #0
 1723 0aae 9A83     		strh	r2, [r3, #28]	@ movhi
 689:openstack/02b-MAChigh/schedule.c ****    e->lastUsedAsn.bytes2and3 = 0;
 1724              		.loc 1 689 0
 1725 0ab0 7B68     		ldr	r3, [r7, #4]
 1726 0ab2 4FF00002 		mov	r2, #0
 1727 0ab6 5A83     		strh	r2, [r3, #26]	@ movhi
 690:openstack/02b-MAChigh/schedule.c ****    e->lastUsedAsn.byte4      = 0;
 1728              		.loc 1 690 0
 1729 0ab8 7B68     		ldr	r3, [r7, #4]
 1730 0aba 4FF00002 		mov	r2, #0
 1731 0abe 5A76     		strb	r2, [r3, #25]
 691:openstack/02b-MAChigh/schedule.c ****    e->next                   = NULL;
 1732              		.loc 1 691 0
 1733 0ac0 7B68     		ldr	r3, [r7, #4]
 1734 0ac2 4FF00002 		mov	r2, #0
 1735 0ac6 1A62     		str	r2, [r3, #32]
 692:openstack/02b-MAChigh/schedule.c **** }
 1736              		.loc 1 692 0
 1737 0ac8 07F10807 		add	r7, r7, #8
 1738 0acc BD46     		mov	sp, r7
 1739 0ace 80BD     		pop	{r7, pc}
 1740              		.cfi_endproc
 1741              	.LFE19:
 1743              	.Letext0:
 1744              		.file 2 "/opt/gcc-arm-none-eabi-4_7-2013q3/bin/../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none
 1745              		.file 3 "inc/opendefs.h"
 1746              		.file 4 "openstack/02b-MAChigh/schedule.h"
 1747              		.file 5 "bsp/boards/OpenMote-CC2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:00000000 schedule.c
     /tmp/ccmz5ibX.s:19     .rodata:00000000 $d
     /tmp/ccmz5ibX.s:22     .rodata:00000000 rreg_uriquery
     /tmp/ccmz5ibX.s:27     .rodata:00000008 infoBoardname
     /tmp/ccmz5ibX.s:32     .rodata:00000010 infouCName
     /tmp/ccmz5ibX.s:37     .rodata:00000018 infoRadioName
     /tmp/ccmz5ibX.s:42     .rodata:00000024 infoStackName
                            *COM*:00000150 schedule_vars
     /tmp/ccmz5ibX.s:46     .text:00000000 $t
     /tmp/ccmz5ibX.s:51     .text:00000000 schedule_init
     /tmp/ccmz5ibX.s:1663   .text:00000a4c schedule_resetEntry
     /tmp/ccmz5ibX.s:471    .text:00000374 schedule_setFrameLength
     /tmp/ccmz5ibX.s:611    .text:00000424 schedule_addActiveSlot
     /tmp/ccmz5ibX.s:202    .text:00000120 debugPrint_schedule
     /tmp/ccmz5ibX.s:422    .text:00000330 debugPrint_backoff
     /tmp/ccmz5ibX.s:511    .text:0000039c schedule_getSlotInfo
     /tmp/ccmz5ibX.s:602    .text:00000420 $d
     /tmp/ccmz5ibX.s:606    .text:00000424 $t
     /tmp/ccmz5ibX.s:804    .text:00000550 $d
     /tmp/ccmz5ibX.s:808    .text:00000554 $t
     /tmp/ccmz5ibX.s:813    .text:00000554 schedule_removeActiveSlot
     /tmp/ccmz5ibX.s:967    .text:00000650 $d
     /tmp/ccmz5ibX.s:971    .text:00000654 $t
     /tmp/ccmz5ibX.s:976    .text:00000654 schedule_isSlotOffsetAvailable
     /tmp/ccmz5ibX.s:1042   .text:000006ac schedule_syncSlotOffset
     /tmp/ccmz5ibX.s:1091   .text:000006e0 schedule_advanceSlot
     /tmp/ccmz5ibX.s:1127   .text:00000708 schedule_getNextActiveSlotOffset
     /tmp/ccmz5ibX.s:1170   .text:00000734 schedule_getFrameLength
     /tmp/ccmz5ibX.s:1211   .text:0000075c schedule_getType
     /tmp/ccmz5ibX.s:1253   .text:00000788 schedule_getNeighbor
     /tmp/ccmz5ibX.s:1296   .text:000007bc schedule_getChannelOffset
     /tmp/ccmz5ibX.s:1338   .text:000007e8 schedule_getOkToSend
     /tmp/ccmz5ibX.s:1419   .text:00000870 schedule_resetBackoff
     /tmp/ccmz5ibX.s:1457   .text:000008a0 schedule_indicateRx
     /tmp/ccmz5ibX.s:1508   .text:000008ec schedule_indicateTx
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e96eee74da26538b12ac9582e3798382
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.toolchain_defs.h.2.e4ebbe6e0a48032a9b79077dc42e1ffd
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.21.2f0cbb5ab4c556c54c487f727dca8532
                           .group:00000000 wm4.opendefs.h.19.05852eb648ac65e48c7817e5cbf03346
                           .group:00000000 wm4.schedule.h.2.74f699399ee9cbf3b59178f1204d8511
                           .group:00000000 wm4.openserial.h.8.8c63e3800d2936b44b5370ce1aae62b7
                           .group:00000000 wm4.opentimers.h.8.044f2d040a134cdb0ddb58adfc2508be

UNDEFINED SYMBOLS
memset
openserial_printStatus
IntMasterDisable
IntMasterEnable
packetfunctions_sameAddress
openserial_printCritical
memcpy
openrandom_get16b
