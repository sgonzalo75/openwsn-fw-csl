   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"neighbors.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44 002d 000000   		.align	2
  47              	all_routers_multicast:
  48 0030 FF       		.byte	-1
  49 0031 02       		.byte	2
  50 0032 00       		.byte	0
  51 0033 00       		.byte	0
  52 0034 00       		.byte	0
  53 0035 00       		.byte	0
  54 0036 00       		.byte	0
  55 0037 00       		.byte	0
  56 0038 00       		.byte	0
  57 0039 00       		.byte	0
  58 003a 00       		.byte	0
  59 003b 00       		.byte	0
  60 003c 00       		.byte	0
  61 003d 00       		.byte	0
  62 003e 00       		.byte	0
  63 003f 02       		.byte	2
  64              		.comm	neighbors_vars,348,4
  65              		.text
  66              		.align	2
  67              		.global	neighbors_init
  68              		.thumb
  69              		.thumb_func
  71              	neighbors_init:
  72              	.LFB0:
  73              		.file 1 "openstack/02b-MAChigh/neighbors.c"
   1:openstack/02b-MAChigh/neighbors.c **** #include "opendefs.h"
   2:openstack/02b-MAChigh/neighbors.c **** #include "neighbors.h"
   3:openstack/02b-MAChigh/neighbors.c **** 
   4:openstack/02b-MAChigh/neighbors.c **** #include "../02a-MAClow/IEEE802154Ecsl.h"
   5:openstack/02b-MAChigh/neighbors.c **** #include "openqueue.h"
   6:openstack/02b-MAChigh/neighbors.c **** #include "packetfunctions.h"
   7:openstack/02b-MAChigh/neighbors.c **** #include "idmanager.h"
   8:openstack/02b-MAChigh/neighbors.c **** #include "openserial.h"
   9:openstack/02b-MAChigh/neighbors.c **** 
  10:openstack/02b-MAChigh/neighbors.c **** //=========================== variables =======================================
  11:openstack/02b-MAChigh/neighbors.c **** 
  12:openstack/02b-MAChigh/neighbors.c **** neighbors_vars_t neighbors_vars;
  13:openstack/02b-MAChigh/neighbors.c **** 
  14:openstack/02b-MAChigh/neighbors.c **** //=========================== prototypes ======================================
  15:openstack/02b-MAChigh/neighbors.c **** 
  16:openstack/02b-MAChigh/neighbors.c **** void registerNewNeighbor(
  17:openstack/02b-MAChigh/neighbors.c ****         open_addr_t* neighborID,
  18:openstack/02b-MAChigh/neighbors.c ****         int8_t       rssi,
  19:openstack/02b-MAChigh/neighbors.c ****         asn_t*       asnTimestamp,
  20:openstack/02b-MAChigh/neighbors.c ****         bool         joinPrioPresent,
  21:openstack/02b-MAChigh/neighbors.c ****         uint8_t      joinPrio
  22:openstack/02b-MAChigh/neighbors.c ****      );
  23:openstack/02b-MAChigh/neighbors.c **** bool isNeighbor(open_addr_t* neighbor);
  24:openstack/02b-MAChigh/neighbors.c **** void removeNeighbor(uint8_t neighborIndex);
  25:openstack/02b-MAChigh/neighbors.c **** bool isThisRowMatching(
  26:openstack/02b-MAChigh/neighbors.c ****         open_addr_t* address,
  27:openstack/02b-MAChigh/neighbors.c ****         uint8_t      rowNumber
  28:openstack/02b-MAChigh/neighbors.c ****      );
  29:openstack/02b-MAChigh/neighbors.c **** 
  30:openstack/02b-MAChigh/neighbors.c **** //=========================== public ==========================================
  31:openstack/02b-MAChigh/neighbors.c **** 
  32:openstack/02b-MAChigh/neighbors.c **** /**
  33:openstack/02b-MAChigh/neighbors.c **** \brief Initializes this module.
  34:openstack/02b-MAChigh/neighbors.c **** */
  35:openstack/02b-MAChigh/neighbors.c **** void neighbors_init() {
  74              		.loc 1 35 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              	.LCFI1:
  85              		.cfi_def_cfa_register 7
  36:openstack/02b-MAChigh/neighbors.c ****    
  37:openstack/02b-MAChigh/neighbors.c ****    // clear module variables
  38:openstack/02b-MAChigh/neighbors.c ****    memset(&neighbors_vars,0,sizeof(neighbors_vars_t));
  86              		.loc 1 38 0
  87 0004 40F20000 		movw	r0, #:lower16:neighbors_vars
  88 0008 C0F20000 		movt	r0, #:upper16:neighbors_vars
  89 000c 4FF00001 		mov	r1, #0
  90 0010 4FF4AE72 		mov	r2, #348
  91 0014 FFF7FEFF 		bl	memset
  39:openstack/02b-MAChigh/neighbors.c ****    
  40:openstack/02b-MAChigh/neighbors.c ****    // set myDAGrank
  41:openstack/02b-MAChigh/neighbors.c ****    if (idmanager_getIsDAGroot()==TRUE) {
  92              		.loc 1 41 0
  93 0018 FFF7FEFF 		bl	idmanager_getIsDAGroot
  94 001c 0346     		mov	r3, r0
  95 001e 002B     		cmp	r3, #0
  96 0020 08D0     		beq	.L2
  42:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.myDAGrank=0;
  97              		.loc 1 42 0
  98 0022 40F20003 		movw	r3, #:lower16:neighbors_vars
  99 0026 C0F20003 		movt	r3, #:upper16:neighbors_vars
 100 002a 4FF00002 		mov	r2, #0
 101 002e A3F85421 		strh	r2, [r3, #340]	@ movhi
 102 0032 07E0     		b	.L1
 103              	.L2:
  43:openstack/02b-MAChigh/neighbors.c ****    } else {
  44:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.myDAGrank=DEFAULTDAGRANK;
 104              		.loc 1 44 0
 105 0034 40F20003 		movw	r3, #:lower16:neighbors_vars
 106 0038 C0F20003 		movt	r3, #:upper16:neighbors_vars
 107 003c 4FF6FF72 		movw	r2, #65535
 108 0040 A3F85421 		strh	r2, [r3, #340]	@ movhi
 109              	.L1:
  45:openstack/02b-MAChigh/neighbors.c ****    }
  46:openstack/02b-MAChigh/neighbors.c **** }
 110              		.loc 1 46 0
 111 0044 80BD     		pop	{r7, pc}
 112              		.cfi_endproc
 113              	.LFE0:
 115 0046 00BF     		.align	2
 116              		.global	neighbors_getMyDAGrank
 117              		.thumb
 118              		.thumb_func
 120              	neighbors_getMyDAGrank:
 121              	.LFB1:
  47:openstack/02b-MAChigh/neighbors.c **** 
  48:openstack/02b-MAChigh/neighbors.c **** //===== getters
  49:openstack/02b-MAChigh/neighbors.c **** 
  50:openstack/02b-MAChigh/neighbors.c **** /**
  51:openstack/02b-MAChigh/neighbors.c **** \brief Retrieve this mote's current DAG rank.
  52:openstack/02b-MAChigh/neighbors.c **** 
  53:openstack/02b-MAChigh/neighbors.c **** \returns This mote's current DAG rank.
  54:openstack/02b-MAChigh/neighbors.c **** */
  55:openstack/02b-MAChigh/neighbors.c **** dagrank_t neighbors_getMyDAGrank() {
 122              		.loc 1 55 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127 0048 80B4     		push	{r7}
 128              	.LCFI2:
 129              		.cfi_def_cfa_offset 4
 130              		.cfi_offset 7, -4
 131 004a 00AF     		add	r7, sp, #0
 132              	.LCFI3:
 133              		.cfi_def_cfa_register 7
  56:openstack/02b-MAChigh/neighbors.c ****    return neighbors_vars.myDAGrank;
 134              		.loc 1 56 0
 135 004c 40F20003 		movw	r3, #:lower16:neighbors_vars
 136 0050 C0F20003 		movt	r3, #:upper16:neighbors_vars
 137 0054 B3F85431 		ldrh	r3, [r3, #340]
  57:openstack/02b-MAChigh/neighbors.c **** }
 138              		.loc 1 57 0
 139 0058 1846     		mov	r0, r3
 140 005a BD46     		mov	sp, r7
 141 005c 80BC     		pop	{r7}
 142 005e 7047     		bx	lr
 143              		.cfi_endproc
 144              	.LFE1:
 146              		.align	2
 147              		.global	neighbors_getNumNeighbors
 148              		.thumb
 149              		.thumb_func
 151              	neighbors_getNumNeighbors:
 152              	.LFB2:
  58:openstack/02b-MAChigh/neighbors.c **** 
  59:openstack/02b-MAChigh/neighbors.c **** /**
  60:openstack/02b-MAChigh/neighbors.c **** \brief Retrieve the number of neighbors this mote's currently knows of.
  61:openstack/02b-MAChigh/neighbors.c **** 
  62:openstack/02b-MAChigh/neighbors.c **** \returns The number of neighbors this mote's currently knows of.
  63:openstack/02b-MAChigh/neighbors.c **** */
  64:openstack/02b-MAChigh/neighbors.c **** uint8_t neighbors_getNumNeighbors() {
 153              		.loc 1 64 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0060 80B4     		push	{r7}
 159              	.LCFI4:
 160              		.cfi_def_cfa_offset 4
 161              		.cfi_offset 7, -4
 162 0062 83B0     		sub	sp, sp, #12
 163              	.LCFI5:
 164              		.cfi_def_cfa_offset 16
 165 0064 00AF     		add	r7, sp, #0
 166              	.LCFI6:
 167              		.cfi_def_cfa_register 7
  65:openstack/02b-MAChigh/neighbors.c ****    uint8_t i;
  66:openstack/02b-MAChigh/neighbors.c ****    uint8_t returnVal;
  67:openstack/02b-MAChigh/neighbors.c ****    
  68:openstack/02b-MAChigh/neighbors.c ****    returnVal=0;
 168              		.loc 1 68 0
 169 0066 4FF00003 		mov	r3, #0
 170 006a BB71     		strb	r3, [r7, #6]
  69:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 171              		.loc 1 69 0
 172 006c 4FF00003 		mov	r3, #0
 173 0070 FB71     		strb	r3, [r7, #7]
 174 0072 16E0     		b	.L7
 175              	.L9:
  70:openstack/02b-MAChigh/neighbors.c ****       if (neighbors_vars.neighbors[i].used==TRUE) {
 176              		.loc 1 70 0
 177 0074 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 178 0076 40F20002 		movw	r2, #:lower16:neighbors_vars
 179 007a C0F20002 		movt	r2, #:upper16:neighbors_vars
 180 007e 0B46     		mov	r3, r1
 181 0080 4FEA0313 		lsl	r3, r3, #4
 182 0084 5B18     		adds	r3, r3, r1
 183 0086 4FEA4303 		lsl	r3, r3, #1
 184 008a D318     		adds	r3, r2, r3
 185 008c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 186 008e 002B     		cmp	r3, #0
 187 0090 03D0     		beq	.L8
  71:openstack/02b-MAChigh/neighbors.c ****          returnVal++;
 188              		.loc 1 71 0
 189 0092 BB79     		ldrb	r3, [r7, #6]
 190 0094 03F10103 		add	r3, r3, #1
 191 0098 BB71     		strb	r3, [r7, #6]
 192              	.L8:
  69:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 193              		.loc 1 69 0
 194 009a FB79     		ldrb	r3, [r7, #7]
 195 009c 03F10103 		add	r3, r3, #1
 196 00a0 FB71     		strb	r3, [r7, #7]
 197              	.L7:
  69:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 198              		.loc 1 69 0 is_stmt 0 discriminator 1
 199 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 200 00a4 092B     		cmp	r3, #9
 201 00a6 E5D9     		bls	.L9
  72:openstack/02b-MAChigh/neighbors.c ****       }
  73:openstack/02b-MAChigh/neighbors.c ****    }
  74:openstack/02b-MAChigh/neighbors.c ****    return returnVal;
 202              		.loc 1 74 0 is_stmt 1
 203 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  75:openstack/02b-MAChigh/neighbors.c **** }
 204              		.loc 1 75 0
 205 00aa 1846     		mov	r0, r3
 206 00ac 07F10C07 		add	r7, r7, #12
 207 00b0 BD46     		mov	sp, r7
 208 00b2 80BC     		pop	{r7}
 209 00b4 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE2:
 213 00b6 00BF     		.align	2
 214              		.global	neighbors_getPreferredParentEui64
 215              		.thumb
 216              		.thumb_func
 218              	neighbors_getPreferredParentEui64:
 219              	.LFB3:
  76:openstack/02b-MAChigh/neighbors.c **** 
  77:openstack/02b-MAChigh/neighbors.c **** /**
  78:openstack/02b-MAChigh/neighbors.c **** \brief Retrieve my preferred parent's EUI64 address.
  79:openstack/02b-MAChigh/neighbors.c **** 
  80:openstack/02b-MAChigh/neighbors.c **** \param[out] addressToWrite Where to write the preferred parent's address to.
  81:openstack/02b-MAChigh/neighbors.c **** */
  82:openstack/02b-MAChigh/neighbors.c **** bool neighbors_getPreferredParentEui64(open_addr_t* addressToWrite) {
 220              		.loc 1 82 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 16
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225 00b8 B0B4     		push	{r4, r5, r7}
 226              	.LCFI7:
 227              		.cfi_def_cfa_offset 12
 228              		.cfi_offset 4, -12
 229              		.cfi_offset 5, -8
 230              		.cfi_offset 7, -4
 231 00ba 85B0     		sub	sp, sp, #20
 232              	.LCFI8:
 233              		.cfi_def_cfa_offset 32
 234 00bc 00AF     		add	r7, sp, #0
 235              	.LCFI9:
 236              		.cfi_def_cfa_register 7
 237 00be 7860     		str	r0, [r7, #4]
  83:openstack/02b-MAChigh/neighbors.c ****    uint8_t   i;
  84:openstack/02b-MAChigh/neighbors.c ****    bool      foundPreferred;
  85:openstack/02b-MAChigh/neighbors.c ****    uint8_t   numNeighbors;
  86:openstack/02b-MAChigh/neighbors.c ****    dagrank_t minRankVal;
  87:openstack/02b-MAChigh/neighbors.c ****    uint8_t   minRankIdx;
  88:openstack/02b-MAChigh/neighbors.c ****    
  89:openstack/02b-MAChigh/neighbors.c ****    addressToWrite->type = ADDR_NONE;
 238              		.loc 1 89 0
 239 00c0 7B68     		ldr	r3, [r7, #4]
 240 00c2 4FF00002 		mov	r2, #0
 241 00c6 1A70     		strb	r2, [r3, #0]
  90:openstack/02b-MAChigh/neighbors.c ****    
  91:openstack/02b-MAChigh/neighbors.c ****    foundPreferred       = FALSE;
 242              		.loc 1 91 0
 243 00c8 4FF00003 		mov	r3, #0
 244 00cc BB73     		strb	r3, [r7, #14]
  92:openstack/02b-MAChigh/neighbors.c ****    numNeighbors         = 0;
 245              		.loc 1 92 0
 246 00ce 4FF00003 		mov	r3, #0
 247 00d2 7B73     		strb	r3, [r7, #13]
  93:openstack/02b-MAChigh/neighbors.c ****    minRankVal           = MAXDAGRANK;
 248              		.loc 1 93 0
 249 00d4 4FF6FF73 		movw	r3, #65535
 250 00d8 7B81     		strh	r3, [r7, #10]	@ movhi
  94:openstack/02b-MAChigh/neighbors.c ****    minRankIdx           = MAXNUMNEIGHBORS+1;
 251              		.loc 1 94 0
 252 00da 4FF00B03 		mov	r3, #11
 253 00de 7B72     		strb	r3, [r7, #9]
  95:openstack/02b-MAChigh/neighbors.c ****    
  96:openstack/02b-MAChigh/neighbors.c ****    //===== step 1. Try to find preferred parent
  97:openstack/02b-MAChigh/neighbors.c ****    for (i=0; i<MAXNUMNEIGHBORS; i++) {
 254              		.loc 1 97 0
 255 00e0 4FF00003 		mov	r3, #0
 256 00e4 FB73     		strb	r3, [r7, #15]
 257 00e6 6FE0     		b	.L12
 258              	.L16:
  98:openstack/02b-MAChigh/neighbors.c ****       if (neighbors_vars.neighbors[i].used==TRUE){
 259              		.loc 1 98 0
 260 00e8 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 261 00ea 40F20002 		movw	r2, #:lower16:neighbors_vars
 262 00ee C0F20002 		movt	r2, #:upper16:neighbors_vars
 263 00f2 0B46     		mov	r3, r1
 264 00f4 4FEA0313 		lsl	r3, r3, #4
 265 00f8 5B18     		adds	r3, r3, r1
 266 00fa 4FEA4303 		lsl	r3, r3, #1
 267 00fe D318     		adds	r3, r2, r3
 268 0100 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 269 0102 002B     		cmp	r3, #0
 270 0104 5CD0     		beq	.L13
  99:openstack/02b-MAChigh/neighbors.c ****          if (neighbors_vars.neighbors[i].parentPreference==MAXPREFERENCE) {
 271              		.loc 1 99 0
 272 0106 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 273 0108 40F20002 		movw	r2, #:lower16:neighbors_vars
 274 010c C0F20002 		movt	r2, #:upper16:neighbors_vars
 275 0110 0B46     		mov	r3, r1
 276 0112 4FEA0313 		lsl	r3, r3, #4
 277 0116 5B18     		adds	r3, r3, r1
 278 0118 4FEA4303 		lsl	r3, r3, #1
 279 011c D318     		adds	r3, r2, r3
 280 011e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 281 0120 022B     		cmp	r3, #2
 282 0122 1FD1     		bne	.L14
 100:openstack/02b-MAChigh/neighbors.c ****             memcpy(addressToWrite,&(neighbors_vars.neighbors[i].addr_64b),sizeof(open_addr_t));
 283              		.loc 1 100 0
 284 0124 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 285 0126 1346     		mov	r3, r2
 286 0128 4FEA0313 		lsl	r3, r3, #4
 287 012c 9B18     		adds	r3, r3, r2
 288 012e 4FEA4303 		lsl	r3, r3, #1
 289 0132 40F20002 		movw	r2, #:lower16:neighbors_vars
 290 0136 C0F20002 		movt	r2, #:upper16:neighbors_vars
 291 013a 9B18     		adds	r3, r3, r2
 292 013c 03F10402 		add	r2, r3, #4
 293 0140 7B68     		ldr	r3, [r7, #4]
 294 0142 1568     		ldr	r5, [r2, #0]	@ unaligned
 295 0144 5468     		ldr	r4, [r2, #4]	@ unaligned
 296 0146 9068     		ldr	r0, [r2, #8]	@ unaligned
 297 0148 D168     		ldr	r1, [r2, #12]	@ unaligned
 298 014a 1D60     		str	r5, [r3, #0]	@ unaligned
 299 014c 5C60     		str	r4, [r3, #4]	@ unaligned
 300 014e 9860     		str	r0, [r3, #8]	@ unaligned
 301 0150 D960     		str	r1, [r3, #12]	@ unaligned
 302 0152 127C     		ldrb	r2, [r2, #16]
 303 0154 1A74     		strb	r2, [r3, #16]
 101:openstack/02b-MAChigh/neighbors.c ****             addressToWrite->type=ADDR_64B;
 304              		.loc 1 101 0
 305 0156 7B68     		ldr	r3, [r7, #4]
 306 0158 4FF00202 		mov	r2, #2
 307 015c 1A70     		strb	r2, [r3, #0]
 102:openstack/02b-MAChigh/neighbors.c ****             foundPreferred=TRUE;
 308              		.loc 1 102 0
 309 015e 4FF00103 		mov	r3, #1
 310 0162 BB73     		strb	r3, [r7, #14]
 311              	.L14:
 103:openstack/02b-MAChigh/neighbors.c ****          }
 104:openstack/02b-MAChigh/neighbors.c ****          // identify neighbor with lowest rank
 105:openstack/02b-MAChigh/neighbors.c ****          if (neighbors_vars.neighbors[i].DAGrank < minRankVal) {
 312              		.loc 1 105 0
 313 0164 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 314 0166 40F20002 		movw	r2, #:lower16:neighbors_vars
 315 016a C0F20002 		movt	r2, #:upper16:neighbors_vars
 316 016e 0B46     		mov	r3, r1
 317 0170 4FEA0313 		lsl	r3, r3, #4
 318 0174 5B18     		adds	r3, r3, r1
 319 0176 4FEA4303 		lsl	r3, r3, #1
 320 017a D318     		adds	r3, r2, r3
 321 017c 03F11003 		add	r3, r3, #16
 322 0180 B3F80530 		ldrh	r3, [r3, #5]	@ unaligned
 323 0184 9BB2     		uxth	r3, r3
 324 0186 7A89     		ldrh	r2, [r7, #10]
 325 0188 9A42     		cmp	r2, r3
 326 018a 15D9     		bls	.L15
 106:openstack/02b-MAChigh/neighbors.c ****             minRankVal=neighbors_vars.neighbors[i].DAGrank;
 327              		.loc 1 106 0
 328 018c F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 329 018e 40F20002 		movw	r2, #:lower16:neighbors_vars
 330 0192 C0F20002 		movt	r2, #:upper16:neighbors_vars
 331 0196 0B46     		mov	r3, r1
 332 0198 4FEA0313 		lsl	r3, r3, #4
 333 019c 5B18     		adds	r3, r3, r1
 334 019e 4FEA4303 		lsl	r3, r3, #1
 335 01a2 D318     		adds	r3, r2, r3
 336 01a4 03F11003 		add	r3, r3, #16
 337 01a8 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 338 01aa 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 339 01ac 4FEA0323 		lsl	r3, r3, #8
 340 01b0 1343     		orrs	r3, r3, r2
 341 01b2 7B81     		strh	r3, [r7, #10]	@ movhi
 107:openstack/02b-MAChigh/neighbors.c ****             minRankIdx=i;
 342              		.loc 1 107 0
 343 01b4 FB7B     		ldrb	r3, [r7, #15]
 344 01b6 7B72     		strb	r3, [r7, #9]
 345              	.L15:
 108:openstack/02b-MAChigh/neighbors.c ****          }
 109:openstack/02b-MAChigh/neighbors.c ****          numNeighbors++;
 346              		.loc 1 109 0
 347 01b8 7B7B     		ldrb	r3, [r7, #13]
 348 01ba 03F10103 		add	r3, r3, #1
 349 01be 7B73     		strb	r3, [r7, #13]
 350              	.L13:
  97:openstack/02b-MAChigh/neighbors.c ****    for (i=0; i<MAXNUMNEIGHBORS; i++) {
 351              		.loc 1 97 0
 352 01c0 FB7B     		ldrb	r3, [r7, #15]
 353 01c2 03F10103 		add	r3, r3, #1
 354 01c6 FB73     		strb	r3, [r7, #15]
 355              	.L12:
  97:openstack/02b-MAChigh/neighbors.c ****    for (i=0; i<MAXNUMNEIGHBORS; i++) {
 356              		.loc 1 97 0 is_stmt 0 discriminator 1
 357 01c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 358 01ca 092B     		cmp	r3, #9
 359 01cc 8CD9     		bls	.L16
 110:openstack/02b-MAChigh/neighbors.c ****       }
 111:openstack/02b-MAChigh/neighbors.c ****    }
 112:openstack/02b-MAChigh/neighbors.c ****    
 113:openstack/02b-MAChigh/neighbors.c ****    //===== step 2. (backup) Promote neighbor with min rank to preferred parent
 114:openstack/02b-MAChigh/neighbors.c ****    if (foundPreferred==FALSE && numNeighbors > 0){
 360              		.loc 1 114 0 is_stmt 1
 361 01ce BB7B     		ldrb	r3, [r7, #14]
 362 01d0 83F00103 		eor	r3, r3, #1
 363 01d4 DBB2     		uxtb	r3, r3
 364 01d6 002B     		cmp	r3, #0
 365 01d8 4FD0     		beq	.L17
 366              		.loc 1 114 0 is_stmt 0 discriminator 1
 367 01da 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 368 01dc 002B     		cmp	r3, #0
 369 01de 4CD0     		beq	.L17
 115:openstack/02b-MAChigh/neighbors.c ****       // promote neighbor
 116:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.neighbors[minRankIdx].parentPreference       = MAXPREFERENCE;
 370              		.loc 1 116 0 is_stmt 1
 371 01e0 797A     		ldrb	r1, [r7, #9]	@ zero_extendqisi2
 372 01e2 40F20002 		movw	r2, #:lower16:neighbors_vars
 373 01e6 C0F20002 		movt	r2, #:upper16:neighbors_vars
 374 01ea 0B46     		mov	r3, r1
 375 01ec 4FEA0313 		lsl	r3, r3, #4
 376 01f0 5B18     		adds	r3, r3, r1
 377 01f2 4FEA4303 		lsl	r3, r3, #1
 378 01f6 D318     		adds	r3, r2, r3
 379 01f8 4FF00202 		mov	r2, #2
 380 01fc 5A70     		strb	r2, [r3, #1]
 117:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.neighbors[minRankIdx].stableNeighbor         = TRUE;
 381              		.loc 1 117 0
 382 01fe 797A     		ldrb	r1, [r7, #9]	@ zero_extendqisi2
 383 0200 40F20002 		movw	r2, #:lower16:neighbors_vars
 384 0204 C0F20002 		movt	r2, #:upper16:neighbors_vars
 385 0208 0B46     		mov	r3, r1
 386 020a 4FEA0313 		lsl	r3, r3, #4
 387 020e 5B18     		adds	r3, r3, r1
 388 0210 4FEA4303 		lsl	r3, r3, #1
 389 0214 D318     		adds	r3, r2, r3
 390 0216 4FF00102 		mov	r2, #1
 391 021a 9A70     		strb	r2, [r3, #2]
 118:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.neighbors[minRankIdx].switchStabilityCounter = 0;
 392              		.loc 1 118 0
 393 021c 797A     		ldrb	r1, [r7, #9]	@ zero_extendqisi2
 394 021e 40F20002 		movw	r2, #:lower16:neighbors_vars
 395 0222 C0F20002 		movt	r2, #:upper16:neighbors_vars
 396 0226 0B46     		mov	r3, r1
 397 0228 4FEA0313 		lsl	r3, r3, #4
 398 022c 5B18     		adds	r3, r3, r1
 399 022e 4FEA4303 		lsl	r3, r3, #1
 400 0232 D318     		adds	r3, r2, r3
 401 0234 4FF00002 		mov	r2, #0
 402 0238 DA70     		strb	r2, [r3, #3]
 119:openstack/02b-MAChigh/neighbors.c ****       // return its address
 120:openstack/02b-MAChigh/neighbors.c ****       memcpy(addressToWrite,&(neighbors_vars.neighbors[minRankIdx].addr_64b),sizeof(open_addr_t));
 403              		.loc 1 120 0
 404 023a 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 405 023c 1346     		mov	r3, r2
 406 023e 4FEA0313 		lsl	r3, r3, #4
 407 0242 9B18     		adds	r3, r3, r2
 408 0244 4FEA4303 		lsl	r3, r3, #1
 409 0248 40F20002 		movw	r2, #:lower16:neighbors_vars
 410 024c C0F20002 		movt	r2, #:upper16:neighbors_vars
 411 0250 9B18     		adds	r3, r3, r2
 412 0252 03F10402 		add	r2, r3, #4
 413 0256 7B68     		ldr	r3, [r7, #4]
 414 0258 1568     		ldr	r5, [r2, #0]	@ unaligned
 415 025a 5468     		ldr	r4, [r2, #4]	@ unaligned
 416 025c 9068     		ldr	r0, [r2, #8]	@ unaligned
 417 025e D168     		ldr	r1, [r2, #12]	@ unaligned
 418 0260 1D60     		str	r5, [r3, #0]	@ unaligned
 419 0262 5C60     		str	r4, [r3, #4]	@ unaligned
 420 0264 9860     		str	r0, [r3, #8]	@ unaligned
 421 0266 D960     		str	r1, [r3, #12]	@ unaligned
 422 0268 127C     		ldrb	r2, [r2, #16]
 423 026a 1A74     		strb	r2, [r3, #16]
 121:openstack/02b-MAChigh/neighbors.c ****       addressToWrite->type=ADDR_64B;
 424              		.loc 1 121 0
 425 026c 7B68     		ldr	r3, [r7, #4]
 426 026e 4FF00202 		mov	r2, #2
 427 0272 1A70     		strb	r2, [r3, #0]
 122:openstack/02b-MAChigh/neighbors.c ****       foundPreferred=TRUE;         
 428              		.loc 1 122 0
 429 0274 4FF00103 		mov	r3, #1
 430 0278 BB73     		strb	r3, [r7, #14]
 431              	.L17:
 123:openstack/02b-MAChigh/neighbors.c ****    }
 124:openstack/02b-MAChigh/neighbors.c ****    
 125:openstack/02b-MAChigh/neighbors.c ****    return foundPreferred;
 432              		.loc 1 125 0
 433 027a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 126:openstack/02b-MAChigh/neighbors.c **** }
 434              		.loc 1 126 0
 435 027c 1846     		mov	r0, r3
 436 027e 07F11407 		add	r7, r7, #20
 437 0282 BD46     		mov	sp, r7
 438 0284 B0BC     		pop	{r4, r5, r7}
 439 0286 7047     		bx	lr
 440              		.cfi_endproc
 441              	.LFE3:
 443              		.align	2
 444              		.global	neighbors_getKANeighbor
 445              		.thumb
 446              		.thumb_func
 448              	neighbors_getKANeighbor:
 449              	.LFB4:
 127:openstack/02b-MAChigh/neighbors.c **** 
 128:openstack/02b-MAChigh/neighbors.c **** /**
 129:openstack/02b-MAChigh/neighbors.c **** \brief Find neighbor to which to send KA.
 130:openstack/02b-MAChigh/neighbors.c **** 
 131:openstack/02b-MAChigh/neighbors.c **** This function iterates through the neighbor table and identifies the neighbor
 132:openstack/02b-MAChigh/neighbors.c **** we need to send a KA to, if any. This neighbor satisfies the following
 133:openstack/02b-MAChigh/neighbors.c **** conditions:
 134:openstack/02b-MAChigh/neighbors.c **** - it is one of our preferred parents
 135:openstack/02b-MAChigh/neighbors.c **** - we haven't heard it for over kaPeriod
 136:openstack/02b-MAChigh/neighbors.c **** 
 137:openstack/02b-MAChigh/neighbors.c **** \param[in] kaPeriod The maximum number of slots I'm allowed not to have heard
 138:openstack/02b-MAChigh/neighbors.c ****    it.
 139:openstack/02b-MAChigh/neighbors.c **** 
 140:openstack/02b-MAChigh/neighbors.c **** \returns A pointer to the neighbor's address, or NULL if no KA is needed.
 141:openstack/02b-MAChigh/neighbors.c **** */
 142:openstack/02b-MAChigh/neighbors.c **** open_addr_t* neighbors_getKANeighbor(uint16_t kaPeriod) {
 450              		.loc 1 142 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 24
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454 0288 80B5     		push	{r7, lr}
 455              	.LCFI10:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 7, -8
 458              		.cfi_offset 14, -4
 459 028a 86B0     		sub	sp, sp, #24
 460              	.LCFI11:
 461              		.cfi_def_cfa_offset 32
 462 028c 00AF     		add	r7, sp, #0
 463              	.LCFI12:
 464              		.cfi_def_cfa_register 7
 465 028e 0346     		mov	r3, r0
 466 0290 FB80     		strh	r3, [r7, #6]	@ movhi
 143:openstack/02b-MAChigh/neighbors.c ****    uint8_t         i;
 144:openstack/02b-MAChigh/neighbors.c ****    uint16_t        timeSinceHeard;
 145:openstack/02b-MAChigh/neighbors.c ****    open_addr_t*    addrPreferred;
 146:openstack/02b-MAChigh/neighbors.c ****    open_addr_t*    addrOther;
 147:openstack/02b-MAChigh/neighbors.c ****    
 148:openstack/02b-MAChigh/neighbors.c ****    // initialize
 149:openstack/02b-MAChigh/neighbors.c ****    addrPreferred = NULL;
 467              		.loc 1 149 0
 468 0292 4FF00003 		mov	r3, #0
 469 0296 3B61     		str	r3, [r7, #16]
 150:openstack/02b-MAChigh/neighbors.c ****    addrOther     = NULL;
 470              		.loc 1 150 0
 471 0298 4FF00003 		mov	r3, #0
 472 029c FB60     		str	r3, [r7, #12]
 151:openstack/02b-MAChigh/neighbors.c ****    
 152:openstack/02b-MAChigh/neighbors.c ****    // scan through the neighbor table, and populate addrPreferred and addrOther
 153:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 473              		.loc 1 153 0
 474 029e 4FF00003 		mov	r3, #0
 475 02a2 FB75     		strb	r3, [r7, #23]
 476 02a4 49E0     		b	.L20
 477              	.L22:
 154:openstack/02b-MAChigh/neighbors.c ****       if (neighbors_vars.neighbors[i].used==1) {
 478              		.loc 1 154 0
 479 02a6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 480 02a8 40F20002 		movw	r2, #:lower16:neighbors_vars
 481 02ac C0F20002 		movt	r2, #:upper16:neighbors_vars
 482 02b0 0B46     		mov	r3, r1
 483 02b2 4FEA0313 		lsl	r3, r3, #4
 484 02b6 5B18     		adds	r3, r3, r1
 485 02b8 4FEA4303 		lsl	r3, r3, #1
 486 02bc D318     		adds	r3, r2, r3
 487 02be 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 488 02c0 002B     		cmp	r3, #0
 489 02c2 36D0     		beq	.L21
 155:openstack/02b-MAChigh/neighbors.c ****          timeSinceHeard = ieee154e_asnDiff(&neighbors_vars.neighbors[i].asn);
 490              		.loc 1 155 0
 491 02c4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 492 02c6 1346     		mov	r3, r2
 493 02c8 4FEA0313 		lsl	r3, r3, #4
 494 02cc 9B18     		adds	r3, r3, r2
 495 02ce 4FEA4303 		lsl	r3, r3, #1
 496 02d2 03F11802 		add	r2, r3, #24
 497 02d6 40F20003 		movw	r3, #:lower16:neighbors_vars
 498 02da C0F20003 		movt	r3, #:upper16:neighbors_vars
 499 02de D318     		adds	r3, r2, r3
 500 02e0 03F10403 		add	r3, r3, #4
 501 02e4 1846     		mov	r0, r3
 502 02e6 FFF7FEFF 		bl	ieee154e_asnDiff
 503 02ea 0346     		mov	r3, r0
 504 02ec 7B81     		strh	r3, [r7, #10]	@ movhi
 156:openstack/02b-MAChigh/neighbors.c ****          if (timeSinceHeard>kaPeriod) {
 505              		.loc 1 156 0
 506 02ee 7A89     		ldrh	r2, [r7, #10]
 507 02f0 FB88     		ldrh	r3, [r7, #6]
 508 02f2 9A42     		cmp	r2, r3
 509 02f4 1DD9     		bls	.L21
 157:openstack/02b-MAChigh/neighbors.c ****             // this neighbor needs to be KA'ed to
 158:openstack/02b-MAChigh/neighbors.c ****             if (neighbors_vars.neighbors[i].parentPreference==MAXPREFERENCE) {
 510              		.loc 1 158 0
 511 02f6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 512 02f8 40F20002 		movw	r2, #:lower16:neighbors_vars
 513 02fc C0F20002 		movt	r2, #:upper16:neighbors_vars
 514 0300 0B46     		mov	r3, r1
 515 0302 4FEA0313 		lsl	r3, r3, #4
 516 0306 5B18     		adds	r3, r3, r1
 517 0308 4FEA4303 		lsl	r3, r3, #1
 518 030c D318     		adds	r3, r2, r3
 519 030e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 520 0310 022B     		cmp	r3, #2
 521 0312 0ED1     		bne	.L21
 159:openstack/02b-MAChigh/neighbors.c ****                // its a preferred parent
 160:openstack/02b-MAChigh/neighbors.c ****                addrPreferred = &(neighbors_vars.neighbors[i].addr_64b);
 522              		.loc 1 160 0
 523 0314 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 524 0316 1346     		mov	r3, r2
 525 0318 4FEA0313 		lsl	r3, r3, #4
 526 031c 9B18     		adds	r3, r3, r2
 527 031e 4FEA4303 		lsl	r3, r3, #1
 528 0322 40F20002 		movw	r2, #:lower16:neighbors_vars
 529 0326 C0F20002 		movt	r2, #:upper16:neighbors_vars
 530 032a 9B18     		adds	r3, r3, r2
 531 032c 03F10403 		add	r3, r3, #4
 532 0330 3B61     		str	r3, [r7, #16]
 533              	.L21:
 153:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 534              		.loc 1 153 0
 535 0332 FB7D     		ldrb	r3, [r7, #23]
 536 0334 03F10103 		add	r3, r3, #1
 537 0338 FB75     		strb	r3, [r7, #23]
 538              	.L20:
 153:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 539              		.loc 1 153 0 is_stmt 0 discriminator 1
 540 033a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 541 033c 092B     		cmp	r3, #9
 542 033e B2D9     		bls	.L22
 161:openstack/02b-MAChigh/neighbors.c ****             } else {
 162:openstack/02b-MAChigh/neighbors.c ****                // its not a preferred parent
 163:openstack/02b-MAChigh/neighbors.c ****                // Note: commented out since policy is not to KA to non-preferred parents
 164:openstack/02b-MAChigh/neighbors.c ****                // addrOther =     &(neighbors_vars.neighbors[i].addr_64b);
 165:openstack/02b-MAChigh/neighbors.c ****             }
 166:openstack/02b-MAChigh/neighbors.c ****          }
 167:openstack/02b-MAChigh/neighbors.c ****       }
 168:openstack/02b-MAChigh/neighbors.c ****    }
 169:openstack/02b-MAChigh/neighbors.c ****    
 170:openstack/02b-MAChigh/neighbors.c ****    // return the EUI64 of the most urgent KA to send:
 171:openstack/02b-MAChigh/neighbors.c ****    // - if available, preferred parent
 172:openstack/02b-MAChigh/neighbors.c ****    // - if not, non-preferred parent
 173:openstack/02b-MAChigh/neighbors.c ****    if        (addrPreferred!=NULL) {
 543              		.loc 1 173 0 is_stmt 1
 544 0340 3B69     		ldr	r3, [r7, #16]
 545 0342 002B     		cmp	r3, #0
 546 0344 01D0     		beq	.L23
 174:openstack/02b-MAChigh/neighbors.c ****       return addrPreferred;
 547              		.loc 1 174 0
 548 0346 3B69     		ldr	r3, [r7, #16]
 549 0348 06E0     		b	.L24
 550              	.L23:
 175:openstack/02b-MAChigh/neighbors.c ****    } else if (addrOther!=NULL) {
 551              		.loc 1 175 0
 552 034a FB68     		ldr	r3, [r7, #12]
 553 034c 002B     		cmp	r3, #0
 554 034e 01D0     		beq	.L25
 176:openstack/02b-MAChigh/neighbors.c ****       return addrOther;
 555              		.loc 1 176 0
 556 0350 FB68     		ldr	r3, [r7, #12]
 557 0352 01E0     		b	.L24
 558              	.L25:
 177:openstack/02b-MAChigh/neighbors.c ****    } else {
 178:openstack/02b-MAChigh/neighbors.c ****       return NULL;
 559              		.loc 1 178 0
 560 0354 4FF00003 		mov	r3, #0
 561              	.L24:
 179:openstack/02b-MAChigh/neighbors.c ****    }
 180:openstack/02b-MAChigh/neighbors.c **** }
 562              		.loc 1 180 0
 563 0358 1846     		mov	r0, r3
 564 035a 07F11807 		add	r7, r7, #24
 565 035e BD46     		mov	sp, r7
 566 0360 80BD     		pop	{r7, pc}
 567              		.cfi_endproc
 568              	.LFE4:
 570 0362 00BF     		.align	2
 571              		.global	neighbors_isStableNeighbor
 572              		.thumb
 573              		.thumb_func
 575              	neighbors_isStableNeighbor:
 576              	.LFB5:
 181:openstack/02b-MAChigh/neighbors.c **** 
 182:openstack/02b-MAChigh/neighbors.c **** //===== interrogators
 183:openstack/02b-MAChigh/neighbors.c **** 
 184:openstack/02b-MAChigh/neighbors.c **** /**
 185:openstack/02b-MAChigh/neighbors.c **** \brief Indicate whether some neighbor is a stable neighbor
 186:openstack/02b-MAChigh/neighbors.c **** 
 187:openstack/02b-MAChigh/neighbors.c **** \param[in] address The address of the neighbor, a full 128-bit IPv6 addres.
 188:openstack/02b-MAChigh/neighbors.c **** 
 189:openstack/02b-MAChigh/neighbors.c **** \returns TRUE if that neighbor is stable, FALSE otherwise.
 190:openstack/02b-MAChigh/neighbors.c **** */
 191:openstack/02b-MAChigh/neighbors.c **** bool neighbors_isStableNeighbor(open_addr_t* address) {
 577              		.loc 1 191 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 48
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 0364 80B5     		push	{r7, lr}
 582              	.LCFI13:
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 7, -8
 585              		.cfi_offset 14, -4
 586 0366 8CB0     		sub	sp, sp, #48
 587              	.LCFI14:
 588              		.cfi_def_cfa_offset 56
 589 0368 00AF     		add	r7, sp, #0
 590              	.LCFI15:
 591              		.cfi_def_cfa_register 7
 592 036a 7860     		str	r0, [r7, #4]
 192:openstack/02b-MAChigh/neighbors.c ****    uint8_t     i;
 193:openstack/02b-MAChigh/neighbors.c ****    open_addr_t temp_addr_64b;
 194:openstack/02b-MAChigh/neighbors.c ****    open_addr_t temp_prefix;
 195:openstack/02b-MAChigh/neighbors.c ****    bool        returnVal;
 196:openstack/02b-MAChigh/neighbors.c ****    
 197:openstack/02b-MAChigh/neighbors.c ****    // by default, not stable
 198:openstack/02b-MAChigh/neighbors.c ****    returnVal  = FALSE;
 593              		.loc 1 198 0
 594 036c 4FF00003 		mov	r3, #0
 595 0370 87F82E30 		strb	r3, [r7, #46]
 199:openstack/02b-MAChigh/neighbors.c ****    
 200:openstack/02b-MAChigh/neighbors.c ****    // but neighbor's IPv6 address in prefix and EUI64
 201:openstack/02b-MAChigh/neighbors.c ****    switch (address->type) {
 596              		.loc 1 201 0
 597 0374 7B68     		ldr	r3, [r7, #4]
 598 0376 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 599 0378 032B     		cmp	r3, #3
 600 037a 0ED1     		bne	.L36
 601              	.L28:
 202:openstack/02b-MAChigh/neighbors.c ****       case ADDR_128B:
 203:openstack/02b-MAChigh/neighbors.c ****          packetfunctions_ip128bToMac64b(address,&temp_prefix,&temp_addr_64b);
 602              		.loc 1 203 0
 603 037c 07F10802 		add	r2, r7, #8
 604 0380 07F11C03 		add	r3, r7, #28
 605 0384 7868     		ldr	r0, [r7, #4]
 606 0386 1146     		mov	r1, r2
 607 0388 1A46     		mov	r2, r3
 608 038a FFF7FEFF 		bl	packetfunctions_ip128bToMac64b
 204:openstack/02b-MAChigh/neighbors.c ****          break;
 609              		.loc 1 204 0
 610 038e 00BF     		nop
 205:openstack/02b-MAChigh/neighbors.c ****       default:
 206:openstack/02b-MAChigh/neighbors.c ****          openserial_printCritical(COMPONENT_NEIGHBORS,ERR_WRONG_ADDR_TYPE,
 207:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)address->type,
 208:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)0);
 209:openstack/02b-MAChigh/neighbors.c ****          return returnVal;
 210:openstack/02b-MAChigh/neighbors.c ****    }
 211:openstack/02b-MAChigh/neighbors.c ****    
 212:openstack/02b-MAChigh/neighbors.c ****    // iterate through neighbor table
 213:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 611              		.loc 1 213 0
 612 0390 4FF00003 		mov	r3, #0
 613 0394 87F82F30 		strb	r3, [r7, #47]
 614 0398 33E0     		b	.L31
 615              	.L36:
 207:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)address->type,
 616              		.loc 1 207 0
 617 039a 7B68     		ldr	r3, [r7, #4]
 618 039c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 206:openstack/02b-MAChigh/neighbors.c ****          openserial_printCritical(COMPONENT_NEIGHBORS,ERR_WRONG_ADDR_TYPE,
 619              		.loc 1 206 0
 620 039e 4FF00D00 		mov	r0, #13
 621 03a2 4FF03101 		mov	r1, #49
 622 03a6 1A46     		mov	r2, r3
 623 03a8 4FF00003 		mov	r3, #0
 624 03ac FFF7FEFF 		bl	openserial_printCritical
 209:openstack/02b-MAChigh/neighbors.c ****          return returnVal;
 625              		.loc 1 209 0
 626 03b0 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 627 03b4 2BE0     		b	.L35
 628              	.L34:
 214:openstack/02b-MAChigh/neighbors.c ****       if (isThisRowMatching(&temp_addr_64b,i) && neighbors_vars.neighbors[i].stableNeighbor==TRUE) 
 629              		.loc 1 214 0
 630 03b6 07F11C02 		add	r2, r7, #28
 631 03ba 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 632 03be 1046     		mov	r0, r2
 633 03c0 1946     		mov	r1, r3
 634 03c2 FFF7FEFF 		bl	isThisRowMatching
 635 03c6 0346     		mov	r3, r0
 636 03c8 002B     		cmp	r3, #0
 637 03ca 14D0     		beq	.L32
 638              		.loc 1 214 0 is_stmt 0 discriminator 1
 639 03cc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 640 03d0 40F20002 		movw	r2, #:lower16:neighbors_vars
 641 03d4 C0F20002 		movt	r2, #:upper16:neighbors_vars
 642 03d8 0B46     		mov	r3, r1
 643 03da 4FEA0313 		lsl	r3, r3, #4
 644 03de 5B18     		adds	r3, r3, r1
 645 03e0 4FEA4303 		lsl	r3, r3, #1
 646 03e4 D318     		adds	r3, r2, r3
 647 03e6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 648 03e8 002B     		cmp	r3, #0
 649 03ea 04D0     		beq	.L32
 215:openstack/02b-MAChigh/neighbors.c ****          returnVal  = TRUE;
 650              		.loc 1 215 0 is_stmt 1
 651 03ec 4FF00103 		mov	r3, #1
 652 03f0 87F82E30 		strb	r3, [r7, #46]
 216:openstack/02b-MAChigh/neighbors.c ****          break;
 653              		.loc 1 216 0
 654 03f4 09E0     		b	.L33
 655              	.L32:
 213:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 656              		.loc 1 213 0
 657 03f6 97F82F30 		ldrb	r3, [r7, #47]
 658 03fa 03F10103 		add	r3, r3, #1
 659 03fe 87F82F30 		strb	r3, [r7, #47]
 660              	.L31:
 213:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 661              		.loc 1 213 0 is_stmt 0 discriminator 1
 662 0402 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 663 0406 092B     		cmp	r3, #9
 664 0408 D5D9     		bls	.L34
 665              	.L33:
 217:openstack/02b-MAChigh/neighbors.c ****       }
 218:openstack/02b-MAChigh/neighbors.c ****    }
 219:openstack/02b-MAChigh/neighbors.c ****    
 220:openstack/02b-MAChigh/neighbors.c ****    return returnVal;
 666              		.loc 1 220 0 is_stmt 1
 667 040a 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 668              	.L35:
 221:openstack/02b-MAChigh/neighbors.c **** }
 669              		.loc 1 221 0
 670 040e 1846     		mov	r0, r3
 671 0410 07F13007 		add	r7, r7, #48
 672 0414 BD46     		mov	sp, r7
 673 0416 80BD     		pop	{r7, pc}
 674              		.cfi_endproc
 675              	.LFE5:
 677              		.align	2
 678              		.global	neighbors_isPreferredParent
 679              		.thumb
 680              		.thumb_func
 682              	neighbors_isPreferredParent:
 683              	.LFB6:
 222:openstack/02b-MAChigh/neighbors.c **** 
 223:openstack/02b-MAChigh/neighbors.c **** /**
 224:openstack/02b-MAChigh/neighbors.c **** \brief Indicate whether some neighbor is a preferred neighbor.
 225:openstack/02b-MAChigh/neighbors.c **** 
 226:openstack/02b-MAChigh/neighbors.c **** \param[in] address The EUI64 address of the neighbor.
 227:openstack/02b-MAChigh/neighbors.c **** 
 228:openstack/02b-MAChigh/neighbors.c **** \returns TRUE if that neighbor is preferred, FALSE otherwise.
 229:openstack/02b-MAChigh/neighbors.c **** */
 230:openstack/02b-MAChigh/neighbors.c **** bool neighbors_isPreferredParent(open_addr_t* address) {
 684              		.loc 1 230 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 16
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688 0418 80B5     		push	{r7, lr}
 689              	.LCFI16:
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 041a 84B0     		sub	sp, sp, #16
 694              	.LCFI17:
 695              		.cfi_def_cfa_offset 24
 696 041c 00AF     		add	r7, sp, #0
 697              	.LCFI18:
 698              		.cfi_def_cfa_register 7
 699 041e 7860     		str	r0, [r7, #4]
 231:openstack/02b-MAChigh/neighbors.c ****    uint8_t i;
 232:openstack/02b-MAChigh/neighbors.c ****    bool    returnVal;
 233:openstack/02b-MAChigh/neighbors.c ****    
 234:openstack/02b-MAChigh/neighbors.c ****    INTERRUPT_DECLARATION();
 235:openstack/02b-MAChigh/neighbors.c ****    DISABLE_INTERRUPTS();
 700              		.loc 1 235 0
 701 0420 FFF7FEFF 		bl	IntMasterDisable
 236:openstack/02b-MAChigh/neighbors.c ****    
 237:openstack/02b-MAChigh/neighbors.c ****    // by default, not preferred
 238:openstack/02b-MAChigh/neighbors.c ****    returnVal = FALSE;
 702              		.loc 1 238 0
 703 0424 4FF00003 		mov	r3, #0
 704 0428 BB73     		strb	r3, [r7, #14]
 239:openstack/02b-MAChigh/neighbors.c ****    
 240:openstack/02b-MAChigh/neighbors.c ****    // iterate through neighbor table
 241:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 705              		.loc 1 241 0
 706 042a 4FF00003 		mov	r3, #0
 707 042e FB73     		strb	r3, [r7, #15]
 708 0430 1EE0     		b	.L38
 709              	.L41:
 242:openstack/02b-MAChigh/neighbors.c ****       if (isThisRowMatching(address,i) && neighbors_vars.neighbors[i].parentPreference==MAXPREFEREN
 710              		.loc 1 242 0
 711 0432 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 712 0434 7868     		ldr	r0, [r7, #4]
 713 0436 1946     		mov	r1, r3
 714 0438 FFF7FEFF 		bl	isThisRowMatching
 715 043c 0346     		mov	r3, r0
 716 043e 002B     		cmp	r3, #0
 717 0440 12D0     		beq	.L39
 718              		.loc 1 242 0 is_stmt 0 discriminator 1
 719 0442 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 720 0444 40F20002 		movw	r2, #:lower16:neighbors_vars
 721 0448 C0F20002 		movt	r2, #:upper16:neighbors_vars
 722 044c 0B46     		mov	r3, r1
 723 044e 4FEA0313 		lsl	r3, r3, #4
 724 0452 5B18     		adds	r3, r3, r1
 725 0454 4FEA4303 		lsl	r3, r3, #1
 726 0458 D318     		adds	r3, r2, r3
 727 045a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 728 045c 022B     		cmp	r3, #2
 729 045e 03D1     		bne	.L39
 243:openstack/02b-MAChigh/neighbors.c ****          returnVal  = TRUE;
 730              		.loc 1 243 0 is_stmt 1
 731 0460 4FF00103 		mov	r3, #1
 732 0464 BB73     		strb	r3, [r7, #14]
 244:openstack/02b-MAChigh/neighbors.c ****          break;
 733              		.loc 1 244 0
 734 0466 06E0     		b	.L40
 735              	.L39:
 241:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 736              		.loc 1 241 0
 737 0468 FB7B     		ldrb	r3, [r7, #15]
 738 046a 03F10103 		add	r3, r3, #1
 739 046e FB73     		strb	r3, [r7, #15]
 740              	.L38:
 241:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 741              		.loc 1 241 0 is_stmt 0 discriminator 1
 742 0470 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 743 0472 092B     		cmp	r3, #9
 744 0474 DDD9     		bls	.L41
 745              	.L40:
 245:openstack/02b-MAChigh/neighbors.c ****       }
 246:openstack/02b-MAChigh/neighbors.c ****    }
 247:openstack/02b-MAChigh/neighbors.c ****    
 248:openstack/02b-MAChigh/neighbors.c ****    ENABLE_INTERRUPTS();
 746              		.loc 1 248 0 is_stmt 1
 747 0476 FFF7FEFF 		bl	IntMasterEnable
 249:openstack/02b-MAChigh/neighbors.c ****    return returnVal;
 748              		.loc 1 249 0
 749 047a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 250:openstack/02b-MAChigh/neighbors.c **** }
 750              		.loc 1 250 0
 751 047c 1846     		mov	r0, r3
 752 047e 07F11007 		add	r7, r7, #16
 753 0482 BD46     		mov	sp, r7
 754 0484 80BD     		pop	{r7, pc}
 755              		.cfi_endproc
 756              	.LFE6:
 758 0486 00BF     		.align	2
 759              		.global	neighbors_isNeighborWithLowerDAGrank
 760              		.thumb
 761              		.thumb_func
 763              	neighbors_isNeighborWithLowerDAGrank:
 764              	.LFB7:
 251:openstack/02b-MAChigh/neighbors.c **** 
 252:openstack/02b-MAChigh/neighbors.c **** /**
 253:openstack/02b-MAChigh/neighbors.c **** \brief Indicate whether some neighbor has a lower DAG rank that me.
 254:openstack/02b-MAChigh/neighbors.c **** 
 255:openstack/02b-MAChigh/neighbors.c **** \param[in] index The index of that neighbor in the neighbor table.
 256:openstack/02b-MAChigh/neighbors.c **** 
 257:openstack/02b-MAChigh/neighbors.c **** \returns TRUE if that neighbor has a lower DAG rank than me, FALSE otherwise.
 258:openstack/02b-MAChigh/neighbors.c **** */
 259:openstack/02b-MAChigh/neighbors.c **** bool neighbors_isNeighborWithLowerDAGrank(uint8_t index) {
 765              		.loc 1 259 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 16
 768              		@ frame_needed = 1, uses_anonymous_args = 0
 769 0488 90B5     		push	{r4, r7, lr}
 770              	.LCFI19:
 771              		.cfi_def_cfa_offset 12
 772              		.cfi_offset 4, -12
 773              		.cfi_offset 7, -8
 774              		.cfi_offset 14, -4
 775 048a 85B0     		sub	sp, sp, #20
 776              	.LCFI20:
 777              		.cfi_def_cfa_offset 32
 778 048c 00AF     		add	r7, sp, #0
 779              	.LCFI21:
 780              		.cfi_def_cfa_register 7
 781 048e 0346     		mov	r3, r0
 782 0490 FB71     		strb	r3, [r7, #7]
 260:openstack/02b-MAChigh/neighbors.c ****    bool    returnVal;
 261:openstack/02b-MAChigh/neighbors.c ****    
 262:openstack/02b-MAChigh/neighbors.c ****    if (neighbors_vars.neighbors[index].used==TRUE &&
 783              		.loc 1 262 0
 784 0492 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 785 0494 40F20002 		movw	r2, #:lower16:neighbors_vars
 786 0498 C0F20002 		movt	r2, #:upper16:neighbors_vars
 787 049c 0B46     		mov	r3, r1
 788 049e 4FEA0313 		lsl	r3, r3, #4
 789 04a2 5B18     		adds	r3, r3, r1
 790 04a4 4FEA4303 		lsl	r3, r3, #1
 791 04a8 D318     		adds	r3, r2, r3
 792 04aa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 793 04ac 002B     		cmp	r3, #0
 794 04ae 19D0     		beq	.L44
 263:openstack/02b-MAChigh/neighbors.c ****        neighbors_vars.neighbors[index].DAGrank < neighbors_getMyDAGrank()) { 
 795              		.loc 1 263 0 discriminator 1
 796 04b0 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 797 04b2 40F20002 		movw	r2, #:lower16:neighbors_vars
 798 04b6 C0F20002 		movt	r2, #:upper16:neighbors_vars
 799 04ba 0B46     		mov	r3, r1
 800 04bc 4FEA0313 		lsl	r3, r3, #4
 801 04c0 5B18     		adds	r3, r3, r1
 802 04c2 4FEA4303 		lsl	r3, r3, #1
 803 04c6 D318     		adds	r3, r2, r3
 804 04c8 03F11003 		add	r3, r3, #16
 805 04cc B3F80530 		ldrh	r3, [r3, #5]	@ unaligned
 806 04d0 9CB2     		uxth	r4, r3
 807 04d2 FFF7FEFF 		bl	neighbors_getMyDAGrank
 808 04d6 0346     		mov	r3, r0
 262:openstack/02b-MAChigh/neighbors.c ****    if (neighbors_vars.neighbors[index].used==TRUE &&
 809              		.loc 1 262 0 discriminator 1
 810 04d8 9C42     		cmp	r4, r3
 811 04da 03D2     		bcs	.L44
 264:openstack/02b-MAChigh/neighbors.c ****       returnVal = TRUE;
 812              		.loc 1 264 0
 813 04dc 4FF00103 		mov	r3, #1
 814 04e0 FB73     		strb	r3, [r7, #15]
 815 04e2 02E0     		b	.L45
 816              	.L44:
 265:openstack/02b-MAChigh/neighbors.c ****    } else {
 266:openstack/02b-MAChigh/neighbors.c ****       returnVal = FALSE;
 817              		.loc 1 266 0
 818 04e4 4FF00003 		mov	r3, #0
 819 04e8 FB73     		strb	r3, [r7, #15]
 820              	.L45:
 267:openstack/02b-MAChigh/neighbors.c ****    }
 268:openstack/02b-MAChigh/neighbors.c ****    
 269:openstack/02b-MAChigh/neighbors.c ****    return returnVal;
 821              		.loc 1 269 0
 822 04ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 270:openstack/02b-MAChigh/neighbors.c **** }
 823              		.loc 1 270 0
 824 04ec 1846     		mov	r0, r3
 825 04ee 07F11407 		add	r7, r7, #20
 826 04f2 BD46     		mov	sp, r7
 827 04f4 90BD     		pop	{r4, r7, pc}
 828              		.cfi_endproc
 829              	.LFE7:
 831 04f6 00BF     		.align	2
 832              		.global	neighbors_isNeighborWithHigherDAGrank
 833              		.thumb
 834              		.thumb_func
 836              	neighbors_isNeighborWithHigherDAGrank:
 837              	.LFB8:
 271:openstack/02b-MAChigh/neighbors.c **** 
 272:openstack/02b-MAChigh/neighbors.c **** 
 273:openstack/02b-MAChigh/neighbors.c **** /**
 274:openstack/02b-MAChigh/neighbors.c **** \brief Indicate whether some neighbor has a lower DAG rank that me.
 275:openstack/02b-MAChigh/neighbors.c **** 
 276:openstack/02b-MAChigh/neighbors.c **** \param[in] index The index of that neighbor in the neighbor table.
 277:openstack/02b-MAChigh/neighbors.c **** 
 278:openstack/02b-MAChigh/neighbors.c **** \returns TRUE if that neighbor has a lower DAG rank than me, FALSE otherwise.
 279:openstack/02b-MAChigh/neighbors.c **** */
 280:openstack/02b-MAChigh/neighbors.c **** bool neighbors_isNeighborWithHigherDAGrank(uint8_t index) {
 838              		.loc 1 280 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 16
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842 04f8 90B5     		push	{r4, r7, lr}
 843              	.LCFI22:
 844              		.cfi_def_cfa_offset 12
 845              		.cfi_offset 4, -12
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 04fa 85B0     		sub	sp, sp, #20
 849              	.LCFI23:
 850              		.cfi_def_cfa_offset 32
 851 04fc 00AF     		add	r7, sp, #0
 852              	.LCFI24:
 853              		.cfi_def_cfa_register 7
 854 04fe 0346     		mov	r3, r0
 855 0500 FB71     		strb	r3, [r7, #7]
 281:openstack/02b-MAChigh/neighbors.c ****    bool    returnVal;
 282:openstack/02b-MAChigh/neighbors.c ****    
 283:openstack/02b-MAChigh/neighbors.c ****    if (neighbors_vars.neighbors[index].used==TRUE &&
 856              		.loc 1 283 0
 857 0502 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 858 0504 40F20002 		movw	r2, #:lower16:neighbors_vars
 859 0508 C0F20002 		movt	r2, #:upper16:neighbors_vars
 860 050c 0B46     		mov	r3, r1
 861 050e 4FEA0313 		lsl	r3, r3, #4
 862 0512 5B18     		adds	r3, r3, r1
 863 0514 4FEA4303 		lsl	r3, r3, #1
 864 0518 D318     		adds	r3, r2, r3
 865 051a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 866 051c 002B     		cmp	r3, #0
 867 051e 19D0     		beq	.L48
 284:openstack/02b-MAChigh/neighbors.c ****        neighbors_vars.neighbors[index].DAGrank >= neighbors_getMyDAGrank()) { 
 868              		.loc 1 284 0 discriminator 1
 869 0520 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 870 0522 40F20002 		movw	r2, #:lower16:neighbors_vars
 871 0526 C0F20002 		movt	r2, #:upper16:neighbors_vars
 872 052a 0B46     		mov	r3, r1
 873 052c 4FEA0313 		lsl	r3, r3, #4
 874 0530 5B18     		adds	r3, r3, r1
 875 0532 4FEA4303 		lsl	r3, r3, #1
 876 0536 D318     		adds	r3, r2, r3
 877 0538 03F11003 		add	r3, r3, #16
 878 053c B3F80530 		ldrh	r3, [r3, #5]	@ unaligned
 879 0540 9CB2     		uxth	r4, r3
 880 0542 FFF7FEFF 		bl	neighbors_getMyDAGrank
 881 0546 0346     		mov	r3, r0
 283:openstack/02b-MAChigh/neighbors.c ****    if (neighbors_vars.neighbors[index].used==TRUE &&
 882              		.loc 1 283 0 discriminator 1
 883 0548 9C42     		cmp	r4, r3
 884 054a 03D3     		bcc	.L48
 285:openstack/02b-MAChigh/neighbors.c ****       returnVal = TRUE;
 885              		.loc 1 285 0
 886 054c 4FF00103 		mov	r3, #1
 887 0550 FB73     		strb	r3, [r7, #15]
 888 0552 02E0     		b	.L49
 889              	.L48:
 286:openstack/02b-MAChigh/neighbors.c ****    } else {
 287:openstack/02b-MAChigh/neighbors.c ****       returnVal = FALSE;
 890              		.loc 1 287 0
 891 0554 4FF00003 		mov	r3, #0
 892 0558 FB73     		strb	r3, [r7, #15]
 893              	.L49:
 288:openstack/02b-MAChigh/neighbors.c ****    }
 289:openstack/02b-MAChigh/neighbors.c ****    
 290:openstack/02b-MAChigh/neighbors.c ****    return returnVal;
 894              		.loc 1 290 0
 895 055a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 291:openstack/02b-MAChigh/neighbors.c **** }
 896              		.loc 1 291 0
 897 055c 1846     		mov	r0, r3
 898 055e 07F11407 		add	r7, r7, #20
 899 0562 BD46     		mov	sp, r7
 900 0564 90BD     		pop	{r4, r7, pc}
 901              		.cfi_endproc
 902              	.LFE8:
 904 0566 00BF     		.align	2
 905              		.global	neighbors_indicateRx
 906              		.thumb
 907              		.thumb_func
 909              	neighbors_indicateRx:
 910              	.LFB9:
 292:openstack/02b-MAChigh/neighbors.c **** 
 293:openstack/02b-MAChigh/neighbors.c **** //===== updating neighbor information
 294:openstack/02b-MAChigh/neighbors.c **** 
 295:openstack/02b-MAChigh/neighbors.c **** /**
 296:openstack/02b-MAChigh/neighbors.c **** \brief Indicate some (non-ACK) packet was received from a neighbor.
 297:openstack/02b-MAChigh/neighbors.c **** 
 298:openstack/02b-MAChigh/neighbors.c **** This function should be called for each received (non-ACK) packet so neighbor
 299:openstack/02b-MAChigh/neighbors.c **** statistics in the neighbor table can be updated.
 300:openstack/02b-MAChigh/neighbors.c **** 
 301:openstack/02b-MAChigh/neighbors.c **** The fields which are updated are:
 302:openstack/02b-MAChigh/neighbors.c **** - numRx
 303:openstack/02b-MAChigh/neighbors.c **** - rssi
 304:openstack/02b-MAChigh/neighbors.c **** - asn
 305:openstack/02b-MAChigh/neighbors.c **** - stableNeighbor
 306:openstack/02b-MAChigh/neighbors.c **** - switchStabilityCounter
 307:openstack/02b-MAChigh/neighbors.c **** 
 308:openstack/02b-MAChigh/neighbors.c **** \param[in] l2_src MAC source address of the packet, i.e. the neighbor who sent
 309:openstack/02b-MAChigh/neighbors.c ****    the packet just received.
 310:openstack/02b-MAChigh/neighbors.c **** \param[in] rssi   RSSI with which this packet was received.
 311:openstack/02b-MAChigh/neighbors.c **** \param[in] asnTs  ASN at which this packet was received.
 312:openstack/02b-MAChigh/neighbors.c **** \param[in] joinPrioPresent Whether a join priority was present in the received
 313:openstack/02b-MAChigh/neighbors.c ****    packet.
 314:openstack/02b-MAChigh/neighbors.c **** \param[in] joinPrio The join priority present in the packet, if any.
 315:openstack/02b-MAChigh/neighbors.c **** */
 316:openstack/02b-MAChigh/neighbors.c **** void neighbors_indicateRx(open_addr_t* l2_src,
 317:openstack/02b-MAChigh/neighbors.c ****                           int8_t       rssi,
 318:openstack/02b-MAChigh/neighbors.c ****                           asn_t*       asnTs,
 319:openstack/02b-MAChigh/neighbors.c ****                           bool         joinPrioPresent,
 320:openstack/02b-MAChigh/neighbors.c ****                           uint8_t      joinPrio) {
 911              		.loc 1 320 0
 912              		.cfi_startproc
 913              		@ args = 4, pretend = 0, frame = 24
 914              		@ frame_needed = 1, uses_anonymous_args = 0
 915 0568 80B5     		push	{r7, lr}
 916              	.LCFI25:
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 056a 88B0     		sub	sp, sp, #32
 921              	.LCFI26:
 922              		.cfi_def_cfa_offset 40
 923 056c 02AF     		add	r7, sp, #8
 924              	.LCFI27:
 925              		.cfi_def_cfa 7, 32
 926 056e F860     		str	r0, [r7, #12]
 927 0570 7A60     		str	r2, [r7, #4]
 928 0572 0A46     		mov	r2, r1
 929 0574 FA72     		strb	r2, [r7, #11]
 930 0576 BB72     		strb	r3, [r7, #10]
 321:openstack/02b-MAChigh/neighbors.c ****    uint8_t i;
 322:openstack/02b-MAChigh/neighbors.c ****    bool    newNeighbor;
 323:openstack/02b-MAChigh/neighbors.c ****    
 324:openstack/02b-MAChigh/neighbors.c ****    // update existing neighbor
 325:openstack/02b-MAChigh/neighbors.c ****    newNeighbor = TRUE;
 931              		.loc 1 325 0
 932 0578 4FF00103 		mov	r3, #1
 933 057c BB75     		strb	r3, [r7, #22]
 326:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 934              		.loc 1 326 0
 935 057e 4FF00003 		mov	r3, #0
 936 0582 FB75     		strb	r3, [r7, #23]
 937 0584 67E1     		b	.L52
 938              	.L60:
 327:openstack/02b-MAChigh/neighbors.c ****       if (isThisRowMatching(l2_src,i)) {
 939              		.loc 1 327 0
 940 0586 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 941 0588 F868     		ldr	r0, [r7, #12]
 942 058a 1946     		mov	r1, r3
 943 058c FFF7FEFF 		bl	isThisRowMatching
 944 0590 0346     		mov	r3, r0
 945 0592 002B     		cmp	r3, #0
 946 0594 00F05B81 		beq	.L53
 328:openstack/02b-MAChigh/neighbors.c ****          
 329:openstack/02b-MAChigh/neighbors.c ****          // this is not a new neighbor
 330:openstack/02b-MAChigh/neighbors.c ****          newNeighbor = FALSE;
 947              		.loc 1 330 0
 948 0598 4FF00003 		mov	r3, #0
 949 059c BB75     		strb	r3, [r7, #22]
 331:openstack/02b-MAChigh/neighbors.c ****          
 332:openstack/02b-MAChigh/neighbors.c ****          // update numRx, rssi, asn
 333:openstack/02b-MAChigh/neighbors.c ****          neighbors_vars.neighbors[i].numRx++;
 950              		.loc 1 333 0
 951 059e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 952 05a0 40F20001 		movw	r1, #:lower16:neighbors_vars
 953 05a4 C0F20001 		movt	r1, #:upper16:neighbors_vars
 954 05a8 1346     		mov	r3, r2
 955 05aa 4FEA0313 		lsl	r3, r3, #4
 956 05ae 9B18     		adds	r3, r3, r2
 957 05b0 4FEA4303 		lsl	r3, r3, #1
 958 05b4 CB18     		adds	r3, r1, r3
 959 05b6 03F11803 		add	r3, r3, #24
 960 05ba 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 961 05bc 03F10103 		add	r3, r3, #1
 962 05c0 D8B2     		uxtb	r0, r3
 963 05c2 40F20001 		movw	r1, #:lower16:neighbors_vars
 964 05c6 C0F20001 		movt	r1, #:upper16:neighbors_vars
 965 05ca 1346     		mov	r3, r2
 966 05cc 4FEA0313 		lsl	r3, r3, #4
 967 05d0 9B18     		adds	r3, r3, r2
 968 05d2 4FEA4303 		lsl	r3, r3, #1
 969 05d6 CB18     		adds	r3, r1, r3
 970 05d8 03F11803 		add	r3, r3, #24
 971 05dc 0246     		mov	r2, r0
 972 05de 1A70     		strb	r2, [r3, #0]
 334:openstack/02b-MAChigh/neighbors.c ****          neighbors_vars.neighbors[i].rssi=rssi;
 973              		.loc 1 334 0
 974 05e0 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 975 05e2 40F20002 		movw	r2, #:lower16:neighbors_vars
 976 05e6 C0F20002 		movt	r2, #:upper16:neighbors_vars
 977 05ea 0B46     		mov	r3, r1
 978 05ec 4FEA0313 		lsl	r3, r3, #4
 979 05f0 5B18     		adds	r3, r3, r1
 980 05f2 4FEA4303 		lsl	r3, r3, #1
 981 05f6 D318     		adds	r3, r2, r3
 982 05f8 03F11003 		add	r3, r3, #16
 983 05fc FA7A     		ldrb	r2, [r7, #11]
 984 05fe DA71     		strb	r2, [r3, #7]
 335:openstack/02b-MAChigh/neighbors.c ****          memcpy(&neighbors_vars.neighbors[i].asn,asnTs,sizeof(asn_t));
 985              		.loc 1 335 0
 986 0600 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 987 0602 1346     		mov	r3, r2
 988 0604 4FEA0313 		lsl	r3, r3, #4
 989 0608 9B18     		adds	r3, r3, r2
 990 060a 4FEA4303 		lsl	r3, r3, #1
 991 060e 03F11802 		add	r2, r3, #24
 992 0612 40F20003 		movw	r3, #:lower16:neighbors_vars
 993 0616 C0F20003 		movt	r3, #:upper16:neighbors_vars
 994 061a D318     		adds	r3, r2, r3
 995 061c 03F10403 		add	r3, r3, #4
 996 0620 7A68     		ldr	r2, [r7, #4]
 997 0622 1168     		ldr	r1, [r2, #0]	@ unaligned
 998 0624 1960     		str	r1, [r3, #0]	@ unaligned
 999 0626 1279     		ldrb	r2, [r2, #4]
 1000 0628 1A71     		strb	r2, [r3, #4]
 336:openstack/02b-MAChigh/neighbors.c ****          //update jp
 337:openstack/02b-MAChigh/neighbors.c ****          if (joinPrioPresent==TRUE){
 1001              		.loc 1 337 0
 1002 062a BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1003 062c 002B     		cmp	r3, #0
 1004 062e 10D0     		beq	.L54
 338:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].joinPrio=joinPrio;
 1005              		.loc 1 338 0
 1006 0630 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1007 0632 40F20002 		movw	r2, #:lower16:neighbors_vars
 1008 0636 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1009 063a 0B46     		mov	r3, r1
 1010 063c 4FEA0313 		lsl	r3, r3, #4
 1011 0640 5B18     		adds	r3, r3, r1
 1012 0642 4FEA4303 		lsl	r3, r3, #1
 1013 0646 D318     		adds	r3, r2, r3
 1014 0648 03F12003 		add	r3, r3, #32
 1015 064c 97F82020 		ldrb	r2, [r7, #32]
 1016 0650 5A70     		strb	r2, [r3, #1]
 1017              	.L54:
 339:openstack/02b-MAChigh/neighbors.c ****          }
 340:openstack/02b-MAChigh/neighbors.c ****          
 341:openstack/02b-MAChigh/neighbors.c ****          // update stableNeighbor, switchStabilityCounter
 342:openstack/02b-MAChigh/neighbors.c ****          if (neighbors_vars.neighbors[i].stableNeighbor==FALSE) {
 1018              		.loc 1 342 0
 1019 0652 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1020 0654 40F20002 		movw	r2, #:lower16:neighbors_vars
 1021 0658 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1022 065c 0B46     		mov	r3, r1
 1023 065e 4FEA0313 		lsl	r3, r3, #4
 1024 0662 5B18     		adds	r3, r3, r1
 1025 0664 4FEA4303 		lsl	r3, r3, #1
 1026 0668 D318     		adds	r3, r2, r3
 1027 066a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1028 066c 83F00103 		eor	r3, r3, #1
 1029 0670 DBB2     		uxtb	r3, r3
 1030 0672 002B     		cmp	r3, #0
 1031 0674 6ED0     		beq	.L55
 343:openstack/02b-MAChigh/neighbors.c ****             if (neighbors_vars.neighbors[i].rssi>BADNEIGHBORMAXRSSI) {
 1032              		.loc 1 343 0
 1033 0676 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1034 0678 40F20002 		movw	r2, #:lower16:neighbors_vars
 1035 067c C0F20002 		movt	r2, #:upper16:neighbors_vars
 1036 0680 0B46     		mov	r3, r1
 1037 0682 4FEA0313 		lsl	r3, r3, #4
 1038 0686 5B18     		adds	r3, r3, r1
 1039 0688 4FEA4303 		lsl	r3, r3, #1
 1040 068c D318     		adds	r3, r2, r3
 1041 068e 03F11003 		add	r3, r3, #16
 1042 0692 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1043 0694 5BB2     		sxtb	r3, r3
 1044 0696 13F14F0F 		cmn	r3, #79
 1045 069a 4BDB     		blt	.L56
 344:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].switchStabilityCounter++;
 1046              		.loc 1 344 0
 1047 069c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 1048 069e 40F20001 		movw	r1, #:lower16:neighbors_vars
 1049 06a2 C0F20001 		movt	r1, #:upper16:neighbors_vars
 1050 06a6 1346     		mov	r3, r2
 1051 06a8 4FEA0313 		lsl	r3, r3, #4
 1052 06ac 9B18     		adds	r3, r3, r2
 1053 06ae 4FEA4303 		lsl	r3, r3, #1
 1054 06b2 CB18     		adds	r3, r1, r3
 1055 06b4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1056 06b6 03F10103 		add	r3, r3, #1
 1057 06ba D8B2     		uxtb	r0, r3
 1058 06bc 40F20001 		movw	r1, #:lower16:neighbors_vars
 1059 06c0 C0F20001 		movt	r1, #:upper16:neighbors_vars
 1060 06c4 1346     		mov	r3, r2
 1061 06c6 4FEA0313 		lsl	r3, r3, #4
 1062 06ca 9B18     		adds	r3, r3, r2
 1063 06cc 4FEA4303 		lsl	r3, r3, #1
 1064 06d0 CB18     		adds	r3, r1, r3
 1065 06d2 0246     		mov	r2, r0
 1066 06d4 DA70     		strb	r2, [r3, #3]
 345:openstack/02b-MAChigh/neighbors.c ****                if (neighbors_vars.neighbors[i].switchStabilityCounter>=SWITCHSTABILITYTHRESHOLD) {
 1067              		.loc 1 345 0
 1068 06d6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1069 06d8 40F20002 		movw	r2, #:lower16:neighbors_vars
 1070 06dc C0F20002 		movt	r2, #:upper16:neighbors_vars
 1071 06e0 0B46     		mov	r3, r1
 1072 06e2 4FEA0313 		lsl	r3, r3, #4
 1073 06e6 5B18     		adds	r3, r3, r1
 1074 06e8 4FEA4303 		lsl	r3, r3, #1
 1075 06ec D318     		adds	r3, r2, r3
 1076 06ee DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1077 06f0 022B     		cmp	r3, #2
 1078 06f2 40F2B580 		bls	.L62
 346:openstack/02b-MAChigh/neighbors.c ****                   neighbors_vars.neighbors[i].switchStabilityCounter=0;
 1079              		.loc 1 346 0
 1080 06f6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1081 06f8 40F20002 		movw	r2, #:lower16:neighbors_vars
 1082 06fc C0F20002 		movt	r2, #:upper16:neighbors_vars
 1083 0700 0B46     		mov	r3, r1
 1084 0702 4FEA0313 		lsl	r3, r3, #4
 1085 0706 5B18     		adds	r3, r3, r1
 1086 0708 4FEA4303 		lsl	r3, r3, #1
 1087 070c D318     		adds	r3, r2, r3
 1088 070e 4FF00002 		mov	r2, #0
 1089 0712 DA70     		strb	r2, [r3, #3]
 347:openstack/02b-MAChigh/neighbors.c ****                   neighbors_vars.neighbors[i].stableNeighbor=TRUE;
 1090              		.loc 1 347 0
 1091 0714 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1092 0716 40F20002 		movw	r2, #:lower16:neighbors_vars
 1093 071a C0F20002 		movt	r2, #:upper16:neighbors_vars
 1094 071e 0B46     		mov	r3, r1
 1095 0720 4FEA0313 		lsl	r3, r3, #4
 1096 0724 5B18     		adds	r3, r3, r1
 1097 0726 4FEA4303 		lsl	r3, r3, #1
 1098 072a D318     		adds	r3, r2, r3
 1099 072c 4FF00102 		mov	r2, #1
 1100 0730 9A70     		strb	r2, [r3, #2]
 348:openstack/02b-MAChigh/neighbors.c ****                }
 349:openstack/02b-MAChigh/neighbors.c ****             } else {
 350:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].switchStabilityCounter=0;
 351:openstack/02b-MAChigh/neighbors.c ****             }
 352:openstack/02b-MAChigh/neighbors.c ****          } else if (neighbors_vars.neighbors[i].stableNeighbor==TRUE) {
 353:openstack/02b-MAChigh/neighbors.c ****             if (neighbors_vars.neighbors[i].rssi<GOODNEIGHBORMINRSSI) {
 354:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].switchStabilityCounter++;
 355:openstack/02b-MAChigh/neighbors.c ****                if (neighbors_vars.neighbors[i].switchStabilityCounter>=SWITCHSTABILITYTHRESHOLD) {
 356:openstack/02b-MAChigh/neighbors.c ****                   neighbors_vars.neighbors[i].switchStabilityCounter=0;
 357:openstack/02b-MAChigh/neighbors.c ****                    neighbors_vars.neighbors[i].stableNeighbor=FALSE;
 358:openstack/02b-MAChigh/neighbors.c ****                }
 359:openstack/02b-MAChigh/neighbors.c ****             } else {
 360:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].switchStabilityCounter=0;
 361:openstack/02b-MAChigh/neighbors.c ****             }
 362:openstack/02b-MAChigh/neighbors.c ****          }
 363:openstack/02b-MAChigh/neighbors.c ****          
 364:openstack/02b-MAChigh/neighbors.c ****          // stop looping
 365:openstack/02b-MAChigh/neighbors.c ****          break;
 1101              		.loc 1 365 0
 1102 0732 95E0     		b	.L62
 1103              	.L56:
 350:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].switchStabilityCounter=0;
 1104              		.loc 1 350 0
 1105 0734 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1106 0736 40F20002 		movw	r2, #:lower16:neighbors_vars
 1107 073a C0F20002 		movt	r2, #:upper16:neighbors_vars
 1108 073e 0B46     		mov	r3, r1
 1109 0740 4FEA0313 		lsl	r3, r3, #4
 1110 0744 5B18     		adds	r3, r3, r1
 1111 0746 4FEA4303 		lsl	r3, r3, #1
 1112 074a D318     		adds	r3, r2, r3
 1113 074c 4FF00002 		mov	r2, #0
 1114 0750 DA70     		strb	r2, [r3, #3]
 1115              		.loc 1 365 0
 1116 0752 85E0     		b	.L62
 1117              	.L55:
 352:openstack/02b-MAChigh/neighbors.c ****          } else if (neighbors_vars.neighbors[i].stableNeighbor==TRUE) {
 1118              		.loc 1 352 0
 1119 0754 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1120 0756 40F20002 		movw	r2, #:lower16:neighbors_vars
 1121 075a C0F20002 		movt	r2, #:upper16:neighbors_vars
 1122 075e 0B46     		mov	r3, r1
 1123 0760 4FEA0313 		lsl	r3, r3, #4
 1124 0764 5B18     		adds	r3, r3, r1
 1125 0766 4FEA4303 		lsl	r3, r3, #1
 1126 076a D318     		adds	r3, r2, r3
 1127 076c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1128 076e 002B     		cmp	r3, #0
 1129 0770 76D0     		beq	.L62
 353:openstack/02b-MAChigh/neighbors.c ****             if (neighbors_vars.neighbors[i].rssi<GOODNEIGHBORMINRSSI) {
 1130              		.loc 1 353 0
 1131 0772 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1132 0774 40F20002 		movw	r2, #:lower16:neighbors_vars
 1133 0778 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1134 077c 0B46     		mov	r3, r1
 1135 077e 4FEA0313 		lsl	r3, r3, #4
 1136 0782 5B18     		adds	r3, r3, r1
 1137 0784 4FEA4303 		lsl	r3, r3, #1
 1138 0788 D318     		adds	r3, r2, r3
 1139 078a 03F11003 		add	r3, r3, #16
 1140 078e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1141 0790 5BB2     		sxtb	r3, r3
 1142 0792 13F15A0F 		cmn	r3, #90
 1143 0796 4ADA     		bge	.L58
 354:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].switchStabilityCounter++;
 1144              		.loc 1 354 0
 1145 0798 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 1146 079a 40F20001 		movw	r1, #:lower16:neighbors_vars
 1147 079e C0F20001 		movt	r1, #:upper16:neighbors_vars
 1148 07a2 1346     		mov	r3, r2
 1149 07a4 4FEA0313 		lsl	r3, r3, #4
 1150 07a8 9B18     		adds	r3, r3, r2
 1151 07aa 4FEA4303 		lsl	r3, r3, #1
 1152 07ae CB18     		adds	r3, r1, r3
 1153 07b0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1154 07b2 03F10103 		add	r3, r3, #1
 1155 07b6 D8B2     		uxtb	r0, r3
 1156 07b8 40F20001 		movw	r1, #:lower16:neighbors_vars
 1157 07bc C0F20001 		movt	r1, #:upper16:neighbors_vars
 1158 07c0 1346     		mov	r3, r2
 1159 07c2 4FEA0313 		lsl	r3, r3, #4
 1160 07c6 9B18     		adds	r3, r3, r2
 1161 07c8 4FEA4303 		lsl	r3, r3, #1
 1162 07cc CB18     		adds	r3, r1, r3
 1163 07ce 0246     		mov	r2, r0
 1164 07d0 DA70     		strb	r2, [r3, #3]
 355:openstack/02b-MAChigh/neighbors.c ****                if (neighbors_vars.neighbors[i].switchStabilityCounter>=SWITCHSTABILITYTHRESHOLD) {
 1165              		.loc 1 355 0
 1166 07d2 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1167 07d4 40F20002 		movw	r2, #:lower16:neighbors_vars
 1168 07d8 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1169 07dc 0B46     		mov	r3, r1
 1170 07de 4FEA0313 		lsl	r3, r3, #4
 1171 07e2 5B18     		adds	r3, r3, r1
 1172 07e4 4FEA4303 		lsl	r3, r3, #1
 1173 07e8 D318     		adds	r3, r2, r3
 1174 07ea DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1175 07ec 022B     		cmp	r3, #2
 1176 07ee 37D9     		bls	.L62
 356:openstack/02b-MAChigh/neighbors.c ****                   neighbors_vars.neighbors[i].switchStabilityCounter=0;
 1177              		.loc 1 356 0
 1178 07f0 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1179 07f2 40F20002 		movw	r2, #:lower16:neighbors_vars
 1180 07f6 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1181 07fa 0B46     		mov	r3, r1
 1182 07fc 4FEA0313 		lsl	r3, r3, #4
 1183 0800 5B18     		adds	r3, r3, r1
 1184 0802 4FEA4303 		lsl	r3, r3, #1
 1185 0806 D318     		adds	r3, r2, r3
 1186 0808 4FF00002 		mov	r2, #0
 1187 080c DA70     		strb	r2, [r3, #3]
 357:openstack/02b-MAChigh/neighbors.c ****                    neighbors_vars.neighbors[i].stableNeighbor=FALSE;
 1188              		.loc 1 357 0
 1189 080e F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1190 0810 40F20002 		movw	r2, #:lower16:neighbors_vars
 1191 0814 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1192 0818 0B46     		mov	r3, r1
 1193 081a 4FEA0313 		lsl	r3, r3, #4
 1194 081e 5B18     		adds	r3, r3, r1
 1195 0820 4FEA4303 		lsl	r3, r3, #1
 1196 0824 D318     		adds	r3, r2, r3
 1197 0826 4FF00002 		mov	r2, #0
 1198 082a 9A70     		strb	r2, [r3, #2]
 1199              		.loc 1 365 0
 1200 082c 18E0     		b	.L62
 1201              	.L58:
 360:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].switchStabilityCounter=0;
 1202              		.loc 1 360 0
 1203 082e F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1204 0830 40F20002 		movw	r2, #:lower16:neighbors_vars
 1205 0834 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1206 0838 0B46     		mov	r3, r1
 1207 083a 4FEA0313 		lsl	r3, r3, #4
 1208 083e 5B18     		adds	r3, r3, r1
 1209 0840 4FEA4303 		lsl	r3, r3, #1
 1210 0844 D318     		adds	r3, r2, r3
 1211 0846 4FF00002 		mov	r2, #0
 1212 084a DA70     		strb	r2, [r3, #3]
 1213              		.loc 1 365 0
 1214 084c 08E0     		b	.L62
 1215              	.L53:
 326:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1216              		.loc 1 326 0
 1217 084e FB7D     		ldrb	r3, [r7, #23]
 1218 0850 03F10103 		add	r3, r3, #1
 1219 0854 FB75     		strb	r3, [r7, #23]
 1220              	.L52:
 326:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1221              		.loc 1 326 0 is_stmt 0 discriminator 1
 1222 0856 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1223 0858 092B     		cmp	r3, #9
 1224 085a 7FF694AE 		bls	.L60
 1225 085e 00E0     		b	.L59
 1226              	.L62:
 1227              		.loc 1 365 0 is_stmt 1
 1228 0860 00BF     		nop
 1229              	.L59:
 366:openstack/02b-MAChigh/neighbors.c ****       }
 367:openstack/02b-MAChigh/neighbors.c ****    }
 368:openstack/02b-MAChigh/neighbors.c ****    
 369:openstack/02b-MAChigh/neighbors.c ****    // register new neighbor
 370:openstack/02b-MAChigh/neighbors.c ****    if (newNeighbor==TRUE) {
 1230              		.loc 1 370 0
 1231 0862 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1232 0864 002B     		cmp	r3, #0
 1233 0866 0AD0     		beq	.L51
 371:openstack/02b-MAChigh/neighbors.c ****       registerNewNeighbor(l2_src, rssi, asnTs, joinPrioPresent,joinPrio);
 1234              		.loc 1 371 0
 1235 0868 97F90B20 		ldrsb	r2, [r7, #11]
 1236 086c BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1237 086e 97F82010 		ldrb	r1, [r7, #32]	@ zero_extendqisi2
 1238 0872 0091     		str	r1, [sp, #0]
 1239 0874 F868     		ldr	r0, [r7, #12]
 1240 0876 1146     		mov	r1, r2
 1241 0878 7A68     		ldr	r2, [r7, #4]
 1242 087a FFF7FEFF 		bl	registerNewNeighbor
 1243              	.L51:
 372:openstack/02b-MAChigh/neighbors.c ****    }
 373:openstack/02b-MAChigh/neighbors.c **** }
 1244              		.loc 1 373 0
 1245 087e 07F11807 		add	r7, r7, #24
 1246 0882 BD46     		mov	sp, r7
 1247 0884 80BD     		pop	{r7, pc}
 1248              		.cfi_endproc
 1249              	.LFE9:
 1251 0886 00BF     		.align	2
 1252              		.global	neighbors_indicateTx
 1253              		.thumb
 1254              		.thumb_func
 1256              	neighbors_indicateTx:
 1257              	.LFB10:
 374:openstack/02b-MAChigh/neighbors.c **** 
 375:openstack/02b-MAChigh/neighbors.c **** /**
 376:openstack/02b-MAChigh/neighbors.c **** \brief Indicate some packet was sent to some neighbor.
 377:openstack/02b-MAChigh/neighbors.c **** 
 378:openstack/02b-MAChigh/neighbors.c **** This function should be called for each transmitted (non-ACK) packet so
 379:openstack/02b-MAChigh/neighbors.c **** neighbor statistics in the neighbor table can be updated.
 380:openstack/02b-MAChigh/neighbors.c **** 
 381:openstack/02b-MAChigh/neighbors.c **** The fields which are updated are:
 382:openstack/02b-MAChigh/neighbors.c **** - numTx
 383:openstack/02b-MAChigh/neighbors.c **** - numTxACK
 384:openstack/02b-MAChigh/neighbors.c **** - asn
 385:openstack/02b-MAChigh/neighbors.c **** 
 386:openstack/02b-MAChigh/neighbors.c **** \param[in] l2_dest MAC destination address of the packet, i.e. the neighbor
 387:openstack/02b-MAChigh/neighbors.c ****    who I just sent the packet to.
 388:openstack/02b-MAChigh/neighbors.c **** \param[in] numTxAttempts Number of transmission attempts to this neighbor.
 389:openstack/02b-MAChigh/neighbors.c **** \param[in] was_finally_acked TRUE iff the packet was ACK'ed by the neighbor
 390:openstack/02b-MAChigh/neighbors.c ****    on final transmission attempt.
 391:openstack/02b-MAChigh/neighbors.c **** \param[in] asnTs ASN of the last transmission attempt.
 392:openstack/02b-MAChigh/neighbors.c **** */
 393:openstack/02b-MAChigh/neighbors.c **** void neighbors_indicateTx(open_addr_t* l2_dest,
 394:openstack/02b-MAChigh/neighbors.c ****                           uint8_t      numTxAttempts,
 395:openstack/02b-MAChigh/neighbors.c ****                           bool         was_finally_acked,
 396:openstack/02b-MAChigh/neighbors.c ****                           asn_t*       asnTs) {
 1258              		.loc 1 396 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 24
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0888 80B5     		push	{r7, lr}
 1263              	.LCFI28:
 1264              		.cfi_def_cfa_offset 8
 1265              		.cfi_offset 7, -8
 1266              		.cfi_offset 14, -4
 1267 088a 86B0     		sub	sp, sp, #24
 1268              	.LCFI29:
 1269              		.cfi_def_cfa_offset 32
 1270 088c 00AF     		add	r7, sp, #0
 1271              	.LCFI30:
 1272              		.cfi_def_cfa_register 7
 1273 088e F860     		str	r0, [r7, #12]
 1274 0890 7B60     		str	r3, [r7, #4]
 1275 0892 0B46     		mov	r3, r1
 1276 0894 FB72     		strb	r3, [r7, #11]
 1277 0896 1346     		mov	r3, r2
 1278 0898 BB72     		strb	r3, [r7, #10]
 397:openstack/02b-MAChigh/neighbors.c ****    uint8_t i;
 398:openstack/02b-MAChigh/neighbors.c ****    // don't run through this function if packet was sent to broadcast address
 399:openstack/02b-MAChigh/neighbors.c ****    if (packetfunctions_isBroadcastMulticast(l2_dest)==TRUE) {
 1279              		.loc 1 399 0
 1280 089a F868     		ldr	r0, [r7, #12]
 1281 089c FFF7FEFF 		bl	packetfunctions_isBroadcastMulticast
 1282 08a0 0346     		mov	r3, r0
 1283 08a2 002B     		cmp	r3, #0
 1284 08a4 40F0EC80 		bne	.L71
 1285              	.L64:
 400:openstack/02b-MAChigh/neighbors.c ****       return;
 401:openstack/02b-MAChigh/neighbors.c ****    }
 402:openstack/02b-MAChigh/neighbors.c ****    
 403:openstack/02b-MAChigh/neighbors.c ****    // loop through neighbor table
 404:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1286              		.loc 1 404 0
 1287 08a8 4FF00003 		mov	r3, #0
 1288 08ac FB75     		strb	r3, [r7, #23]
 1289 08ae E2E0     		b	.L66
 1290              	.L70:
 405:openstack/02b-MAChigh/neighbors.c ****       if (isThisRowMatching(l2_dest,i)) {
 1291              		.loc 1 405 0
 1292 08b0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1293 08b2 F868     		ldr	r0, [r7, #12]
 1294 08b4 1946     		mov	r1, r3
 1295 08b6 FFF7FEFF 		bl	isThisRowMatching
 1296 08ba 0346     		mov	r3, r0
 1297 08bc 002B     		cmp	r3, #0
 1298 08be 00F0D680 		beq	.L67
 406:openstack/02b-MAChigh/neighbors.c ****          // handle roll-over case
 407:openstack/02b-MAChigh/neighbors.c ****         
 408:openstack/02b-MAChigh/neighbors.c ****           if (neighbors_vars.neighbors[i].numTx>(0xff-numTxAttempts)) {
 1299              		.loc 1 408 0
 1300 08c2 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1301 08c4 40F20002 		movw	r2, #:lower16:neighbors_vars
 1302 08c8 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1303 08cc 0B46     		mov	r3, r1
 1304 08ce 4FEA0313 		lsl	r3, r3, #4
 1305 08d2 5B18     		adds	r3, r3, r1
 1306 08d4 4FEA4303 		lsl	r3, r3, #1
 1307 08d8 D318     		adds	r3, r2, r3
 1308 08da 03F11803 		add	r3, r3, #24
 1309 08de 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1310 08e0 1A46     		mov	r2, r3
 1311 08e2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1312 08e4 C3F1FF03 		rsb	r3, r3, #255
 1313 08e8 9A42     		cmp	r2, r3
 1314 08ea 64DD     		ble	.L68
 409:openstack/02b-MAChigh/neighbors.c ****               neighbors_vars.neighbors[i].numWraps++; //counting the number of times that tx wraps.
 1315              		.loc 1 409 0
 1316 08ec FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 1317 08ee 40F20001 		movw	r1, #:lower16:neighbors_vars
 1318 08f2 C0F20001 		movt	r1, #:upper16:neighbors_vars
 1319 08f6 1346     		mov	r3, r2
 1320 08f8 4FEA0313 		lsl	r3, r3, #4
 1321 08fc 9B18     		adds	r3, r3, r2
 1322 08fe 4FEA4303 		lsl	r3, r3, #1
 1323 0902 CB18     		adds	r3, r1, r3
 1324 0904 03F11803 		add	r3, r3, #24
 1325 0908 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1326 090a 03F10103 		add	r3, r3, #1
 1327 090e D8B2     		uxtb	r0, r3
 1328 0910 40F20001 		movw	r1, #:lower16:neighbors_vars
 1329 0914 C0F20001 		movt	r1, #:upper16:neighbors_vars
 1330 0918 1346     		mov	r3, r2
 1331 091a 4FEA0313 		lsl	r3, r3, #4
 1332 091e 9B18     		adds	r3, r3, r2
 1333 0920 4FEA4303 		lsl	r3, r3, #1
 1334 0924 CB18     		adds	r3, r1, r3
 1335 0926 03F11803 		add	r3, r3, #24
 1336 092a 0246     		mov	r2, r0
 1337 092c DA70     		strb	r2, [r3, #3]
 410:openstack/02b-MAChigh/neighbors.c ****               neighbors_vars.neighbors[i].numTx/=2;
 1338              		.loc 1 410 0
 1339 092e F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1340 0930 F87D     		ldrb	r0, [r7, #23]	@ zero_extendqisi2
 1341 0932 40F20002 		movw	r2, #:lower16:neighbors_vars
 1342 0936 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1343 093a 0346     		mov	r3, r0
 1344 093c 4FEA0313 		lsl	r3, r3, #4
 1345 0940 1B18     		adds	r3, r3, r0
 1346 0942 4FEA4303 		lsl	r3, r3, #1
 1347 0946 D318     		adds	r3, r2, r3
 1348 0948 03F11803 		add	r3, r3, #24
 1349 094c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1350 094e 4FEA5303 		lsr	r3, r3, #1
 1351 0952 D8B2     		uxtb	r0, r3
 1352 0954 40F20002 		movw	r2, #:lower16:neighbors_vars
 1353 0958 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1354 095c 0B46     		mov	r3, r1
 1355 095e 4FEA0313 		lsl	r3, r3, #4
 1356 0962 5B18     		adds	r3, r3, r1
 1357 0964 4FEA4303 		lsl	r3, r3, #1
 1358 0968 D318     		adds	r3, r2, r3
 1359 096a 03F11803 		add	r3, r3, #24
 1360 096e 0246     		mov	r2, r0
 1361 0970 5A70     		strb	r2, [r3, #1]
 411:openstack/02b-MAChigh/neighbors.c ****               neighbors_vars.neighbors[i].numTxACK/=2;
 1362              		.loc 1 411 0
 1363 0972 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1364 0974 F87D     		ldrb	r0, [r7, #23]	@ zero_extendqisi2
 1365 0976 40F20002 		movw	r2, #:lower16:neighbors_vars
 1366 097a C0F20002 		movt	r2, #:upper16:neighbors_vars
 1367 097e 0346     		mov	r3, r0
 1368 0980 4FEA0313 		lsl	r3, r3, #4
 1369 0984 1B18     		adds	r3, r3, r0
 1370 0986 4FEA4303 		lsl	r3, r3, #1
 1371 098a D318     		adds	r3, r2, r3
 1372 098c 03F11803 		add	r3, r3, #24
 1373 0990 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1374 0992 4FEA5303 		lsr	r3, r3, #1
 1375 0996 D8B2     		uxtb	r0, r3
 1376 0998 40F20002 		movw	r2, #:lower16:neighbors_vars
 1377 099c C0F20002 		movt	r2, #:upper16:neighbors_vars
 1378 09a0 0B46     		mov	r3, r1
 1379 09a2 4FEA0313 		lsl	r3, r3, #4
 1380 09a6 5B18     		adds	r3, r3, r1
 1381 09a8 4FEA4303 		lsl	r3, r3, #1
 1382 09ac D318     		adds	r3, r2, r3
 1383 09ae 03F11803 		add	r3, r3, #24
 1384 09b2 0246     		mov	r2, r0
 1385 09b4 9A70     		strb	r2, [r3, #2]
 1386              	.L68:
 412:openstack/02b-MAChigh/neighbors.c ****            }
 413:openstack/02b-MAChigh/neighbors.c ****          // update statistics
 414:openstack/02b-MAChigh/neighbors.c ****         neighbors_vars.neighbors[i].numTx += numTxAttempts; 
 1387              		.loc 1 414 0
 1388 09b6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 1389 09b8 F87D     		ldrb	r0, [r7, #23]	@ zero_extendqisi2
 1390 09ba 40F20002 		movw	r2, #:lower16:neighbors_vars
 1391 09be C0F20002 		movt	r2, #:upper16:neighbors_vars
 1392 09c2 0346     		mov	r3, r0
 1393 09c4 4FEA0313 		lsl	r3, r3, #4
 1394 09c8 1B18     		adds	r3, r3, r0
 1395 09ca 4FEA4303 		lsl	r3, r3, #1
 1396 09ce D318     		adds	r3, r2, r3
 1397 09d0 03F11803 		add	r3, r3, #24
 1398 09d4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1399 09d6 FB7A     		ldrb	r3, [r7, #11]
 1400 09d8 D318     		adds	r3, r2, r3
 1401 09da D8B2     		uxtb	r0, r3
 1402 09dc 40F20002 		movw	r2, #:lower16:neighbors_vars
 1403 09e0 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1404 09e4 0B46     		mov	r3, r1
 1405 09e6 4FEA0313 		lsl	r3, r3, #4
 1406 09ea 5B18     		adds	r3, r3, r1
 1407 09ec 4FEA4303 		lsl	r3, r3, #1
 1408 09f0 D318     		adds	r3, r2, r3
 1409 09f2 03F11803 		add	r3, r3, #24
 1410 09f6 0246     		mov	r2, r0
 1411 09f8 5A70     		strb	r2, [r3, #1]
 415:openstack/02b-MAChigh/neighbors.c ****         
 416:openstack/02b-MAChigh/neighbors.c ****         if (was_finally_acked==TRUE) {
 1412              		.loc 1 416 0
 1413 09fa BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1414 09fc 002B     		cmp	r3, #0
 1415 09fe 41D0     		beq	.L72
 417:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].numTxACK++;
 1416              		.loc 1 417 0
 1417 0a00 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 1418 0a02 40F20001 		movw	r1, #:lower16:neighbors_vars
 1419 0a06 C0F20001 		movt	r1, #:upper16:neighbors_vars
 1420 0a0a 1346     		mov	r3, r2
 1421 0a0c 4FEA0313 		lsl	r3, r3, #4
 1422 0a10 9B18     		adds	r3, r3, r2
 1423 0a12 4FEA4303 		lsl	r3, r3, #1
 1424 0a16 CB18     		adds	r3, r1, r3
 1425 0a18 03F11803 		add	r3, r3, #24
 1426 0a1c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1427 0a1e 03F10103 		add	r3, r3, #1
 1428 0a22 D8B2     		uxtb	r0, r3
 1429 0a24 40F20001 		movw	r1, #:lower16:neighbors_vars
 1430 0a28 C0F20001 		movt	r1, #:upper16:neighbors_vars
 1431 0a2c 1346     		mov	r3, r2
 1432 0a2e 4FEA0313 		lsl	r3, r3, #4
 1433 0a32 9B18     		adds	r3, r3, r2
 1434 0a34 4FEA4303 		lsl	r3, r3, #1
 1435 0a38 CB18     		adds	r3, r1, r3
 1436 0a3a 03F11803 		add	r3, r3, #24
 1437 0a3e 0246     		mov	r2, r0
 1438 0a40 9A70     		strb	r2, [r3, #2]
 418:openstack/02b-MAChigh/neighbors.c ****             memcpy(&neighbors_vars.neighbors[i].asn,asnTs,sizeof(asn_t));
 1439              		.loc 1 418 0
 1440 0a42 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 1441 0a44 1346     		mov	r3, r2
 1442 0a46 4FEA0313 		lsl	r3, r3, #4
 1443 0a4a 9B18     		adds	r3, r3, r2
 1444 0a4c 4FEA4303 		lsl	r3, r3, #1
 1445 0a50 03F11802 		add	r2, r3, #24
 1446 0a54 40F20003 		movw	r3, #:lower16:neighbors_vars
 1447 0a58 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1448 0a5c D318     		adds	r3, r2, r3
 1449 0a5e 03F10403 		add	r3, r3, #4
 1450 0a62 7A68     		ldr	r2, [r7, #4]
 1451 0a64 1168     		ldr	r1, [r2, #0]	@ unaligned
 1452 0a66 1960     		str	r1, [r3, #0]	@ unaligned
 1453 0a68 1279     		ldrb	r2, [r2, #4]
 1454 0a6a 1A71     		strb	r2, [r3, #4]
 419:openstack/02b-MAChigh/neighbors.c ****         }
 420:openstack/02b-MAChigh/neighbors.c ****         break;
 1455              		.loc 1 420 0
 1456 0a6c 0AE0     		b	.L72
 1457              	.L67:
 404:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1458              		.loc 1 404 0
 1459 0a6e FB7D     		ldrb	r3, [r7, #23]
 1460 0a70 03F10103 		add	r3, r3, #1
 1461 0a74 FB75     		strb	r3, [r7, #23]
 1462              	.L66:
 404:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1463              		.loc 1 404 0 is_stmt 0 discriminator 1
 1464 0a76 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1465 0a78 092B     		cmp	r3, #9
 1466 0a7a 7FF619AF 		bls	.L70
 1467 0a7e 02E0     		b	.L63
 1468              	.L71:
 400:openstack/02b-MAChigh/neighbors.c ****       return;
 1469              		.loc 1 400 0 is_stmt 1
 1470 0a80 00BF     		nop
 1471 0a82 00E0     		b	.L63
 1472              	.L72:
 1473              		.loc 1 420 0
 1474 0a84 00BF     		nop
 1475              	.L63:
 421:openstack/02b-MAChigh/neighbors.c ****       }
 422:openstack/02b-MAChigh/neighbors.c ****    }
 423:openstack/02b-MAChigh/neighbors.c **** }
 1476              		.loc 1 423 0
 1477 0a86 07F11807 		add	r7, r7, #24
 1478 0a8a BD46     		mov	sp, r7
 1479 0a8c 80BD     		pop	{r7, pc}
 1480              		.cfi_endproc
 1481              	.LFE10:
 1483 0a8e 00BF     		.align	2
 1484              		.global	neighbors_indicateRxDIO
 1485              		.thumb
 1486              		.thumb_func
 1488              	neighbors_indicateRxDIO:
 1489              	.LFB11:
 424:openstack/02b-MAChigh/neighbors.c **** 
 425:openstack/02b-MAChigh/neighbors.c **** /**
 426:openstack/02b-MAChigh/neighbors.c **** \brief Indicate I just received a RPL DIO from a neighbor.
 427:openstack/02b-MAChigh/neighbors.c **** 
 428:openstack/02b-MAChigh/neighbors.c **** This function should be called for each received a DIO is received so neighbor
 429:openstack/02b-MAChigh/neighbors.c **** routing information in the neighbor table can be updated.
 430:openstack/02b-MAChigh/neighbors.c **** 
 431:openstack/02b-MAChigh/neighbors.c **** The fields which are updated are:
 432:openstack/02b-MAChigh/neighbors.c **** - DAGrank
 433:openstack/02b-MAChigh/neighbors.c **** 
 434:openstack/02b-MAChigh/neighbors.c **** \param[in] msg The received message with msg->payload pointing to the DIO
 435:openstack/02b-MAChigh/neighbors.c ****    header.
 436:openstack/02b-MAChigh/neighbors.c **** */
 437:openstack/02b-MAChigh/neighbors.c **** void neighbors_indicateRxDIO(OpenQueueEntry_t* msg) {
 1490              		.loc 1 437 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 16
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494 0a90 90B5     		push	{r4, r7, lr}
 1495              	.LCFI31:
 1496              		.cfi_def_cfa_offset 12
 1497              		.cfi_offset 4, -12
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0a92 85B0     		sub	sp, sp, #20
 1501              	.LCFI32:
 1502              		.cfi_def_cfa_offset 32
 1503 0a94 00AF     		add	r7, sp, #0
 1504              	.LCFI33:
 1505              		.cfi_def_cfa_register 7
 1506 0a96 7860     		str	r0, [r7, #4]
 438:openstack/02b-MAChigh/neighbors.c ****    uint8_t          i;
 439:openstack/02b-MAChigh/neighbors.c ****   
 440:openstack/02b-MAChigh/neighbors.c ****    // take ownership over the packet
 441:openstack/02b-MAChigh/neighbors.c ****    msg->owner = COMPONENT_NEIGHBORS;
 1507              		.loc 1 441 0
 1508 0a98 7B68     		ldr	r3, [r7, #4]
 1509 0a9a 4FF00D02 		mov	r2, #13
 1510 0a9e 5A70     		strb	r2, [r3, #1]
 442:openstack/02b-MAChigh/neighbors.c ****    
 443:openstack/02b-MAChigh/neighbors.c ****    // update rank of that neighbor in table
 444:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.dio = (icmpv6rpl_dio_ht*)(msg->payload);
 1511              		.loc 1 444 0
 1512 0aa0 7B68     		ldr	r3, [r7, #4]
 1513 0aa2 5A68     		ldr	r2, [r3, #4]
 1514 0aa4 40F20003 		movw	r3, #:lower16:neighbors_vars
 1515 0aa8 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1516 0aac C3F85821 		str	r2, [r3, #344]
 445:openstack/02b-MAChigh/neighbors.c ****    if (isNeighbor(&(msg->l2_nextORpreviousHop))==TRUE) {
 1517              		.loc 1 445 0
 1518 0ab0 7B68     		ldr	r3, [r7, #4]
 1519 0ab2 03F13803 		add	r3, r3, #56
 1520 0ab6 1846     		mov	r0, r3
 1521 0ab8 FFF7FEFF 		bl	isNeighbor
 1522 0abc 0346     		mov	r3, r0
 1523 0abe 002B     		cmp	r3, #0
 1524 0ac0 00F0B180 		beq	.L74
 446:openstack/02b-MAChigh/neighbors.c ****       for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1525              		.loc 1 446 0
 1526 0ac4 4FF00003 		mov	r3, #0
 1527 0ac8 FB73     		strb	r3, [r7, #15]
 1528 0aca A8E0     		b	.L75
 1529              	.L79:
 447:openstack/02b-MAChigh/neighbors.c ****          if (isThisRowMatching(&(msg->l2_nextORpreviousHop),i)) {
 1530              		.loc 1 447 0
 1531 0acc 7B68     		ldr	r3, [r7, #4]
 1532 0ace 03F13802 		add	r2, r3, #56
 1533 0ad2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1534 0ad4 1046     		mov	r0, r2
 1535 0ad6 1946     		mov	r1, r3
 1536 0ad8 FFF7FEFF 		bl	isThisRowMatching
 1537 0adc 0346     		mov	r3, r0
 1538 0ade 002B     		cmp	r3, #0
 1539 0ae0 00F09980 		beq	.L76
 448:openstack/02b-MAChigh/neighbors.c ****             if (
 449:openstack/02b-MAChigh/neighbors.c ****                   neighbors_vars.dio->rank > neighbors_vars.neighbors[i].DAGrank &&
 1540              		.loc 1 449 0
 1541 0ae4 40F20003 		movw	r3, #:lower16:neighbors_vars
 1542 0ae8 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1543 0aec D3F85831 		ldr	r3, [r3, #344]
 1544 0af0 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1545 0af2 98B2     		uxth	r0, r3
 1546 0af4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1547 0af6 40F20002 		movw	r2, #:lower16:neighbors_vars
 1548 0afa C0F20002 		movt	r2, #:upper16:neighbors_vars
 1549 0afe 0B46     		mov	r3, r1
 1550 0b00 4FEA0313 		lsl	r3, r3, #4
 1551 0b04 5B18     		adds	r3, r3, r1
 1552 0b06 4FEA4303 		lsl	r3, r3, #1
 1553 0b0a D318     		adds	r3, r2, r3
 1554 0b0c 03F11003 		add	r3, r3, #16
 1555 0b10 B3F80530 		ldrh	r3, [r3, #5]	@ unaligned
 1556 0b14 9BB2     		uxth	r3, r3
 448:openstack/02b-MAChigh/neighbors.c ****             if (
 1557              		.loc 1 448 0
 1558 0b16 9842     		cmp	r0, r3
 1559 0b18 63D9     		bls	.L77
 450:openstack/02b-MAChigh/neighbors.c ****                   neighbors_vars.dio->rank - neighbors_vars.neighbors[i].DAGrank >(DEFAULTLINKCOST*
 1560              		.loc 1 450 0
 1561 0b1a 40F20003 		movw	r3, #:lower16:neighbors_vars
 1562 0b1e C0F20003 		movt	r3, #:upper16:neighbors_vars
 1563 0b22 D3F85831 		ldr	r3, [r3, #344]
 1564 0b26 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1565 0b28 9BB2     		uxth	r3, r3
 1566 0b2a 1846     		mov	r0, r3
 1567 0b2c F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1568 0b2e 40F20002 		movw	r2, #:lower16:neighbors_vars
 1569 0b32 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1570 0b36 0B46     		mov	r3, r1
 1571 0b38 4FEA0313 		lsl	r3, r3, #4
 1572 0b3c 5B18     		adds	r3, r3, r1
 1573 0b3e 4FEA4303 		lsl	r3, r3, #1
 1574 0b42 D318     		adds	r3, r2, r3
 1575 0b44 03F11003 		add	r3, r3, #16
 1576 0b48 B3F80530 		ldrh	r3, [r3, #5]	@ unaligned
 1577 0b4c 9BB2     		uxth	r3, r3
 1578 0b4e C31A     		subs	r3, r0, r3
 449:openstack/02b-MAChigh/neighbors.c ****                   neighbors_vars.dio->rank > neighbors_vars.neighbors[i].DAGrank &&
 1579              		.loc 1 449 0
 1580 0b50 B3F5F05F 		cmp	r3, #7680
 1581 0b54 45DD     		ble	.L77
 451:openstack/02b-MAChigh/neighbors.c ****                ) {
 452:openstack/02b-MAChigh/neighbors.c ****                 // the new DAGrank looks suspiciously high, only increment a bit
 453:openstack/02b-MAChigh/neighbors.c ****                 neighbors_vars.neighbors[i].DAGrank += (DEFAULTLINKCOST*2*MINHOPRANKINCREASE);
 1582              		.loc 1 453 0
 1583 0b56 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1584 0b58 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 1585 0b5a 40F20002 		movw	r2, #:lower16:neighbors_vars
 1586 0b5e C0F20002 		movt	r2, #:upper16:neighbors_vars
 1587 0b62 0346     		mov	r3, r0
 1588 0b64 4FEA0313 		lsl	r3, r3, #4
 1589 0b68 1B18     		adds	r3, r3, r0
 1590 0b6a 4FEA4303 		lsl	r3, r3, #1
 1591 0b6e D318     		adds	r3, r2, r3
 1592 0b70 03F11003 		add	r3, r3, #16
 1593 0b74 B3F80530 		ldrh	r3, [r3, #5]	@ unaligned
 1594 0b78 9BB2     		uxth	r3, r3
 1595 0b7a 03F5F053 		add	r3, r3, #7680
 1596 0b7e 98B2     		uxth	r0, r3
 1597 0b80 40F20002 		movw	r2, #:lower16:neighbors_vars
 1598 0b84 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1599 0b88 0B46     		mov	r3, r1
 1600 0b8a 4FEA0313 		lsl	r3, r3, #4
 1601 0b8e 5B18     		adds	r3, r3, r1
 1602 0b90 4FEA4303 		lsl	r3, r3, #1
 1603 0b94 D318     		adds	r3, r2, r3
 1604 0b96 03F11003 		add	r3, r3, #16
 1605 0b9a 0246     		mov	r2, r0	@ movhi
 1606 0b9c A3F80520 		strh	r2, [r3, #5]	@ unaligned
 454:openstack/02b-MAChigh/neighbors.c ****                 openserial_printError(COMPONENT_NEIGHBORS,ERR_LARGE_DAGRANK,
 455:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)neighbors_vars.dio->rank,
 1607              		.loc 1 455 0
 1608 0ba0 40F20003 		movw	r3, #:lower16:neighbors_vars
 1609 0ba4 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1610 0ba8 D3F85831 		ldr	r3, [r3, #344]
 454:openstack/02b-MAChigh/neighbors.c ****                 openserial_printError(COMPONENT_NEIGHBORS,ERR_LARGE_DAGRANK,
 1611              		.loc 1 454 0
 1612 0bac 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1613 0bae 9CB2     		uxth	r4, r3
 1614 0bb0 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1615 0bb2 40F20002 		movw	r2, #:lower16:neighbors_vars
 1616 0bb6 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1617 0bba 0B46     		mov	r3, r1
 1618 0bbc 4FEA0313 		lsl	r3, r3, #4
 1619 0bc0 5B18     		adds	r3, r3, r1
 1620 0bc2 4FEA4303 		lsl	r3, r3, #1
 1621 0bc6 D318     		adds	r3, r2, r3
 1622 0bc8 03F11003 		add	r3, r3, #16
 1623 0bcc B3F80530 		ldrh	r3, [r3, #5]	@ unaligned
 1624 0bd0 9BB2     		uxth	r3, r3
 1625 0bd2 4FF00D00 		mov	r0, #13
 1626 0bd6 4FF01001 		mov	r1, #16
 1627 0bda 2246     		mov	r2, r4
 1628 0bdc FFF7FEFF 		bl	openserial_printError
 456:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)neighbors_vars.neighbors[i].DAGrank);
 457:openstack/02b-MAChigh/neighbors.c ****             } else {
 458:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].DAGrank = neighbors_vars.dio->rank;
 459:openstack/02b-MAChigh/neighbors.c ****             }
 460:openstack/02b-MAChigh/neighbors.c ****             break;
 1629              		.loc 1 460 0
 1630 0be0 21E0     		b	.L74
 1631              	.L77:
 458:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].DAGrank = neighbors_vars.dio->rank;
 1632              		.loc 1 458 0
 1633 0be2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1634 0be4 40F20003 		movw	r3, #:lower16:neighbors_vars
 1635 0be8 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1636 0bec D3F85831 		ldr	r3, [r3, #344]
 1637 0bf0 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1638 0bf2 98B2     		uxth	r0, r3
 1639 0bf4 40F20002 		movw	r2, #:lower16:neighbors_vars
 1640 0bf8 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1641 0bfc 0B46     		mov	r3, r1
 1642 0bfe 4FEA0313 		lsl	r3, r3, #4
 1643 0c02 5B18     		adds	r3, r3, r1
 1644 0c04 4FEA4303 		lsl	r3, r3, #1
 1645 0c08 D318     		adds	r3, r2, r3
 1646 0c0a 03F11003 		add	r3, r3, #16
 1647 0c0e 0246     		mov	r2, r0	@ movhi
 1648 0c10 A3F80520 		strh	r2, [r3, #5]	@ unaligned
 1649              		.loc 1 460 0
 1650 0c14 07E0     		b	.L74
 1651              	.L76:
 446:openstack/02b-MAChigh/neighbors.c ****       for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1652              		.loc 1 446 0
 1653 0c16 FB7B     		ldrb	r3, [r7, #15]
 1654 0c18 03F10103 		add	r3, r3, #1
 1655 0c1c FB73     		strb	r3, [r7, #15]
 1656              	.L75:
 446:openstack/02b-MAChigh/neighbors.c ****       for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1657              		.loc 1 446 0 is_stmt 0 discriminator 1
 1658 0c1e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1659 0c20 092B     		cmp	r3, #9
 1660 0c22 7FF653AF 		bls	.L79
 1661              	.L74:
 461:openstack/02b-MAChigh/neighbors.c ****          }
 462:openstack/02b-MAChigh/neighbors.c ****       }
 463:openstack/02b-MAChigh/neighbors.c ****    } 
 464:openstack/02b-MAChigh/neighbors.c ****    // update my routing information
 465:openstack/02b-MAChigh/neighbors.c ****    neighbors_updateMyDAGrankAndNeighborPreference(); 
 1662              		.loc 1 465 0 is_stmt 1
 1663 0c26 FFF7FEFF 		bl	neighbors_updateMyDAGrankAndNeighborPreference
 466:openstack/02b-MAChigh/neighbors.c **** }
 1664              		.loc 1 466 0
 1665 0c2a 07F11407 		add	r7, r7, #20
 1666 0c2e BD46     		mov	sp, r7
 1667 0c30 90BD     		pop	{r4, r7, pc}
 1668              		.cfi_endproc
 1669              	.LFE11:
 1671 0c32 00BF     		.align	2
 1672              		.global	neighbors_getNeighbor
 1673              		.thumb
 1674              		.thumb_func
 1676              	neighbors_getNeighbor:
 1677              	.LFB12:
 467:openstack/02b-MAChigh/neighbors.c **** 
 468:openstack/02b-MAChigh/neighbors.c **** //===== write addresses
 469:openstack/02b-MAChigh/neighbors.c **** 
 470:openstack/02b-MAChigh/neighbors.c **** /**
 471:openstack/02b-MAChigh/neighbors.c **** \brief Write the 64-bit address of some neighbor to some location.
 472:openstack/02b-MAChigh/neighbors.c **** */
 473:openstack/02b-MAChigh/neighbors.c **** void  neighbors_getNeighbor(open_addr_t* address, uint8_t addr_type, uint8_t index){
 1678              		.loc 1 473 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 8
 1681              		@ frame_needed = 1, uses_anonymous_args = 0
 1682 0c34 80B5     		push	{r7, lr}
 1683              	.LCFI34:
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0c36 82B0     		sub	sp, sp, #8
 1688              	.LCFI35:
 1689              		.cfi_def_cfa_offset 16
 1690 0c38 00AF     		add	r7, sp, #0
 1691              	.LCFI36:
 1692              		.cfi_def_cfa_register 7
 1693 0c3a 7860     		str	r0, [r7, #4]
 1694 0c3c 1346     		mov	r3, r2
 1695 0c3e 0A46     		mov	r2, r1
 1696 0c40 FA70     		strb	r2, [r7, #3]
 1697 0c42 BB70     		strb	r3, [r7, #2]
 474:openstack/02b-MAChigh/neighbors.c ****    switch(addr_type) {
 1698              		.loc 1 474 0
 1699 0c44 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1700 0c46 022B     		cmp	r3, #2
 1701 0c48 1AD1     		bne	.L84
 1702              	.L82:
 475:openstack/02b-MAChigh/neighbors.c ****       case ADDR_64B:
 476:openstack/02b-MAChigh/neighbors.c ****          memcpy(&(address->addr_64b),&(neighbors_vars.neighbors[index].addr_64b.addr_64b),LENGTH_AD
 1703              		.loc 1 476 0
 1704 0c4a 7B68     		ldr	r3, [r7, #4]
 1705 0c4c 03F10101 		add	r1, r3, #1
 1706 0c50 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1707 0c52 1346     		mov	r3, r2
 1708 0c54 4FEA0313 		lsl	r3, r3, #4
 1709 0c58 9B18     		adds	r3, r3, r2
 1710 0c5a 4FEA4303 		lsl	r3, r3, #1
 1711 0c5e 40F20002 		movw	r2, #:lower16:neighbors_vars
 1712 0c62 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1713 0c66 9B18     		adds	r3, r3, r2
 1714 0c68 03F10502 		add	r2, r3, #5
 1715 0c6c 0B46     		mov	r3, r1
 1716 0c6e 1168     		ldr	r1, [r2, #0]	@ unaligned
 1717 0c70 5268     		ldr	r2, [r2, #4]	@ unaligned
 1718 0c72 1960     		str	r1, [r3, #0]	@ unaligned
 1719 0c74 5A60     		str	r2, [r3, #4]	@ unaligned
 477:openstack/02b-MAChigh/neighbors.c ****          address->type=ADDR_64B;
 1720              		.loc 1 477 0
 1721 0c76 7B68     		ldr	r3, [r7, #4]
 1722 0c78 4FF00202 		mov	r2, #2
 1723 0c7c 1A70     		strb	r2, [r3, #0]
 478:openstack/02b-MAChigh/neighbors.c ****          break;
 1724              		.loc 1 478 0
 1725 0c7e 0BE0     		b	.L80
 1726              	.L84:
 479:openstack/02b-MAChigh/neighbors.c ****       default:
 480:openstack/02b-MAChigh/neighbors.c ****          openserial_printCritical(COMPONENT_NEIGHBORS,ERR_WRONG_ADDR_TYPE,
 1727              		.loc 1 480 0
 1728 0c80 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1729 0c82 9BB2     		uxth	r3, r3
 1730 0c84 4FF00D00 		mov	r0, #13
 1731 0c88 4FF03101 		mov	r1, #49
 1732 0c8c 1A46     		mov	r2, r3
 1733 0c8e 4FF00103 		mov	r3, #1
 1734 0c92 FFF7FEFF 		bl	openserial_printCritical
 481:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)addr_type,
 482:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)1);
 483:openstack/02b-MAChigh/neighbors.c ****          break; 
 1735              		.loc 1 483 0
 1736 0c96 00BF     		nop
 1737              	.L80:
 484:openstack/02b-MAChigh/neighbors.c ****    }
 485:openstack/02b-MAChigh/neighbors.c **** }
 1738              		.loc 1 485 0
 1739 0c98 07F10807 		add	r7, r7, #8
 1740 0c9c BD46     		mov	sp, r7
 1741 0c9e 80BD     		pop	{r7, pc}
 1742              		.cfi_endproc
 1743              	.LFE12:
 1745              		.global	__aeabi_ui2f
 1746              		.global	__aeabi_fdiv
 1747              		.global	__aeabi_fadd
 1748              		.global	__aeabi_fmul
 1749              		.global	__aeabi_f2uiz
 1750              		.align	2
 1751              		.global	neighbors_updateMyDAGrankAndNeighborPreference
 1752              		.thumb
 1753              		.thumb_func
 1755              	neighbors_updateMyDAGrankAndNeighborPreference:
 1756              	.LFB13:
 486:openstack/02b-MAChigh/neighbors.c **** 
 487:openstack/02b-MAChigh/neighbors.c **** //===== managing routing info
 488:openstack/02b-MAChigh/neighbors.c **** 
 489:openstack/02b-MAChigh/neighbors.c **** /**
 490:openstack/02b-MAChigh/neighbors.c **** \brief Update my DAG rank and neighbor preference.
 491:openstack/02b-MAChigh/neighbors.c **** 
 492:openstack/02b-MAChigh/neighbors.c **** Call this function whenever some data is changed that could cause this mote's
 493:openstack/02b-MAChigh/neighbors.c **** routing decisions to change. Examples are:
 494:openstack/02b-MAChigh/neighbors.c **** - I received a DIO which updated by neighbor table. If this DIO indicated a
 495:openstack/02b-MAChigh/neighbors.c ****   very low DAGrank, I may want to change by routing parent.
 496:openstack/02b-MAChigh/neighbors.c **** - I became a DAGroot, so my DAGrank should be 0.
 497:openstack/02b-MAChigh/neighbors.c **** */
 498:openstack/02b-MAChigh/neighbors.c **** void neighbors_updateMyDAGrankAndNeighborPreference() {
 1757              		.loc 1 498 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 16
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761 0ca0 90B5     		push	{r4, r7, lr}
 1762              	.LCFI37:
 1763              		.cfi_def_cfa_offset 12
 1764              		.cfi_offset 4, -12
 1765              		.cfi_offset 7, -8
 1766              		.cfi_offset 14, -4
 1767 0ca2 85B0     		sub	sp, sp, #20
 1768              	.LCFI38:
 1769              		.cfi_def_cfa_offset 32
 1770 0ca4 00AF     		add	r7, sp, #0
 1771              	.LCFI39:
 1772              		.cfi_def_cfa_register 7
 499:openstack/02b-MAChigh/neighbors.c ****    uint8_t   i;
 500:openstack/02b-MAChigh/neighbors.c ****    uint16_t  rankIncrease;
 501:openstack/02b-MAChigh/neighbors.c ****    uint32_t  tentativeDAGrank; // 32-bit since is used to sum
 502:openstack/02b-MAChigh/neighbors.c ****    uint8_t   prefParentIdx;
 503:openstack/02b-MAChigh/neighbors.c ****    bool      prefParentFound;
 504:openstack/02b-MAChigh/neighbors.c ****    
 505:openstack/02b-MAChigh/neighbors.c ****    // if I'm a DAGroot, my DAGrank is always 0
 506:openstack/02b-MAChigh/neighbors.c ****    if ((idmanager_getIsDAGroot())==TRUE) {
 1773              		.loc 1 506 0
 1774 0ca6 FFF7FEFF 		bl	idmanager_getIsDAGroot
 1775 0caa 0346     		mov	r3, r0
 1776 0cac 002B     		cmp	r3, #0
 1777 0cae 08D0     		beq	.L86
 507:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.myDAGrank=0;
 1778              		.loc 1 507 0
 1779 0cb0 40F20003 		movw	r3, #:lower16:neighbors_vars
 1780 0cb4 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1781 0cb8 4FF00002 		mov	r2, #0
 1782 0cbc A3F85421 		strh	r2, [r3, #340]	@ movhi
 508:openstack/02b-MAChigh/neighbors.c ****       return;
 1783              		.loc 1 508 0
 1784 0cc0 E9E0     		b	.L85
 1785              	.L86:
 509:openstack/02b-MAChigh/neighbors.c ****    }
 510:openstack/02b-MAChigh/neighbors.c ****    
 511:openstack/02b-MAChigh/neighbors.c ****    // reset my DAG rank to max value. May be lowered below.
 512:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.myDAGrank  = MAXDAGRANK;
 1786              		.loc 1 512 0
 1787 0cc2 40F20003 		movw	r3, #:lower16:neighbors_vars
 1788 0cc6 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1789 0cca 4FF6FF72 		movw	r2, #65535
 1790 0cce A3F85421 		strh	r2, [r3, #340]	@ movhi
 513:openstack/02b-MAChigh/neighbors.c ****    
 514:openstack/02b-MAChigh/neighbors.c ****    // by default, I haven't found a preferred parent
 515:openstack/02b-MAChigh/neighbors.c ****    prefParentFound           = FALSE;
 1791              		.loc 1 515 0
 1792 0cd2 4FF00003 		mov	r3, #0
 1793 0cd6 BB72     		strb	r3, [r7, #10]
 516:openstack/02b-MAChigh/neighbors.c ****    prefParentIdx             = 0;
 1794              		.loc 1 516 0
 1795 0cd8 4FF00003 		mov	r3, #0
 1796 0cdc FB72     		strb	r3, [r7, #11]
 517:openstack/02b-MAChigh/neighbors.c ****    
 518:openstack/02b-MAChigh/neighbors.c ****    // loop through neighbor table, update myDAGrank
 519:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1797              		.loc 1 519 0
 1798 0cde 4FF00003 		mov	r3, #0
 1799 0ce2 FB73     		strb	r3, [r7, #15]
 1800 0ce4 A3E0     		b	.L88
 1801              	.L92:
 520:openstack/02b-MAChigh/neighbors.c ****       if (neighbors_vars.neighbors[i].used==TRUE) {
 1802              		.loc 1 520 0
 1803 0ce6 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1804 0ce8 40F20002 		movw	r2, #:lower16:neighbors_vars
 1805 0cec C0F20002 		movt	r2, #:upper16:neighbors_vars
 1806 0cf0 0B46     		mov	r3, r1
 1807 0cf2 4FEA0313 		lsl	r3, r3, #4
 1808 0cf6 5B18     		adds	r3, r3, r1
 1809 0cf8 4FEA4303 		lsl	r3, r3, #1
 1810 0cfc D318     		adds	r3, r2, r3
 1811 0cfe 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1812 0d00 002B     		cmp	r3, #0
 1813 0d02 00F09080 		beq	.L89
 521:openstack/02b-MAChigh/neighbors.c ****          
 522:openstack/02b-MAChigh/neighbors.c ****          // reset parent preference
 523:openstack/02b-MAChigh/neighbors.c ****          neighbors_vars.neighbors[i].parentPreference=0;
 1814              		.loc 1 523 0
 1815 0d06 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1816 0d08 40F20002 		movw	r2, #:lower16:neighbors_vars
 1817 0d0c C0F20002 		movt	r2, #:upper16:neighbors_vars
 1818 0d10 0B46     		mov	r3, r1
 1819 0d12 4FEA0313 		lsl	r3, r3, #4
 1820 0d16 5B18     		adds	r3, r3, r1
 1821 0d18 4FEA4303 		lsl	r3, r3, #1
 1822 0d1c D318     		adds	r3, r2, r3
 1823 0d1e 4FF00002 		mov	r2, #0
 1824 0d22 5A70     		strb	r2, [r3, #1]
 524:openstack/02b-MAChigh/neighbors.c ****          
 525:openstack/02b-MAChigh/neighbors.c ****          // calculate link cost to this neighbor
 526:openstack/02b-MAChigh/neighbors.c ****          if (neighbors_vars.neighbors[i].numTxACK==0) {
 1825              		.loc 1 526 0
 1826 0d24 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1827 0d26 40F20002 		movw	r2, #:lower16:neighbors_vars
 1828 0d2a C0F20002 		movt	r2, #:upper16:neighbors_vars
 1829 0d2e 0B46     		mov	r3, r1
 1830 0d30 4FEA0313 		lsl	r3, r3, #4
 1831 0d34 5B18     		adds	r3, r3, r1
 1832 0d36 4FEA4303 		lsl	r3, r3, #1
 1833 0d3a D318     		adds	r3, r2, r3
 1834 0d3c 03F11803 		add	r3, r3, #24
 1835 0d40 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1836 0d42 002B     		cmp	r3, #0
 1837 0d44 03D1     		bne	.L90
 527:openstack/02b-MAChigh/neighbors.c ****             rankIncrease = DEFAULTLINKCOST*2*MINHOPRANKINCREASE;
 1838              		.loc 1 527 0
 1839 0d46 4FF4F053 		mov	r3, #7680
 1840 0d4a BB81     		strh	r3, [r7, #12]	@ movhi
 1841 0d4c 3AE0     		b	.L91
 1842              	.L90:
 528:openstack/02b-MAChigh/neighbors.c ****          } else {
 529:openstack/02b-MAChigh/neighbors.c ****             //6TiSCH minimal draft using OF0 for rank computation
 530:openstack/02b-MAChigh/neighbors.c ****             rankIncrease = (uint16_t)((((float)neighbors_vars.neighbors[i].numTx)/((float)neighbors
 1843              		.loc 1 530 0
 1844 0d4e F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1845 0d50 40F20002 		movw	r2, #:lower16:neighbors_vars
 1846 0d54 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1847 0d58 0B46     		mov	r3, r1
 1848 0d5a 4FEA0313 		lsl	r3, r3, #4
 1849 0d5e 5B18     		adds	r3, r3, r1
 1850 0d60 4FEA4303 		lsl	r3, r3, #1
 1851 0d64 D318     		adds	r3, r2, r3
 1852 0d66 03F11803 		add	r3, r3, #24
 1853 0d6a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1854 0d6c 1846     		mov	r0, r3
 1855 0d6e FFF7FEFF 		bl	__aeabi_ui2f
 1856 0d72 0446     		mov	r4, r0
 1857 0d74 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1858 0d76 40F20002 		movw	r2, #:lower16:neighbors_vars
 1859 0d7a C0F20002 		movt	r2, #:upper16:neighbors_vars
 1860 0d7e 0B46     		mov	r3, r1
 1861 0d80 4FEA0313 		lsl	r3, r3, #4
 1862 0d84 5B18     		adds	r3, r3, r1
 1863 0d86 4FEA4303 		lsl	r3, r3, #1
 1864 0d8a D318     		adds	r3, r2, r3
 1865 0d8c 03F11803 		add	r3, r3, #24
 1866 0d90 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1867 0d92 1846     		mov	r0, r3
 1868 0d94 FFF7FEFF 		bl	__aeabi_ui2f
 1869 0d98 0346     		mov	r3, r0
 1870 0d9a 2046     		mov	r0, r4
 1871 0d9c 1946     		mov	r1, r3
 1872 0d9e FFF7FEFF 		bl	__aeabi_fdiv
 1873 0da2 0346     		mov	r3, r0
 1874 0da4 1846     		mov	r0, r3
 1875 0da6 1946     		mov	r1, r3
 1876 0da8 FFF7FEFF 		bl	__aeabi_fadd
 1877 0dac 0346     		mov	r3, r0
 1878 0dae 1846     		mov	r0, r3
 1879 0db0 4FF08741 		mov	r1, #1132462080
 1880 0db4 FFF7FEFF 		bl	__aeabi_fmul
 1881 0db8 0346     		mov	r3, r0
 1882 0dba 1846     		mov	r0, r3
 1883 0dbc FFF7FEFF 		bl	__aeabi_f2uiz
 1884 0dc0 0346     		mov	r3, r0
 1885 0dc2 BB81     		strh	r3, [r7, #12]	@ movhi
 1886              	.L91:
 531:openstack/02b-MAChigh/neighbors.c ****          }
 532:openstack/02b-MAChigh/neighbors.c ****          
 533:openstack/02b-MAChigh/neighbors.c ****          tentativeDAGrank = neighbors_vars.neighbors[i].DAGrank+rankIncrease;
 1887              		.loc 1 533 0
 1888 0dc4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1889 0dc6 40F20002 		movw	r2, #:lower16:neighbors_vars
 1890 0dca C0F20002 		movt	r2, #:upper16:neighbors_vars
 1891 0dce 0B46     		mov	r3, r1
 1892 0dd0 4FEA0313 		lsl	r3, r3, #4
 1893 0dd4 5B18     		adds	r3, r3, r1
 1894 0dd6 4FEA4303 		lsl	r3, r3, #1
 1895 0dda D318     		adds	r3, r2, r3
 1896 0ddc 03F11003 		add	r3, r3, #16
 1897 0de0 B3F80530 		ldrh	r3, [r3, #5]	@ unaligned
 1898 0de4 9BB2     		uxth	r3, r3
 1899 0de6 1A46     		mov	r2, r3
 1900 0de8 BB89     		ldrh	r3, [r7, #12]
 1901 0dea D318     		adds	r3, r2, r3
 1902 0dec 7B60     		str	r3, [r7, #4]
 534:openstack/02b-MAChigh/neighbors.c ****          if ( tentativeDAGrank<neighbors_vars.myDAGrank &&
 1903              		.loc 1 534 0
 1904 0dee 40F20003 		movw	r3, #:lower16:neighbors_vars
 1905 0df2 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1906 0df6 B3F85431 		ldrh	r3, [r3, #340]
 1907 0dfa 1A46     		mov	r2, r3
 1908 0dfc 7B68     		ldr	r3, [r7, #4]
 1909 0dfe 9A42     		cmp	r2, r3
 1910 0e00 11D9     		bls	.L89
 1911              		.loc 1 534 0 is_stmt 0 discriminator 1
 1912 0e02 7A68     		ldr	r2, [r7, #4]
 1913 0e04 4FF6FE73 		movw	r3, #65534
 1914 0e08 9A42     		cmp	r2, r3
 1915 0e0a 0CD8     		bhi	.L89
 535:openstack/02b-MAChigh/neighbors.c ****               tentativeDAGrank<MAXDAGRANK) {
 536:openstack/02b-MAChigh/neighbors.c ****             // found better parent, lower my DAGrank
 537:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.myDAGrank   = tentativeDAGrank;
 1916              		.loc 1 537 0 is_stmt 1
 1917 0e0c 7B68     		ldr	r3, [r7, #4]
 1918 0e0e 9AB2     		uxth	r2, r3
 1919 0e10 40F20003 		movw	r3, #:lower16:neighbors_vars
 1920 0e14 C0F20003 		movt	r3, #:upper16:neighbors_vars
 1921 0e18 A3F85421 		strh	r2, [r3, #340]	@ movhi
 538:openstack/02b-MAChigh/neighbors.c ****             prefParentFound            = TRUE;
 1922              		.loc 1 538 0
 1923 0e1c 4FF00103 		mov	r3, #1
 1924 0e20 BB72     		strb	r3, [r7, #10]
 539:openstack/02b-MAChigh/neighbors.c ****             prefParentIdx              = i;
 1925              		.loc 1 539 0
 1926 0e22 FB7B     		ldrb	r3, [r7, #15]
 1927 0e24 FB72     		strb	r3, [r7, #11]
 1928              	.L89:
 519:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1929              		.loc 1 519 0
 1930 0e26 FB7B     		ldrb	r3, [r7, #15]
 1931 0e28 03F10103 		add	r3, r3, #1
 1932 0e2c FB73     		strb	r3, [r7, #15]
 1933              	.L88:
 519:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 1934              		.loc 1 519 0 is_stmt 0 discriminator 1
 1935 0e2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1936 0e30 092B     		cmp	r3, #9
 1937 0e32 7FF658AF 		bls	.L92
 540:openstack/02b-MAChigh/neighbors.c ****          }
 541:openstack/02b-MAChigh/neighbors.c ****       }
 542:openstack/02b-MAChigh/neighbors.c ****    } 
 543:openstack/02b-MAChigh/neighbors.c ****    
 544:openstack/02b-MAChigh/neighbors.c ****    // update preferred parent
 545:openstack/02b-MAChigh/neighbors.c ****    if (prefParentFound) {
 1938              		.loc 1 545 0 is_stmt 1
 1939 0e36 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1940 0e38 002B     		cmp	r3, #0
 1941 0e3a 2CD0     		beq	.L85
 546:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.neighbors[prefParentIdx].parentPreference       = MAXPREFERENCE;
 1942              		.loc 1 546 0
 1943 0e3c F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1944 0e3e 40F20002 		movw	r2, #:lower16:neighbors_vars
 1945 0e42 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1946 0e46 0B46     		mov	r3, r1
 1947 0e48 4FEA0313 		lsl	r3, r3, #4
 1948 0e4c 5B18     		adds	r3, r3, r1
 1949 0e4e 4FEA4303 		lsl	r3, r3, #1
 1950 0e52 D318     		adds	r3, r2, r3
 1951 0e54 4FF00202 		mov	r2, #2
 1952 0e58 5A70     		strb	r2, [r3, #1]
 547:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.neighbors[prefParentIdx].stableNeighbor         = TRUE;
 1953              		.loc 1 547 0
 1954 0e5a F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1955 0e5c 40F20002 		movw	r2, #:lower16:neighbors_vars
 1956 0e60 C0F20002 		movt	r2, #:upper16:neighbors_vars
 1957 0e64 0B46     		mov	r3, r1
 1958 0e66 4FEA0313 		lsl	r3, r3, #4
 1959 0e6a 5B18     		adds	r3, r3, r1
 1960 0e6c 4FEA4303 		lsl	r3, r3, #1
 1961 0e70 D318     		adds	r3, r2, r3
 1962 0e72 4FF00102 		mov	r2, #1
 1963 0e76 9A70     		strb	r2, [r3, #2]
 548:openstack/02b-MAChigh/neighbors.c ****       neighbors_vars.neighbors[prefParentIdx].switchStabilityCounter = 0;
 1964              		.loc 1 548 0
 1965 0e78 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1966 0e7a 40F20002 		movw	r2, #:lower16:neighbors_vars
 1967 0e7e C0F20002 		movt	r2, #:upper16:neighbors_vars
 1968 0e82 0B46     		mov	r3, r1
 1969 0e84 4FEA0313 		lsl	r3, r3, #4
 1970 0e88 5B18     		adds	r3, r3, r1
 1971 0e8a 4FEA4303 		lsl	r3, r3, #1
 1972 0e8e D318     		adds	r3, r2, r3
 1973 0e90 4FF00002 		mov	r2, #0
 1974 0e94 DA70     		strb	r2, [r3, #3]
 1975              	.L85:
 549:openstack/02b-MAChigh/neighbors.c ****    }
 550:openstack/02b-MAChigh/neighbors.c **** }
 1976              		.loc 1 550 0
 1977 0e96 07F11407 		add	r7, r7, #20
 1978 0e9a BD46     		mov	sp, r7
 1979 0e9c 90BD     		pop	{r4, r7, pc}
 1980              		.cfi_endproc
 1981              	.LFE13:
 1983 0e9e 00BF     		.align	2
 1984              		.global	neighbors_removeOld
 1985              		.thumb
 1986              		.thumb_func
 1988              	neighbors_removeOld:
 1989              	.LFB14:
 551:openstack/02b-MAChigh/neighbors.c **** 
 552:openstack/02b-MAChigh/neighbors.c **** //===== maintenance
 553:openstack/02b-MAChigh/neighbors.c **** 
 554:openstack/02b-MAChigh/neighbors.c **** void  neighbors_removeOld() {
 1990              		.loc 1 554 0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 8
 1993              		@ frame_needed = 1, uses_anonymous_args = 0
 1994 0ea0 80B5     		push	{r7, lr}
 1995              	.LCFI40:
 1996              		.cfi_def_cfa_offset 8
 1997              		.cfi_offset 7, -8
 1998              		.cfi_offset 14, -4
 1999 0ea2 82B0     		sub	sp, sp, #8
 2000              	.LCFI41:
 2001              		.cfi_def_cfa_offset 16
 2002 0ea4 00AF     		add	r7, sp, #0
 2003              	.LCFI42:
 2004              		.cfi_def_cfa_register 7
 555:openstack/02b-MAChigh/neighbors.c ****    uint8_t    i;
 556:openstack/02b-MAChigh/neighbors.c ****    uint16_t   timeSinceHeard;
 557:openstack/02b-MAChigh/neighbors.c ****    
 558:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 2005              		.loc 1 558 0
 2006 0ea6 4FF00003 		mov	r3, #0
 2007 0eaa FB71     		strb	r3, [r7, #7]
 2008 0eac 30E0     		b	.L94
 2009              	.L96:
 559:openstack/02b-MAChigh/neighbors.c ****       if (neighbors_vars.neighbors[i].used==1) {
 2010              		.loc 1 559 0
 2011 0eae F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2012 0eb0 40F20002 		movw	r2, #:lower16:neighbors_vars
 2013 0eb4 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2014 0eb8 0B46     		mov	r3, r1
 2015 0eba 4FEA0313 		lsl	r3, r3, #4
 2016 0ebe 5B18     		adds	r3, r3, r1
 2017 0ec0 4FEA4303 		lsl	r3, r3, #1
 2018 0ec4 D318     		adds	r3, r2, r3
 2019 0ec6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2020 0ec8 002B     		cmp	r3, #0
 2021 0eca 1DD0     		beq	.L95
 560:openstack/02b-MAChigh/neighbors.c ****          timeSinceHeard = ieee154e_asnDiff(&neighbors_vars.neighbors[i].asn);
 2022              		.loc 1 560 0
 2023 0ecc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2024 0ece 1346     		mov	r3, r2
 2025 0ed0 4FEA0313 		lsl	r3, r3, #4
 2026 0ed4 9B18     		adds	r3, r3, r2
 2027 0ed6 4FEA4303 		lsl	r3, r3, #1
 2028 0eda 03F11802 		add	r2, r3, #24
 2029 0ede 40F20003 		movw	r3, #:lower16:neighbors_vars
 2030 0ee2 C0F20003 		movt	r3, #:upper16:neighbors_vars
 2031 0ee6 D318     		adds	r3, r2, r3
 2032 0ee8 03F10403 		add	r3, r3, #4
 2033 0eec 1846     		mov	r0, r3
 2034 0eee FFF7FEFF 		bl	ieee154e_asnDiff
 2035 0ef2 0346     		mov	r3, r0
 2036 0ef4 BB80     		strh	r3, [r7, #4]	@ movhi
 561:openstack/02b-MAChigh/neighbors.c ****          if (timeSinceHeard>DESYNCTIMEOUT) {
 2037              		.loc 1 561 0
 2038 0ef6 BA88     		ldrh	r2, [r7, #4]
 2039 0ef8 40F61D13 		movw	r3, #2333
 2040 0efc 9A42     		cmp	r2, r3
 2041 0efe 03D9     		bls	.L95
 562:openstack/02b-MAChigh/neighbors.c ****             removeNeighbor(i);
 2042              		.loc 1 562 0
 2043 0f00 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2044 0f02 1846     		mov	r0, r3
 2045 0f04 FFF7FEFF 		bl	removeNeighbor
 2046              	.L95:
 558:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 2047              		.loc 1 558 0
 2048 0f08 FB79     		ldrb	r3, [r7, #7]
 2049 0f0a 03F10103 		add	r3, r3, #1
 2050 0f0e FB71     		strb	r3, [r7, #7]
 2051              	.L94:
 558:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 2052              		.loc 1 558 0 is_stmt 0 discriminator 1
 2053 0f10 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2054 0f12 092B     		cmp	r3, #9
 2055 0f14 CBD9     		bls	.L96
 563:openstack/02b-MAChigh/neighbors.c ****          }
 564:openstack/02b-MAChigh/neighbors.c ****       }
 565:openstack/02b-MAChigh/neighbors.c ****    } 
 566:openstack/02b-MAChigh/neighbors.c **** }
 2056              		.loc 1 566 0 is_stmt 1
 2057 0f16 07F10807 		add	r7, r7, #8
 2058 0f1a BD46     		mov	sp, r7
 2059 0f1c 80BD     		pop	{r7, pc}
 2060              		.cfi_endproc
 2061              	.LFE14:
 2063 0f1e 00BF     		.align	2
 2064              		.global	debugPrint_neighbors
 2065              		.thumb
 2066              		.thumb_func
 2068              	debugPrint_neighbors:
 2069              	.LFB15:
 567:openstack/02b-MAChigh/neighbors.c **** 
 568:openstack/02b-MAChigh/neighbors.c **** //===== debug
 569:openstack/02b-MAChigh/neighbors.c **** 
 570:openstack/02b-MAChigh/neighbors.c **** /**
 571:openstack/02b-MAChigh/neighbors.c **** \brief Triggers this module to print status information, over serial.
 572:openstack/02b-MAChigh/neighbors.c **** 
 573:openstack/02b-MAChigh/neighbors.c **** debugPrint_* functions are used by the openserial module to continuously print
 574:openstack/02b-MAChigh/neighbors.c **** status information about several modules in the OpenWSN stack.
 575:openstack/02b-MAChigh/neighbors.c **** 
 576:openstack/02b-MAChigh/neighbors.c **** \returns TRUE if this function printed something, FALSE otherwise.
 577:openstack/02b-MAChigh/neighbors.c **** */
 578:openstack/02b-MAChigh/neighbors.c **** bool debugPrint_neighbors() {
 2070              		.loc 1 578 0
 2071              		.cfi_startproc
 2072              		@ args = 0, pretend = 0, frame = 40
 2073              		@ frame_needed = 1, uses_anonymous_args = 0
 2074 0f20 F0B5     		push	{r4, r5, r6, r7, lr}
 2075              	.LCFI43:
 2076              		.cfi_def_cfa_offset 20
 2077              		.cfi_offset 4, -20
 2078              		.cfi_offset 5, -16
 2079              		.cfi_offset 6, -12
 2080              		.cfi_offset 7, -8
 2081              		.cfi_offset 14, -4
 2082 0f22 8BB0     		sub	sp, sp, #44
 2083              	.LCFI44:
 2084              		.cfi_def_cfa_offset 64
 2085 0f24 00AF     		add	r7, sp, #0
 2086              	.LCFI45:
 2087              		.cfi_def_cfa_register 7
 579:openstack/02b-MAChigh/neighbors.c ****    debugNeighborEntry_t temp;
 580:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.debugRow=(neighbors_vars.debugRow+1)%MAXNUMNEIGHBORS;
 2088              		.loc 1 580 0
 2089 0f26 40F20003 		movw	r3, #:lower16:neighbors_vars
 2090 0f2a C0F20003 		movt	r3, #:upper16:neighbors_vars
 2091 0f2e 93F85631 		ldrb	r3, [r3, #342]	@ zero_extendqisi2
 2092 0f32 03F10101 		add	r1, r3, #1
 2093 0f36 46F26763 		movw	r3, #26215
 2094 0f3a C6F26663 		movt	r3, 26214
 2095 0f3e 83FB0123 		smull	r2, r3, r3, r1
 2096 0f42 4FEAA302 		asr	r2, r3, #2
 2097 0f46 4FEAE173 		asr	r3, r1, #31
 2098 0f4a D21A     		subs	r2, r2, r3
 2099 0f4c 1346     		mov	r3, r2
 2100 0f4e 4FEA8303 		lsl	r3, r3, #2
 2101 0f52 9B18     		adds	r3, r3, r2
 2102 0f54 4FEA4303 		lsl	r3, r3, #1
 2103 0f58 CA1A     		subs	r2, r1, r3
 2104 0f5a D2B2     		uxtb	r2, r2
 2105 0f5c 40F20003 		movw	r3, #:lower16:neighbors_vars
 2106 0f60 C0F20003 		movt	r3, #:upper16:neighbors_vars
 2107 0f64 83F85621 		strb	r2, [r3, #342]
 581:openstack/02b-MAChigh/neighbors.c ****    temp.row=neighbors_vars.debugRow;
 2108              		.loc 1 581 0
 2109 0f68 40F20003 		movw	r3, #:lower16:neighbors_vars
 2110 0f6c C0F20003 		movt	r3, #:upper16:neighbors_vars
 2111 0f70 93F85631 		ldrb	r3, [r3, #342]	@ zero_extendqisi2
 2112 0f74 3B71     		strb	r3, [r7, #4]
 582:openstack/02b-MAChigh/neighbors.c ****    temp.neighborEntry=neighbors_vars.neighbors[neighbors_vars.debugRow];
 2113              		.loc 1 582 0
 2114 0f76 40F20003 		movw	r3, #:lower16:neighbors_vars
 2115 0f7a C0F20003 		movt	r3, #:upper16:neighbors_vars
 2116 0f7e 93F85631 		ldrb	r3, [r3, #342]	@ zero_extendqisi2
 2117 0f82 1946     		mov	r1, r3
 2118 0f84 40F20002 		movw	r2, #:lower16:neighbors_vars
 2119 0f88 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2120 0f8c 0B46     		mov	r3, r1
 2121 0f8e 4FEA0313 		lsl	r3, r3, #4
 2122 0f92 5B18     		adds	r3, r3, r1
 2123 0f94 4FEA4303 		lsl	r3, r3, #1
 2124 0f98 D318     		adds	r3, r2, r3
 2125 0f9a 07F10502 		add	r2, r7, #5
 2126 0f9e 03F12004 		add	r4, r3, #32
 2127              	.L98:
 2128 0fa2 1146     		mov	r1, r2
 2129 0fa4 1846     		mov	r0, r3
 2130 0fa6 D0F800E0 		ldr	lr, [r0, #0]	@ unaligned
 2131 0faa 4668     		ldr	r6, [r0, #4]	@ unaligned
 2132 0fac 8568     		ldr	r5, [r0, #8]	@ unaligned
 2133 0fae C068     		ldr	r0, [r0, #12]	@ unaligned
 2134 0fb0 C1F800E0 		str	lr, [r1, #0]	@ unaligned
 2135 0fb4 4E60     		str	r6, [r1, #4]	@ unaligned
 2136 0fb6 8D60     		str	r5, [r1, #8]	@ unaligned
 2137 0fb8 C860     		str	r0, [r1, #12]	@ unaligned
 2138 0fba 03F11003 		add	r3, r3, #16
 2139 0fbe 02F11002 		add	r2, r2, #16
 2140 0fc2 A342     		cmp	r3, r4
 2141 0fc4 EDD1     		bne	.L98
 2142 0fc6 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 2143 0fc8 1380     		strh	r3, [r2, #0]	@ unaligned
 583:openstack/02b-MAChigh/neighbors.c ****    openserial_printStatus(STATUS_NEIGHBORS,(uint8_t*)&temp,sizeof(debugNeighborEntry_t));
 2144              		.loc 1 583 0
 2145 0fca 07F10403 		add	r3, r7, #4
 2146 0fce 4FF00900 		mov	r0, #9
 2147 0fd2 1946     		mov	r1, r3
 2148 0fd4 4FF02302 		mov	r2, #35
 2149 0fd8 FFF7FEFF 		bl	openserial_printStatus
 584:openstack/02b-MAChigh/neighbors.c ****    return TRUE;
 2150              		.loc 1 584 0
 2151 0fdc 4FF00103 		mov	r3, #1
 585:openstack/02b-MAChigh/neighbors.c **** }
 2152              		.loc 1 585 0
 2153 0fe0 1846     		mov	r0, r3
 2154 0fe2 07F12C07 		add	r7, r7, #44
 2155 0fe6 BD46     		mov	sp, r7
 2156 0fe8 F0BD     		pop	{r4, r5, r6, r7, pc}
 2157              		.cfi_endproc
 2158              	.LFE15:
 2160 0fea 00BF     		.align	2
 2161              		.global	registerNewNeighbor
 2162              		.thumb
 2163              		.thumb_func
 2165              	registerNewNeighbor:
 2166              	.LFB16:
 586:openstack/02b-MAChigh/neighbors.c **** 
 587:openstack/02b-MAChigh/neighbors.c **** //=========================== private =========================================
 588:openstack/02b-MAChigh/neighbors.c **** 
 589:openstack/02b-MAChigh/neighbors.c **** void registerNewNeighbor(open_addr_t* address,
 590:openstack/02b-MAChigh/neighbors.c ****                          int8_t       rssi,
 591:openstack/02b-MAChigh/neighbors.c ****                          asn_t*       asnTimestamp,
 592:openstack/02b-MAChigh/neighbors.c ****                          bool         joinPrioPresent,
 593:openstack/02b-MAChigh/neighbors.c ****                          uint8_t      joinPrio) {
 2167              		.loc 1 593 0
 2168              		.cfi_startproc
 2169              		@ args = 4, pretend = 0, frame = 24
 2170              		@ frame_needed = 1, uses_anonymous_args = 0
 2171 0fec B0B5     		push	{r4, r5, r7, lr}
 2172              	.LCFI46:
 2173              		.cfi_def_cfa_offset 16
 2174              		.cfi_offset 4, -16
 2175              		.cfi_offset 5, -12
 2176              		.cfi_offset 7, -8
 2177              		.cfi_offset 14, -4
 2178 0fee 86B0     		sub	sp, sp, #24
 2179              	.LCFI47:
 2180              		.cfi_def_cfa_offset 40
 2181 0ff0 00AF     		add	r7, sp, #0
 2182              	.LCFI48:
 2183              		.cfi_def_cfa_register 7
 2184 0ff2 F860     		str	r0, [r7, #12]
 2185 0ff4 7A60     		str	r2, [r7, #4]
 2186 0ff6 0A46     		mov	r2, r1
 2187 0ff8 FA72     		strb	r2, [r7, #11]
 2188 0ffa BB72     		strb	r3, [r7, #10]
 594:openstack/02b-MAChigh/neighbors.c ****    uint8_t  i,j;
 595:openstack/02b-MAChigh/neighbors.c ****    bool     iHaveAPreferedParent;
 596:openstack/02b-MAChigh/neighbors.c ****    // filter errors
 597:openstack/02b-MAChigh/neighbors.c ****    if (address->type!=ADDR_64B) {
 2189              		.loc 1 597 0
 2190 0ffc FB68     		ldr	r3, [r7, #12]
 2191 0ffe 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2192 1000 022B     		cmp	r3, #2
 2193 1002 0BD0     		beq	.L101
 598:openstack/02b-MAChigh/neighbors.c ****       openserial_printCritical(COMPONENT_NEIGHBORS,ERR_WRONG_ADDR_TYPE,
 599:openstack/02b-MAChigh/neighbors.c ****                             (errorparameter_t)address->type,
 2194              		.loc 1 599 0
 2195 1004 FB68     		ldr	r3, [r7, #12]
 2196 1006 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 598:openstack/02b-MAChigh/neighbors.c ****       openserial_printCritical(COMPONENT_NEIGHBORS,ERR_WRONG_ADDR_TYPE,
 2197              		.loc 1 598 0
 2198 1008 4FF00D00 		mov	r0, #13
 2199 100c 4FF03101 		mov	r1, #49
 2200 1010 1A46     		mov	r2, r3
 2201 1012 4FF00203 		mov	r3, #2
 2202 1016 FFF7FEFF 		bl	openserial_printCritical
 600:openstack/02b-MAChigh/neighbors.c ****                             (errorparameter_t)2);
 601:openstack/02b-MAChigh/neighbors.c ****       return;
 2203              		.loc 1 601 0
 2204 101a 4BE1     		b	.L100
 2205              	.L101:
 602:openstack/02b-MAChigh/neighbors.c ****    }
 603:openstack/02b-MAChigh/neighbors.c ****    // add this neighbor
 604:openstack/02b-MAChigh/neighbors.c ****    if (isNeighbor(address)==FALSE) {
 2206              		.loc 1 604 0
 2207 101c F868     		ldr	r0, [r7, #12]
 2208 101e FFF7FEFF 		bl	isNeighbor
 2209 1022 0346     		mov	r3, r0
 2210 1024 83F00103 		eor	r3, r3, #1
 2211 1028 DBB2     		uxtb	r3, r3
 2212 102a 002B     		cmp	r3, #0
 2213 102c 00F04281 		beq	.L100
 605:openstack/02b-MAChigh/neighbors.c ****       i=0;
 2214              		.loc 1 605 0
 2215 1030 4FF00003 		mov	r3, #0
 2216 1034 FB75     		strb	r3, [r7, #23]
 606:openstack/02b-MAChigh/neighbors.c ****       while(i<MAXNUMNEIGHBORS) {
 2217              		.loc 1 606 0
 2218 1036 29E1     		b	.L103
 2219              	.L111:
 607:openstack/02b-MAChigh/neighbors.c ****          if (neighbors_vars.neighbors[i].used==FALSE) {
 2220              		.loc 1 607 0
 2221 1038 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2222 103a 40F20002 		movw	r2, #:lower16:neighbors_vars
 2223 103e C0F20002 		movt	r2, #:upper16:neighbors_vars
 2224 1042 0B46     		mov	r3, r1
 2225 1044 4FEA0313 		lsl	r3, r3, #4
 2226 1048 5B18     		adds	r3, r3, r1
 2227 104a 4FEA4303 		lsl	r3, r3, #1
 2228 104e D318     		adds	r3, r2, r3
 2229 1050 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2230 1052 83F00103 		eor	r3, r3, #1
 2231 1056 DBB2     		uxtb	r3, r3
 2232 1058 002B     		cmp	r3, #0
 2233 105a 00F01381 		beq	.L104
 608:openstack/02b-MAChigh/neighbors.c ****             // add this neighbor
 609:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].used                   = TRUE;
 2234              		.loc 1 609 0
 2235 105e F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2236 1060 40F20002 		movw	r2, #:lower16:neighbors_vars
 2237 1064 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2238 1068 0B46     		mov	r3, r1
 2239 106a 4FEA0313 		lsl	r3, r3, #4
 2240 106e 5B18     		adds	r3, r3, r1
 2241 1070 4FEA4303 		lsl	r3, r3, #1
 2242 1074 D318     		adds	r3, r2, r3
 2243 1076 4FF00102 		mov	r2, #1
 2244 107a 1A70     		strb	r2, [r3, #0]
 610:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].parentPreference       = 0;
 2245              		.loc 1 610 0
 2246 107c F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2247 107e 40F20002 		movw	r2, #:lower16:neighbors_vars
 2248 1082 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2249 1086 0B46     		mov	r3, r1
 2250 1088 4FEA0313 		lsl	r3, r3, #4
 2251 108c 5B18     		adds	r3, r3, r1
 2252 108e 4FEA4303 		lsl	r3, r3, #1
 2253 1092 D318     		adds	r3, r2, r3
 2254 1094 4FF00002 		mov	r2, #0
 2255 1098 5A70     		strb	r2, [r3, #1]
 611:openstack/02b-MAChigh/neighbors.c ****             // neighbors_vars.neighbors[i].stableNeighbor         = FALSE;
 612:openstack/02b-MAChigh/neighbors.c ****             // Note: all new neighbors are consider stable
 613:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].stableNeighbor         = TRUE;
 2256              		.loc 1 613 0
 2257 109a F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2258 109c 40F20002 		movw	r2, #:lower16:neighbors_vars
 2259 10a0 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2260 10a4 0B46     		mov	r3, r1
 2261 10a6 4FEA0313 		lsl	r3, r3, #4
 2262 10aa 5B18     		adds	r3, r3, r1
 2263 10ac 4FEA4303 		lsl	r3, r3, #1
 2264 10b0 D318     		adds	r3, r2, r3
 2265 10b2 4FF00102 		mov	r2, #1
 2266 10b6 9A70     		strb	r2, [r3, #2]
 614:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].switchStabilityCounter = 0;
 2267              		.loc 1 614 0
 2268 10b8 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2269 10ba 40F20002 		movw	r2, #:lower16:neighbors_vars
 2270 10be C0F20002 		movt	r2, #:upper16:neighbors_vars
 2271 10c2 0B46     		mov	r3, r1
 2272 10c4 4FEA0313 		lsl	r3, r3, #4
 2273 10c8 5B18     		adds	r3, r3, r1
 2274 10ca 4FEA4303 		lsl	r3, r3, #1
 2275 10ce D318     		adds	r3, r2, r3
 2276 10d0 4FF00002 		mov	r2, #0
 2277 10d4 DA70     		strb	r2, [r3, #3]
 615:openstack/02b-MAChigh/neighbors.c ****             memcpy(&neighbors_vars.neighbors[i].addr_64b,address,sizeof(open_addr_t));
 2278              		.loc 1 615 0
 2279 10d6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2280 10d8 1346     		mov	r3, r2
 2281 10da 4FEA0313 		lsl	r3, r3, #4
 2282 10de 9B18     		adds	r3, r3, r2
 2283 10e0 4FEA4303 		lsl	r3, r3, #1
 2284 10e4 40F20002 		movw	r2, #:lower16:neighbors_vars
 2285 10e8 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2286 10ec 9B18     		adds	r3, r3, r2
 2287 10ee 03F10403 		add	r3, r3, #4
 2288 10f2 FA68     		ldr	r2, [r7, #12]
 2289 10f4 1568     		ldr	r5, [r2, #0]	@ unaligned
 2290 10f6 5468     		ldr	r4, [r2, #4]	@ unaligned
 2291 10f8 9068     		ldr	r0, [r2, #8]	@ unaligned
 2292 10fa D168     		ldr	r1, [r2, #12]	@ unaligned
 2293 10fc 1D60     		str	r5, [r3, #0]	@ unaligned
 2294 10fe 5C60     		str	r4, [r3, #4]	@ unaligned
 2295 1100 9860     		str	r0, [r3, #8]	@ unaligned
 2296 1102 D960     		str	r1, [r3, #12]	@ unaligned
 2297 1104 127C     		ldrb	r2, [r2, #16]
 2298 1106 1A74     		strb	r2, [r3, #16]
 616:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].DAGrank                = DEFAULTDAGRANK;
 2299              		.loc 1 616 0
 2300 1108 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2301 110a 40F20002 		movw	r2, #:lower16:neighbors_vars
 2302 110e C0F20002 		movt	r2, #:upper16:neighbors_vars
 2303 1112 0B46     		mov	r3, r1
 2304 1114 4FEA0313 		lsl	r3, r3, #4
 2305 1118 5B18     		adds	r3, r3, r1
 2306 111a 4FEA4303 		lsl	r3, r3, #1
 2307 111e D318     		adds	r3, r2, r3
 2308 1120 03F11003 		add	r3, r3, #16
 2309 1124 4FF0FF32 		mov	r2, #-1
 2310 1128 5A71     		strb	r2, [r3, #5]
 2311 112a 4FF0FF32 		mov	r2, #-1
 2312 112e 9A71     		strb	r2, [r3, #6]
 617:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].rssi                   = rssi;
 2313              		.loc 1 617 0
 2314 1130 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2315 1132 40F20002 		movw	r2, #:lower16:neighbors_vars
 2316 1136 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2317 113a 0B46     		mov	r3, r1
 2318 113c 4FEA0313 		lsl	r3, r3, #4
 2319 1140 5B18     		adds	r3, r3, r1
 2320 1142 4FEA4303 		lsl	r3, r3, #1
 2321 1146 D318     		adds	r3, r2, r3
 2322 1148 03F11003 		add	r3, r3, #16
 2323 114c FA7A     		ldrb	r2, [r7, #11]
 2324 114e DA71     		strb	r2, [r3, #7]
 618:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].numRx                  = 1;
 2325              		.loc 1 618 0
 2326 1150 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2327 1152 40F20002 		movw	r2, #:lower16:neighbors_vars
 2328 1156 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2329 115a 0B46     		mov	r3, r1
 2330 115c 4FEA0313 		lsl	r3, r3, #4
 2331 1160 5B18     		adds	r3, r3, r1
 2332 1162 4FEA4303 		lsl	r3, r3, #1
 2333 1166 D318     		adds	r3, r2, r3
 2334 1168 03F11803 		add	r3, r3, #24
 2335 116c 4FF00102 		mov	r2, #1
 2336 1170 1A70     		strb	r2, [r3, #0]
 619:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].numTx                  = 0;
 2337              		.loc 1 619 0
 2338 1172 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2339 1174 40F20002 		movw	r2, #:lower16:neighbors_vars
 2340 1178 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2341 117c 0B46     		mov	r3, r1
 2342 117e 4FEA0313 		lsl	r3, r3, #4
 2343 1182 5B18     		adds	r3, r3, r1
 2344 1184 4FEA4303 		lsl	r3, r3, #1
 2345 1188 D318     		adds	r3, r2, r3
 2346 118a 03F11803 		add	r3, r3, #24
 2347 118e 4FF00002 		mov	r2, #0
 2348 1192 5A70     		strb	r2, [r3, #1]
 620:openstack/02b-MAChigh/neighbors.c ****             neighbors_vars.neighbors[i].numTxACK               = 0;
 2349              		.loc 1 620 0
 2350 1194 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2351 1196 40F20002 		movw	r2, #:lower16:neighbors_vars
 2352 119a C0F20002 		movt	r2, #:upper16:neighbors_vars
 2353 119e 0B46     		mov	r3, r1
 2354 11a0 4FEA0313 		lsl	r3, r3, #4
 2355 11a4 5B18     		adds	r3, r3, r1
 2356 11a6 4FEA4303 		lsl	r3, r3, #1
 2357 11aa D318     		adds	r3, r2, r3
 2358 11ac 03F11803 		add	r3, r3, #24
 2359 11b0 4FF00002 		mov	r2, #0
 2360 11b4 9A70     		strb	r2, [r3, #2]
 621:openstack/02b-MAChigh/neighbors.c ****             memcpy(&neighbors_vars.neighbors[i].asn,asnTimestamp,sizeof(asn_t));
 2361              		.loc 1 621 0
 2362 11b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2363 11b8 1346     		mov	r3, r2
 2364 11ba 4FEA0313 		lsl	r3, r3, #4
 2365 11be 9B18     		adds	r3, r3, r2
 2366 11c0 4FEA4303 		lsl	r3, r3, #1
 2367 11c4 03F11802 		add	r2, r3, #24
 2368 11c8 40F20003 		movw	r3, #:lower16:neighbors_vars
 2369 11cc C0F20003 		movt	r3, #:upper16:neighbors_vars
 2370 11d0 D318     		adds	r3, r2, r3
 2371 11d2 03F10403 		add	r3, r3, #4
 2372 11d6 7A68     		ldr	r2, [r7, #4]
 2373 11d8 1168     		ldr	r1, [r2, #0]	@ unaligned
 2374 11da 1960     		str	r1, [r3, #0]	@ unaligned
 2375 11dc 1279     		ldrb	r2, [r2, #4]
 2376 11de 1A71     		strb	r2, [r3, #4]
 622:openstack/02b-MAChigh/neighbors.c ****             //update jp
 623:openstack/02b-MAChigh/neighbors.c ****             if (joinPrioPresent==TRUE){
 2377              		.loc 1 623 0
 2378 11e0 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2379 11e2 002B     		cmp	r3, #0
 2380 11e4 10D0     		beq	.L105
 624:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].joinPrio=joinPrio;
 2381              		.loc 1 624 0
 2382 11e6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2383 11e8 40F20002 		movw	r2, #:lower16:neighbors_vars
 2384 11ec C0F20002 		movt	r2, #:upper16:neighbors_vars
 2385 11f0 0B46     		mov	r3, r1
 2386 11f2 4FEA0313 		lsl	r3, r3, #4
 2387 11f6 5B18     		adds	r3, r3, r1
 2388 11f8 4FEA4303 		lsl	r3, r3, #1
 2389 11fc D318     		adds	r3, r2, r3
 2390 11fe 03F12003 		add	r3, r3, #32
 2391 1202 97F82820 		ldrb	r2, [r7, #40]
 2392 1206 5A70     		strb	r2, [r3, #1]
 2393              	.L105:
 625:openstack/02b-MAChigh/neighbors.c ****             }
 626:openstack/02b-MAChigh/neighbors.c ****             
 627:openstack/02b-MAChigh/neighbors.c ****             // do I already have a preferred parent ? -- TODO change to use JP
 628:openstack/02b-MAChigh/neighbors.c ****             iHaveAPreferedParent = FALSE;
 2394              		.loc 1 628 0
 2395 1208 4FF00003 		mov	r3, #0
 2396 120c 7B75     		strb	r3, [r7, #21]
 629:openstack/02b-MAChigh/neighbors.c ****             for (j=0;j<MAXNUMNEIGHBORS;j++) {
 2397              		.loc 1 629 0
 2398 120e 4FF00003 		mov	r3, #0
 2399 1212 BB75     		strb	r3, [r7, #22]
 2400 1214 15E0     		b	.L106
 2401              	.L108:
 630:openstack/02b-MAChigh/neighbors.c ****                if (neighbors_vars.neighbors[j].parentPreference==MAXPREFERENCE) {
 2402              		.loc 1 630 0
 2403 1216 B97D     		ldrb	r1, [r7, #22]	@ zero_extendqisi2
 2404 1218 40F20002 		movw	r2, #:lower16:neighbors_vars
 2405 121c C0F20002 		movt	r2, #:upper16:neighbors_vars
 2406 1220 0B46     		mov	r3, r1
 2407 1222 4FEA0313 		lsl	r3, r3, #4
 2408 1226 5B18     		adds	r3, r3, r1
 2409 1228 4FEA4303 		lsl	r3, r3, #1
 2410 122c D318     		adds	r3, r2, r3
 2411 122e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2412 1230 022B     		cmp	r3, #2
 2413 1232 02D1     		bne	.L107
 631:openstack/02b-MAChigh/neighbors.c ****                   iHaveAPreferedParent = TRUE;
 2414              		.loc 1 631 0
 2415 1234 4FF00103 		mov	r3, #1
 2416 1238 7B75     		strb	r3, [r7, #21]
 2417              	.L107:
 629:openstack/02b-MAChigh/neighbors.c ****             for (j=0;j<MAXNUMNEIGHBORS;j++) {
 2418              		.loc 1 629 0
 2419 123a BB7D     		ldrb	r3, [r7, #22]
 2420 123c 03F10103 		add	r3, r3, #1
 2421 1240 BB75     		strb	r3, [r7, #22]
 2422              	.L106:
 629:openstack/02b-MAChigh/neighbors.c ****             for (j=0;j<MAXNUMNEIGHBORS;j++) {
 2423              		.loc 1 629 0 is_stmt 0 discriminator 1
 2424 1242 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2425 1244 092B     		cmp	r3, #9
 2426 1246 E6D9     		bls	.L108
 632:openstack/02b-MAChigh/neighbors.c ****                }
 633:openstack/02b-MAChigh/neighbors.c ****             }
 634:openstack/02b-MAChigh/neighbors.c ****             // if I have none, and I'm not DAGroot, the new neighbor is my preferred
 635:openstack/02b-MAChigh/neighbors.c ****             if (iHaveAPreferedParent==FALSE && idmanager_getIsDAGroot()==FALSE) {      
 2427              		.loc 1 635 0 is_stmt 1
 2428 1248 7B7D     		ldrb	r3, [r7, #21]
 2429 124a 83F00103 		eor	r3, r3, #1
 2430 124e DBB2     		uxtb	r3, r3
 2431 1250 002B     		cmp	r3, #0
 2432 1252 20D0     		beq	.L112
 2433              		.loc 1 635 0 is_stmt 0 discriminator 1
 2434 1254 FFF7FEFF 		bl	idmanager_getIsDAGroot
 2435 1258 0346     		mov	r3, r0
 2436 125a 83F00103 		eor	r3, r3, #1
 2437 125e DBB2     		uxtb	r3, r3
 2438 1260 002B     		cmp	r3, #0
 2439 1262 18D0     		beq	.L112
 636:openstack/02b-MAChigh/neighbors.c ****                neighbors_vars.neighbors[i].parentPreference     = MAXPREFERENCE;
 2440              		.loc 1 636 0 is_stmt 1
 2441 1264 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 2442 1266 40F20002 		movw	r2, #:lower16:neighbors_vars
 2443 126a C0F20002 		movt	r2, #:upper16:neighbors_vars
 2444 126e 0B46     		mov	r3, r1
 2445 1270 4FEA0313 		lsl	r3, r3, #4
 2446 1274 5B18     		adds	r3, r3, r1
 2447 1276 4FEA4303 		lsl	r3, r3, #1
 2448 127a D318     		adds	r3, r2, r3
 2449 127c 4FF00202 		mov	r2, #2
 2450 1280 5A70     		strb	r2, [r3, #1]
 637:openstack/02b-MAChigh/neighbors.c ****             }
 638:openstack/02b-MAChigh/neighbors.c ****             break;
 2451              		.loc 1 638 0
 2452 1282 08E0     		b	.L112
 2453              	.L104:
 639:openstack/02b-MAChigh/neighbors.c ****          }
 640:openstack/02b-MAChigh/neighbors.c ****          i++;
 2454              		.loc 1 640 0
 2455 1284 FB7D     		ldrb	r3, [r7, #23]
 2456 1286 03F10103 		add	r3, r3, #1
 2457 128a FB75     		strb	r3, [r7, #23]
 2458              	.L103:
 606:openstack/02b-MAChigh/neighbors.c ****       while(i<MAXNUMNEIGHBORS) {
 2459              		.loc 1 606 0 discriminator 1
 2460 128c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2461 128e 092B     		cmp	r3, #9
 2462 1290 7FF6D2AE 		bls	.L111
 2463 1294 00E0     		b	.L110
 2464              	.L112:
 638:openstack/02b-MAChigh/neighbors.c ****             break;
 2465              		.loc 1 638 0
 2466 1296 00BF     		nop
 2467              	.L110:
 641:openstack/02b-MAChigh/neighbors.c ****       }
 642:openstack/02b-MAChigh/neighbors.c ****       if (i==MAXNUMNEIGHBORS) {
 2468              		.loc 1 642 0
 2469 1298 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2470 129a 0A2B     		cmp	r3, #10
 2471 129c 0AD1     		bne	.L100
 643:openstack/02b-MAChigh/neighbors.c ****          openserial_printError(COMPONENT_NEIGHBORS,ERR_NEIGHBORS_FULL,
 2472              		.loc 1 643 0
 2473 129e 4FF00D00 		mov	r0, #13
 2474 12a2 4FF01401 		mov	r1, #20
 2475 12a6 4FF00A02 		mov	r2, #10
 2476 12aa 4FF00003 		mov	r3, #0
 2477 12ae FFF7FEFF 		bl	openserial_printError
 644:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)MAXNUMNEIGHBORS,
 645:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)0);
 646:openstack/02b-MAChigh/neighbors.c ****          return;
 2478              		.loc 1 646 0
 2479 12b2 00BF     		nop
 2480              	.L100:
 647:openstack/02b-MAChigh/neighbors.c ****       }
 648:openstack/02b-MAChigh/neighbors.c ****    }
 649:openstack/02b-MAChigh/neighbors.c **** }
 2481              		.loc 1 649 0
 2482 12b4 07F11807 		add	r7, r7, #24
 2483 12b8 BD46     		mov	sp, r7
 2484 12ba B0BD     		pop	{r4, r5, r7, pc}
 2485              		.cfi_endproc
 2486              	.LFE16:
 2488              		.align	2
 2489              		.global	isNeighbor
 2490              		.thumb
 2491              		.thumb_func
 2493              	isNeighbor:
 2494              	.LFB17:
 650:openstack/02b-MAChigh/neighbors.c **** 
 651:openstack/02b-MAChigh/neighbors.c **** bool isNeighbor(open_addr_t* neighbor) {
 2495              		.loc 1 651 0
 2496              		.cfi_startproc
 2497              		@ args = 0, pretend = 0, frame = 16
 2498              		@ frame_needed = 1, uses_anonymous_args = 0
 2499 12bc 80B5     		push	{r7, lr}
 2500              	.LCFI49:
 2501              		.cfi_def_cfa_offset 8
 2502              		.cfi_offset 7, -8
 2503              		.cfi_offset 14, -4
 2504 12be 84B0     		sub	sp, sp, #16
 2505              	.LCFI50:
 2506              		.cfi_def_cfa_offset 24
 2507 12c0 00AF     		add	r7, sp, #0
 2508              	.LCFI51:
 2509              		.cfi_def_cfa_register 7
 2510 12c2 7860     		str	r0, [r7, #4]
 652:openstack/02b-MAChigh/neighbors.c ****    uint8_t i=0;
 2511              		.loc 1 652 0
 2512 12c4 4FF00003 		mov	r3, #0
 2513 12c8 FB73     		strb	r3, [r7, #15]
 653:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 2514              		.loc 1 653 0
 2515 12ca 4FF00003 		mov	r3, #0
 2516 12ce FB73     		strb	r3, [r7, #15]
 2517 12d0 0EE0     		b	.L114
 2518              	.L117:
 654:openstack/02b-MAChigh/neighbors.c ****       if (isThisRowMatching(neighbor,i)) {
 2519              		.loc 1 654 0
 2520 12d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2521 12d4 7868     		ldr	r0, [r7, #4]
 2522 12d6 1946     		mov	r1, r3
 2523 12d8 FFF7FEFF 		bl	isThisRowMatching
 2524 12dc 0346     		mov	r3, r0
 2525 12de 002B     		cmp	r3, #0
 2526 12e0 02D0     		beq	.L115
 655:openstack/02b-MAChigh/neighbors.c ****          return TRUE;
 2527              		.loc 1 655 0
 2528 12e2 4FF00103 		mov	r3, #1
 2529 12e6 08E0     		b	.L116
 2530              	.L115:
 653:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 2531              		.loc 1 653 0
 2532 12e8 FB7B     		ldrb	r3, [r7, #15]
 2533 12ea 03F10103 		add	r3, r3, #1
 2534 12ee FB73     		strb	r3, [r7, #15]
 2535              	.L114:
 653:openstack/02b-MAChigh/neighbors.c ****    for (i=0;i<MAXNUMNEIGHBORS;i++) {
 2536              		.loc 1 653 0 is_stmt 0 discriminator 1
 2537 12f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2538 12f2 092B     		cmp	r3, #9
 2539 12f4 EDD9     		bls	.L117
 656:openstack/02b-MAChigh/neighbors.c ****       }
 657:openstack/02b-MAChigh/neighbors.c ****    }
 658:openstack/02b-MAChigh/neighbors.c ****    return FALSE;
 2540              		.loc 1 658 0 is_stmt 1
 2541 12f6 4FF00003 		mov	r3, #0
 2542              	.L116:
 659:openstack/02b-MAChigh/neighbors.c **** }
 2543              		.loc 1 659 0
 2544 12fa 1846     		mov	r0, r3
 2545 12fc 07F11007 		add	r7, r7, #16
 2546 1300 BD46     		mov	sp, r7
 2547 1302 80BD     		pop	{r7, pc}
 2548              		.cfi_endproc
 2549              	.LFE17:
 2551              		.align	2
 2552              		.global	removeNeighbor
 2553              		.thumb
 2554              		.thumb_func
 2556              	removeNeighbor:
 2557              	.LFB18:
 660:openstack/02b-MAChigh/neighbors.c **** 
 661:openstack/02b-MAChigh/neighbors.c **** void removeNeighbor(uint8_t neighborIndex) {
 2558              		.loc 1 661 0
 2559              		.cfi_startproc
 2560              		@ args = 0, pretend = 0, frame = 8
 2561              		@ frame_needed = 1, uses_anonymous_args = 0
 2562              		@ link register save eliminated.
 2563 1304 80B4     		push	{r7}
 2564              	.LCFI52:
 2565              		.cfi_def_cfa_offset 4
 2566              		.cfi_offset 7, -4
 2567 1306 83B0     		sub	sp, sp, #12
 2568              	.LCFI53:
 2569              		.cfi_def_cfa_offset 16
 2570 1308 00AF     		add	r7, sp, #0
 2571              	.LCFI54:
 2572              		.cfi_def_cfa_register 7
 2573 130a 0346     		mov	r3, r0
 2574 130c FB71     		strb	r3, [r7, #7]
 662:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].used                      = FALSE;
 2575              		.loc 1 662 0
 2576 130e F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2577 1310 40F20002 		movw	r2, #:lower16:neighbors_vars
 2578 1314 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2579 1318 0B46     		mov	r3, r1
 2580 131a 4FEA0313 		lsl	r3, r3, #4
 2581 131e 5B18     		adds	r3, r3, r1
 2582 1320 4FEA4303 		lsl	r3, r3, #1
 2583 1324 D318     		adds	r3, r2, r3
 2584 1326 4FF00002 		mov	r2, #0
 2585 132a 1A70     		strb	r2, [r3, #0]
 663:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].parentPreference          = 0;
 2586              		.loc 1 663 0
 2587 132c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2588 132e 40F20002 		movw	r2, #:lower16:neighbors_vars
 2589 1332 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2590 1336 0B46     		mov	r3, r1
 2591 1338 4FEA0313 		lsl	r3, r3, #4
 2592 133c 5B18     		adds	r3, r3, r1
 2593 133e 4FEA4303 		lsl	r3, r3, #1
 2594 1342 D318     		adds	r3, r2, r3
 2595 1344 4FF00002 		mov	r2, #0
 2596 1348 5A70     		strb	r2, [r3, #1]
 664:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].stableNeighbor            = FALSE;
 2597              		.loc 1 664 0
 2598 134a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2599 134c 40F20002 		movw	r2, #:lower16:neighbors_vars
 2600 1350 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2601 1354 0B46     		mov	r3, r1
 2602 1356 4FEA0313 		lsl	r3, r3, #4
 2603 135a 5B18     		adds	r3, r3, r1
 2604 135c 4FEA4303 		lsl	r3, r3, #1
 2605 1360 D318     		adds	r3, r2, r3
 2606 1362 4FF00002 		mov	r2, #0
 2607 1366 9A70     		strb	r2, [r3, #2]
 665:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].switchStabilityCounter    = 0;
 2608              		.loc 1 665 0
 2609 1368 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2610 136a 40F20002 		movw	r2, #:lower16:neighbors_vars
 2611 136e C0F20002 		movt	r2, #:upper16:neighbors_vars
 2612 1372 0B46     		mov	r3, r1
 2613 1374 4FEA0313 		lsl	r3, r3, #4
 2614 1378 5B18     		adds	r3, r3, r1
 2615 137a 4FEA4303 		lsl	r3, r3, #1
 2616 137e D318     		adds	r3, r2, r3
 2617 1380 4FF00002 		mov	r2, #0
 2618 1384 DA70     		strb	r2, [r3, #3]
 666:openstack/02b-MAChigh/neighbors.c ****    //neighbors_vars.neighbors[neighborIndex].addr_16b.type           = ADDR_NONE; // to save RAM
 667:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].addr_64b.type             = ADDR_NONE;
 2619              		.loc 1 667 0
 2620 1386 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2621 1388 40F20002 		movw	r2, #:lower16:neighbors_vars
 2622 138c C0F20002 		movt	r2, #:upper16:neighbors_vars
 2623 1390 0B46     		mov	r3, r1
 2624 1392 4FEA0313 		lsl	r3, r3, #4
 2625 1396 5B18     		adds	r3, r3, r1
 2626 1398 4FEA4303 		lsl	r3, r3, #1
 2627 139c D318     		adds	r3, r2, r3
 2628 139e 4FF00002 		mov	r2, #0
 2629 13a2 1A71     		strb	r2, [r3, #4]
 668:openstack/02b-MAChigh/neighbors.c ****    //neighbors_vars.neighbors[neighborIndex].addr_128b.type          = ADDR_NONE; // to save RAM
 669:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].DAGrank                   = DEFAULTDAGRANK;
 2630              		.loc 1 669 0
 2631 13a4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2632 13a6 40F20002 		movw	r2, #:lower16:neighbors_vars
 2633 13aa C0F20002 		movt	r2, #:upper16:neighbors_vars
 2634 13ae 0B46     		mov	r3, r1
 2635 13b0 4FEA0313 		lsl	r3, r3, #4
 2636 13b4 5B18     		adds	r3, r3, r1
 2637 13b6 4FEA4303 		lsl	r3, r3, #1
 2638 13ba D318     		adds	r3, r2, r3
 2639 13bc 03F11003 		add	r3, r3, #16
 2640 13c0 4FF0FF32 		mov	r2, #-1
 2641 13c4 5A71     		strb	r2, [r3, #5]
 2642 13c6 4FF0FF32 		mov	r2, #-1
 2643 13ca 9A71     		strb	r2, [r3, #6]
 670:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].rssi                      = 0;
 2644              		.loc 1 670 0
 2645 13cc F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2646 13ce 40F20002 		movw	r2, #:lower16:neighbors_vars
 2647 13d2 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2648 13d6 0B46     		mov	r3, r1
 2649 13d8 4FEA0313 		lsl	r3, r3, #4
 2650 13dc 5B18     		adds	r3, r3, r1
 2651 13de 4FEA4303 		lsl	r3, r3, #1
 2652 13e2 D318     		adds	r3, r2, r3
 2653 13e4 03F11003 		add	r3, r3, #16
 2654 13e8 4FF00002 		mov	r2, #0
 2655 13ec DA71     		strb	r2, [r3, #7]
 671:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].numRx                     = 0;
 2656              		.loc 1 671 0
 2657 13ee F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2658 13f0 40F20002 		movw	r2, #:lower16:neighbors_vars
 2659 13f4 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2660 13f8 0B46     		mov	r3, r1
 2661 13fa 4FEA0313 		lsl	r3, r3, #4
 2662 13fe 5B18     		adds	r3, r3, r1
 2663 1400 4FEA4303 		lsl	r3, r3, #1
 2664 1404 D318     		adds	r3, r2, r3
 2665 1406 03F11803 		add	r3, r3, #24
 2666 140a 4FF00002 		mov	r2, #0
 2667 140e 1A70     		strb	r2, [r3, #0]
 672:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].numTx                     = 0;
 2668              		.loc 1 672 0
 2669 1410 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2670 1412 40F20002 		movw	r2, #:lower16:neighbors_vars
 2671 1416 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2672 141a 0B46     		mov	r3, r1
 2673 141c 4FEA0313 		lsl	r3, r3, #4
 2674 1420 5B18     		adds	r3, r3, r1
 2675 1422 4FEA4303 		lsl	r3, r3, #1
 2676 1426 D318     		adds	r3, r2, r3
 2677 1428 03F11803 		add	r3, r3, #24
 2678 142c 4FF00002 		mov	r2, #0
 2679 1430 5A70     		strb	r2, [r3, #1]
 673:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].numTxACK                  = 0;
 2680              		.loc 1 673 0
 2681 1432 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2682 1434 40F20002 		movw	r2, #:lower16:neighbors_vars
 2683 1438 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2684 143c 0B46     		mov	r3, r1
 2685 143e 4FEA0313 		lsl	r3, r3, #4
 2686 1442 5B18     		adds	r3, r3, r1
 2687 1444 4FEA4303 		lsl	r3, r3, #1
 2688 1448 D318     		adds	r3, r2, r3
 2689 144a 03F11803 		add	r3, r3, #24
 2690 144e 4FF00002 		mov	r2, #0
 2691 1452 9A70     		strb	r2, [r3, #2]
 674:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].asn.bytes0and1            = 0;
 2692              		.loc 1 674 0
 2693 1454 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2694 1456 40F20002 		movw	r2, #:lower16:neighbors_vars
 2695 145a C0F20002 		movt	r2, #:upper16:neighbors_vars
 2696 145e 0B46     		mov	r3, r1
 2697 1460 4FEA0313 		lsl	r3, r3, #4
 2698 1464 5B18     		adds	r3, r3, r1
 2699 1466 4FEA4303 		lsl	r3, r3, #1
 2700 146a D318     		adds	r3, r2, r3
 2701 146c 03F11803 		add	r3, r3, #24
 2702 1470 4FF00002 		mov	r2, #0
 2703 1474 DA71     		strb	r2, [r3, #7]
 2704 1476 4FF00002 		mov	r2, #0
 2705 147a 1A72     		strb	r2, [r3, #8]
 675:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].asn.bytes2and3            = 0;
 2706              		.loc 1 675 0
 2707 147c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2708 147e 40F20002 		movw	r2, #:lower16:neighbors_vars
 2709 1482 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2710 1486 0B46     		mov	r3, r1
 2711 1488 4FEA0313 		lsl	r3, r3, #4
 2712 148c 5B18     		adds	r3, r3, r1
 2713 148e 4FEA4303 		lsl	r3, r3, #1
 2714 1492 D318     		adds	r3, r2, r3
 2715 1494 03F11803 		add	r3, r3, #24
 2716 1498 4FF00002 		mov	r2, #0
 2717 149c 5A71     		strb	r2, [r3, #5]
 2718 149e 4FF00002 		mov	r2, #0
 2719 14a2 9A71     		strb	r2, [r3, #6]
 676:openstack/02b-MAChigh/neighbors.c ****    neighbors_vars.neighbors[neighborIndex].asn.byte4                 = 0;
 2720              		.loc 1 676 0
 2721 14a4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2722 14a6 40F20002 		movw	r2, #:lower16:neighbors_vars
 2723 14aa C0F20002 		movt	r2, #:upper16:neighbors_vars
 2724 14ae 0B46     		mov	r3, r1
 2725 14b0 4FEA0313 		lsl	r3, r3, #4
 2726 14b4 5B18     		adds	r3, r3, r1
 2727 14b6 4FEA4303 		lsl	r3, r3, #1
 2728 14ba D318     		adds	r3, r2, r3
 2729 14bc 03F11803 		add	r3, r3, #24
 2730 14c0 4FF00002 		mov	r2, #0
 2731 14c4 1A71     		strb	r2, [r3, #4]
 677:openstack/02b-MAChigh/neighbors.c **** }
 2732              		.loc 1 677 0
 2733 14c6 07F10C07 		add	r7, r7, #12
 2734 14ca BD46     		mov	sp, r7
 2735 14cc 80BC     		pop	{r7}
 2736 14ce 7047     		bx	lr
 2737              		.cfi_endproc
 2738              	.LFE18:
 2740              		.align	2
 2741              		.global	isThisRowMatching
 2742              		.thumb
 2743              		.thumb_func
 2745              	isThisRowMatching:
 2746              	.LFB19:
 678:openstack/02b-MAChigh/neighbors.c **** 
 679:openstack/02b-MAChigh/neighbors.c **** //=========================== helpers =========================================
 680:openstack/02b-MAChigh/neighbors.c **** 
 681:openstack/02b-MAChigh/neighbors.c **** bool isThisRowMatching(open_addr_t* address, uint8_t rowNumber) {
 2747              		.loc 1 681 0
 2748              		.cfi_startproc
 2749              		@ args = 0, pretend = 0, frame = 8
 2750              		@ frame_needed = 1, uses_anonymous_args = 0
 2751 14d0 80B5     		push	{r7, lr}
 2752              	.LCFI55:
 2753              		.cfi_def_cfa_offset 8
 2754              		.cfi_offset 7, -8
 2755              		.cfi_offset 14, -4
 2756 14d2 82B0     		sub	sp, sp, #8
 2757              	.LCFI56:
 2758              		.cfi_def_cfa_offset 16
 2759 14d4 00AF     		add	r7, sp, #0
 2760              	.LCFI57:
 2761              		.cfi_def_cfa_register 7
 2762 14d6 7860     		str	r0, [r7, #4]
 2763 14d8 0B46     		mov	r3, r1
 2764 14da FB70     		strb	r3, [r7, #3]
 682:openstack/02b-MAChigh/neighbors.c ****    switch (address->type) {
 2765              		.loc 1 682 0
 2766 14dc 7B68     		ldr	r3, [r7, #4]
 2767 14de 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2768 14e0 022B     		cmp	r3, #2
 2769 14e2 2CD1     		bne	.L125
 2770              	.L121:
 683:openstack/02b-MAChigh/neighbors.c ****       case ADDR_64B:
 684:openstack/02b-MAChigh/neighbors.c ****          return neighbors_vars.neighbors[rowNumber].used &&
 2771              		.loc 1 684 0
 2772 14e4 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2773 14e6 40F20002 		movw	r2, #:lower16:neighbors_vars
 2774 14ea C0F20002 		movt	r2, #:upper16:neighbors_vars
 2775 14ee 0B46     		mov	r3, r1
 2776 14f0 4FEA0313 		lsl	r3, r3, #4
 2777 14f4 5B18     		adds	r3, r3, r1
 2778 14f6 4FEA4303 		lsl	r3, r3, #1
 2779 14fa D318     		adds	r3, r2, r3
 2780 14fc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2781 14fe 002B     		cmp	r3, #0
 2782 1500 17D0     		beq	.L122
 685:openstack/02b-MAChigh/neighbors.c ****                 packetfunctions_sameAddress(address,&neighbors_vars.neighbors[rowNumber].addr_64b);
 2783              		.loc 1 685 0 discriminator 1
 2784 1502 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2785 1504 1346     		mov	r3, r2
 2786 1506 4FEA0313 		lsl	r3, r3, #4
 2787 150a 9B18     		adds	r3, r3, r2
 2788 150c 4FEA4303 		lsl	r3, r3, #1
 2789 1510 40F20002 		movw	r2, #:lower16:neighbors_vars
 2790 1514 C0F20002 		movt	r2, #:upper16:neighbors_vars
 2791 1518 9B18     		adds	r3, r3, r2
 2792 151a 03F10403 		add	r3, r3, #4
 2793 151e 7868     		ldr	r0, [r7, #4]
 2794 1520 1946     		mov	r1, r3
 2795 1522 FFF7FEFF 		bl	packetfunctions_sameAddress
 2796 1526 0346     		mov	r3, r0
 684:openstack/02b-MAChigh/neighbors.c ****          return neighbors_vars.neighbors[rowNumber].used &&
 2797              		.loc 1 684 0 discriminator 1
 2798 1528 002B     		cmp	r3, #0
 2799 152a 02D0     		beq	.L122
 684:openstack/02b-MAChigh/neighbors.c ****          return neighbors_vars.neighbors[rowNumber].used &&
 2800              		.loc 1 684 0 is_stmt 0 discriminator 3
 2801 152c 4FF00103 		mov	r3, #1
 2802 1530 01E0     		b	.L123
 2803              	.L122:
 684:openstack/02b-MAChigh/neighbors.c ****          return neighbors_vars.neighbors[rowNumber].used &&
 2804              		.loc 1 684 0 discriminator 2
 2805 1532 4FF00003 		mov	r3, #0
 2806              	.L123:
 684:openstack/02b-MAChigh/neighbors.c ****          return neighbors_vars.neighbors[rowNumber].used &&
 2807              		.loc 1 684 0 discriminator 4
 2808 1536 03F00103 		and	r3, r3, #1
 2809 153a DBB2     		uxtb	r3, r3
 2810 153c 0CE0     		b	.L124
 2811              	.L125:
 686:openstack/02b-MAChigh/neighbors.c ****       default:
 687:openstack/02b-MAChigh/neighbors.c ****          openserial_printCritical(COMPONENT_NEIGHBORS,ERR_WRONG_ADDR_TYPE,
 688:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)address->type,
 2812              		.loc 1 688 0 is_stmt 1
 2813 153e 7B68     		ldr	r3, [r7, #4]
 2814 1540 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 687:openstack/02b-MAChigh/neighbors.c ****          openserial_printCritical(COMPONENT_NEIGHBORS,ERR_WRONG_ADDR_TYPE,
 2815              		.loc 1 687 0
 2816 1542 4FF00D00 		mov	r0, #13
 2817 1546 4FF03101 		mov	r1, #49
 2818 154a 1A46     		mov	r2, r3
 2819 154c 4FF00303 		mov	r3, #3
 2820 1550 FFF7FEFF 		bl	openserial_printCritical
 689:openstack/02b-MAChigh/neighbors.c ****                                (errorparameter_t)3);
 690:openstack/02b-MAChigh/neighbors.c ****          return FALSE;
 2821              		.loc 1 690 0
 2822 1554 4FF00003 		mov	r3, #0
 2823              	.L124:
 691:openstack/02b-MAChigh/neighbors.c ****    }
 692:openstack/02b-MAChigh/neighbors.c **** }
 2824              		.loc 1 692 0
 2825 1558 1846     		mov	r0, r3
 2826 155a 07F10807 		add	r7, r7, #8
 2827 155e BD46     		mov	sp, r7
 2828 1560 80BD     		pop	{r7, pc}
 2829              		.cfi_endproc
 2830              	.LFE19:
 2832              	.Letext0:
 2833              		.file 2 "/opt/gcc-arm-none-eabi-4_7-2013q3/bin/../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none
 2834              		.file 3 "inc/opendefs.h"
 2835              		.file 4 "openstack/03b-IPv6/icmpv6rpl.h"
 2836              		.file 5 "openstack/02b-MAChigh/neighbors.h"
 2837              		.file 6 "bsp/boards/OpenMote-CC2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:00000000 neighbors.c
     /tmp/ccxeI6wh.s:19     .rodata:00000000 $d
     /tmp/ccxeI6wh.s:22     .rodata:00000000 rreg_uriquery
     /tmp/ccxeI6wh.s:27     .rodata:00000008 infoBoardname
     /tmp/ccxeI6wh.s:32     .rodata:00000010 infouCName
     /tmp/ccxeI6wh.s:37     .rodata:00000018 infoRadioName
     /tmp/ccxeI6wh.s:42     .rodata:00000024 infoStackName
     /tmp/ccxeI6wh.s:47     .rodata:00000030 all_routers_multicast
                            *COM*:0000015c neighbors_vars
     /tmp/ccxeI6wh.s:66     .text:00000000 $t
     /tmp/ccxeI6wh.s:71     .text:00000000 neighbors_init
     /tmp/ccxeI6wh.s:120    .text:00000048 neighbors_getMyDAGrank
     /tmp/ccxeI6wh.s:151    .text:00000060 neighbors_getNumNeighbors
     /tmp/ccxeI6wh.s:218    .text:000000b8 neighbors_getPreferredParentEui64
     /tmp/ccxeI6wh.s:448    .text:00000288 neighbors_getKANeighbor
     /tmp/ccxeI6wh.s:575    .text:00000364 neighbors_isStableNeighbor
     /tmp/ccxeI6wh.s:2745   .text:000014d0 isThisRowMatching
     /tmp/ccxeI6wh.s:682    .text:00000418 neighbors_isPreferredParent
     /tmp/ccxeI6wh.s:763    .text:00000488 neighbors_isNeighborWithLowerDAGrank
     /tmp/ccxeI6wh.s:836    .text:000004f8 neighbors_isNeighborWithHigherDAGrank
     /tmp/ccxeI6wh.s:909    .text:00000568 neighbors_indicateRx
     /tmp/ccxeI6wh.s:2165   .text:00000fec registerNewNeighbor
     /tmp/ccxeI6wh.s:1256   .text:00000888 neighbors_indicateTx
     /tmp/ccxeI6wh.s:1488   .text:00000a90 neighbors_indicateRxDIO
     /tmp/ccxeI6wh.s:2493   .text:000012bc isNeighbor
     /tmp/ccxeI6wh.s:1755   .text:00000ca0 neighbors_updateMyDAGrankAndNeighborPreference
     /tmp/ccxeI6wh.s:1676   .text:00000c34 neighbors_getNeighbor
     /tmp/ccxeI6wh.s:1988   .text:00000ea0 neighbors_removeOld
     /tmp/ccxeI6wh.s:2556   .text:00001304 removeNeighbor
     /tmp/ccxeI6wh.s:2068   .text:00000f20 debugPrint_neighbors
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e96eee74da26538b12ac9582e3798382
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.toolchain_defs.h.2.e4ebbe6e0a48032a9b79077dc42e1ffd
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:00000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:00000000 wm4.board_info.h.21.2f0cbb5ab4c556c54c487f727dca8532
                           .group:00000000 wm4.opendefs.h.19.05852eb648ac65e48c7817e5cbf03346
                           .group:00000000 wm4.opentimers.h.8.044f2d040a134cdb0ddb58adfc2508be
                           .group:00000000 wm4.icmpv6rpl.h.15.89c5061c19a4811537f699fd2b74755c
                           .group:00000000 wm4.neighbors.h.15.9f35f180a0332d1bc442efb0ec51905c
                           .group:00000000 wm4.schedule.h.2.74f699399ee9cbf3b59178f1204d8511
                           .group:00000000 wm4.processIE.h.2.1848f1e3c653035e9779472584ce0441
                           .group:00000000 wm4.IEEE802154Ecsl.h.21.a46c6cdefbea13cd7501756681c86a21
                           .group:00000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:00000000 wm4.openserial.h.8.8c63e3800d2936b44b5370ce1aae62b7

UNDEFINED SYMBOLS
memset
idmanager_getIsDAGroot
ieee154e_asnDiff
packetfunctions_ip128bToMac64b
openserial_printCritical
IntMasterDisable
IntMasterEnable
packetfunctions_isBroadcastMulticast
openserial_printError
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fadd
__aeabi_fmul
__aeabi_f2uiz
openserial_printStatus
packetfunctions_sameAddress
